
param(
    [Switch] $openSite
)

# Embedded file data
$fileDatas = @{
	'/favicon.ico' = @{ 'Content' = 'ontentType' = 'image/x-icon' }
	'/index.html' = @{ 'Content' = 'PCFkb2N0eXBlIGh0bWw+PGh0bWwgbGFuZz0iIj48aGVhZD48bWV0YSBjaGFyc2V0PSJ1dGYtOCI+PG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj48bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLGluaXRpYWwtc2NhbGU9MSI+PGxpbmsgcmVsPSJpY29uIiBocmVmPSIvZmF2aWNvbi5pY28iPjx0aXRsZT5DbHVzdGVyIFdhdGNoZXI8L3RpdGxlPjxzY3JpcHQgZGVmZXI9ImRlZmVyIiBzcmM9Ii9qcy9jaHVuay12ZW5kb3JzLjc3MzkwZGMyLmpzIj48L3NjcmlwdD48c2NyaXB0IGRlZmVyPSJkZWZlciIgc3JjPSIvanMvYXBwLjI3ZTI3Y2YwLmpzIj48L3NjcmlwdD48bGluayBocmVmPSIvY3NzL2FwcC5jZTQ3ZTMyOC5jc3MiIHJlbD0ic3R5bGVzaGVldCI+PC9oZWFkPjxib2R5Pjxub3NjcmlwdD48c3Ryb25nPldlJ3JlIHNvcnJ5IGJ1dCBjbHVzdGVyLXdhdGNoZXIgZG9lc24ndCB3b3JrIHByb3Blcmx5IHdpdGhvdXQgSmF2YVNjcmlwdCBlbmFibGVkLiBQbGVhc2UgZW5hYmxlIGl0IHRvIGNvbnRpbnVlLjwvc3Ryb25nPjwvbm9zY3JpcHQ+PGRpdiBpZD0iYXBwIj48L2Rpdj48L2JvZHk+PC9odG1sPg=='; 'ContentType' = 'text/html' }
	'/css/app.ce47e328.css' = @{ 'Content' = 'LmNhcmRbZGF0YS12LTY5ZWYyYTMwXXtwYWRkaW5nOjZweDt3aWR0aDoyMDBweDtwb3NpdGlvbjpyZWxhdGl2ZTtjb2xvcjojZmZmO2ZvbnQtc2l6ZToxN3B4O2ZvbnQtZmFtaWx5OlBvcHBpbnMsc2Fucy1zZXJpZjtib3gtc2hhZG93OjJweCAycHggMTBweCAwIHJnYmEoMCwwLDAsLjUpO2JvcmRlci1yYWRpdXM6MTBweDtib3JkZXI6MXB4IHNvbGlkICNmZmY7YmFja2dyb3VuZC1jb2xvcjojMTgxODE4Oy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZX0uY2FyZCAudGl0bGUtYmFyW2RhdGEtdi02OWVmMmEzMF17ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYXJvdW5kfS5jYXJkIC50aXRsZS1iYXIgLnRpdGxlW2RhdGEtdi02OWVmMmEzMF17dGV4dC1hbGlnbjpjZW50ZXI7Zm9udC13ZWlnaHQ6NzAwO2ZvbnQtc2l6ZToyMXB4O21hcmdpbjo1cHg7cGFkZGluZzo1cHggMTBweDtjdXJzb3I6cG9pbnRlcjtib3JkZXItcmFkaXVzOjZweDt0cmFuc2l0aW9uOmJhY2tncm91bmQtY29sb3IgLjE1c30uY2FyZCAudGl0bGUtYmFyIC50aXRsZVtkYXRhLXYtNjllZjJhMzBdOmhvdmVye2JhY2tncm91bmQtY29sb3I6IzUxNTE1MTtib3gtc2hhZG93OjJweCAycHggMTBweCAwIHJnYmEoMCwwLDAsLjUpfS5jYXJkIC50aXRsZS1iYXIgLmJ0bltkYXRhLXYtNjllZjJhMzBde3BhZGRpbmc6N3B4O3dpZHRoOjIwcHg7aGVpZ2h0OjIwcHg7Ym9yZGVyLXJhZGl1czo2cHg7Y3Vyc29yOnBvaW50ZXI7dHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIC4xNXN9LmNhcmQgLnRpdGxlLWJhciAuYnRuW2RhdGEtdi02OWVmMmEzMF06aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojNTE1MTUxO2JveC1zaGFkb3c6MnB4IDJweCAxMHB4IDAgcmdiYSgwLDAsMCwuNSl9LmNhcmQgLnRpdGxlLWJhciAucmVmcmVzaGluZ1tkYXRhLXYtNjllZjJhMzBde2JhY2tncm91bmQtY29sb3I6I2M2OGUyNn0uY2FyZCAudGl0bGUtYmFyIC5yZWZyZXNoaW5nW2RhdGEtdi02OWVmMmEzMF06aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZWViNDQ5fS5jYXJkIC5wcm9wc1tkYXRhLXYtNjllZjJhMzBde3dpZHRoOjEwMCU7ZGlzcGxheTpncmlkO2dyaWQtdGVtcGxhdGUtY29sdW1uczoxZnIgMWZyO3BhZGRpbmc6N3B4IDA7cm93LWdhcDo3cHg7Y3Vyc29yOnBvaW50ZXI7Ym9yZGVyLXJhZGl1czo2cHg7dHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIC4xNXN9LmNhcmQgLnByb3BzW2RhdGEtdi02OWVmMmEzMF06aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojNTE1MTUxO2JveC1zaGFkb3c6MnB4IDJweCAxMHB4IDAgcmdiYSgwLDAsMCwuNSl9LmNhcmQgLnByb3BzIC5wcm9wcy1rZXlbZGF0YS12LTY5ZWYyYTMwXXtmb250LXdlaWdodDo3MDA7dGV4dC1hbGlnbjpsZWZ0O3BhZGRpbmctbGVmdDoxNXB4fS5jYXJkIC5wcm9wcyAucHJvcHMtdmFsdWVbZGF0YS12LTY5ZWYyYTMwXXt0ZXh0LWFsaWduOnJpZ2h0O3BhZGRpbmctcmlnaHQ6MTVweH0uY2FyZCAubGFzdC11cGRhdGVkW2RhdGEtdi02OWVmMmEzMF17Y29sb3I6IzU5NTk1OTttYXJnaW4tYm90dG9tOjRweDttYXJnaW4tcmlnaHQ6NHB4O2ZvbnQtc2l6ZToxNHB4O3RleHQtYWxpZ246Y2VudGVyfWJvZHksaHRtbHttYXJnaW46MDtoZWlnaHQ6MTAwJTtiYWNrZ3JvdW5kOiMxYjFiMWI7Zm9udC1mYW1pbHk6QXJpYWwsSGVsdmV0aWNhLHNhbnMtc2VyaWY7Ym9yZGVyLWNvbGxhcHNlOnNlcGFyYXRlO2NvbG9yOiNmZmZ9LmhlYWRlcntmbGV4LWRpcmVjdGlvbjpjb2x1bW47d2lkdGg6MTAwJTtoZWlnaHQ6OHZtaW47Ym9yZGVyLWNvbGxhcHNlOnNlcGFyYXRlO292ZXJmbG93OmhpZGRlbn0uaGVhZGVyLC5oZWFkZXIgLmhlYWRlci1iYXJ7ZGlzcGxheTpmbGV4O3Bvc2l0aW9uOnJlbGF0aXZlfS5oZWFkZXIgLmhlYWRlci1iYXJ7ZmxleC1ncm93OjE7YWxpZ24taXRlbXM6Y2VudGVyfS5oZWFkZXIgLmhlYWRlci1iYXIgLmhlYWRlci10aXRsZXttYXJnaW46YXV0bztmb250LXNpemU6My41dm1pbjt0ZXh0LWFsaWduOmNlbnRlcjtmb250LWZhbWlseTpQb3BwaW5zLHNhbnMtc2VyaWZ9LmhlYWRlciAuaGVhZGVyLWJhciAuaGVhZGVyLXdpZGdldHN7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7cmlnaHQ6MDt3aWR0aDoyMCU7aGVpZ2h0OjEwMCU7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOnJvdy1yZXZlcnNlO2FsaWduLWl0ZW1zOmNlbnRlcjtnYXA6MS41dm1pbjtwYWRkaW5nOjEuNXZtaW47Ym94LXNpemluZzpib3JkZXItYm94fS5oZWFkZXIgLmhlYWRlci1iYXIgLmhlYWRlci13aWRnZXRzIC5oZWFkZXItcmVmcmVzaC1idG57cGFkZGluZzouOHZtaW47d2lkdGg6MnZtaW47YmFja2dyb3VuZC1jb2xvcjojYmRiZGJkO2JveC1zaGFkb3c6MnB4IDJweCA1cHggMCByZ2JhKDAsMCwwLC43NSk7Ym9yZGVyLXJhZGl1czoyMCU7Ym9yZGVyOm5vbmU7Y3Vyc29yOnBvaW50ZXI7dHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIC4xNXN9LmhlYWRlciAuaGVhZGVyLWJhciAuaGVhZGVyLXdpZGdldHMgLmhlYWRlci1yZWZyZXNoLWJ0bjpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNmOGY4Zjh9LmhlYWRlciBocnt3aWR0aDoxMDAlfS5tYWNoaW5lLWNvbnRhaW5lcntwYWRkaW5nOjQwcHg7ZGlzcGxheTpmbGV4O2ZsZXgtd3JhcDp3cmFwO2dhcDo0MHB4fS5mb290ZXJ7cG9zaXRpb246Zml4ZWQ7d2lkdGg6MTAwJTtoZWlnaHQ6MTB2bWluO2JvdHRvbTowO2JhY2tncm91bmQ6IzFiMWIxYn0ubm90aWZpY2F0aW9uLWNvbnRhaW5lcntwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDowO2JvdHRvbTowO2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW4tcmV2ZXJzZTttYXJnaW46MjBweDtnYXA6MjBweH0ubm90aWZpY2F0aW9uLWNvbnRhaW5lciAubm90aWZpY2F0aW9ue2Rpc3BsYXk6YmxvY2s7d2lkdGg6MzAwcHg7cGFkZGluZzoxMHB4IDIwcHg7YmFja2dyb3VuZC1jb2xvcjojNzc3O2JvcmRlci1yYWRpdXM6MTBweDtjdXJzb3I6cG9pbnRlcjstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7Zm9udC13ZWlnaHQ6NzAwfS5ub3RpZmljYXRpb24tY29udGFpbmVyIC5ub3RpZmljYXRpb246aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojOWM5YzljfS5ub3RpZmljYXRpb24tY29udGFpbmVyIC5ub3RpZmljYXRpb24tdHJhbnNpdGlvbi1lbnRlci1hY3RpdmUsLm5vdGlmaWNhdGlvbi1jb250YWluZXIgLm5vdGlmaWNhdGlvbi10cmFuc2l0aW9uLWxlYXZlLWFjdGl2ZXt0cmFuc2l0aW9uOmFsbCAuMnN9Lm5vdGlmaWNhdGlvbi1jb250YWluZXIgLm5vdGlmaWNhdGlvbi10cmFuc2l0aW9uLWVudGVyLWZyb20sLm5vdGlmaWNhdGlvbi1jb250YWluZXIgLm5vdGlmaWNhdGlvbi10cmFuc2l0aW9uLWxlYXZlLXRve29wYWNpdHk6MH1AZm9udC1mYWNle2ZvbnQtZmFtaWx5OlBvcHBpbnM7c3JjOnVybCgvZm9udHMvUG9wcGlucy1SZWd1bGFyLjRiNGViZTIwLnR0Zil9'; 'ContentType' = 'text/css' }
	'/fonts/Poppins-Regular.4b4ebe20.ttf' = @{ 'Content' = ''; 'ContentType' = 'application/font-sfnt' }
	'/img/exit-light.dc98bb27.png' = @{ 'Content' = ''; 'ContentType' = 'image/png' }
	'/img/refresh-light.5c30260c.png' = @{ 'Content' = ''; 'ContentType' = 'image/png' }
	'/img/refresh.ace122ea.png' = @{ 'Content' = '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'; 'ContentType' = 'image/png' }
	'/js/app.27e27cf0.js' = @{ 'Content' = 'KGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciBuPXs3NzE6ZnVuY3Rpb24obixlLHQpe3ZhciBpPXQoOTYzKSxyPXQoNjU1KSxvPXQoMjUyKSxhPXQoNTc3KSxjPXQucCsiaW1nL3JlZnJlc2guYWNlMTIyZWEucG5nIixzPXQoMjYyKSx1PXQucCsiaW1nL2V4aXQtbGlnaHQuZGM5OGJiMjcucG5nIixsPXQucCsiaW1nL3JlZnJlc2gtbGlnaHQuNWMzMDI2MGMucG5nIixmPWZ1bmN0aW9uKG4pe3JldHVybigwLG8uZEQpKCJkYXRhLXYtNjllZjJhMzAiKSxuPW4oKSwoMCxvLkNuKSgpLG59LGg9e2NsYXNzOiJjYXJkIn0scD17Y2xhc3M6InRpdGxlLWJhciJ9LGQ9e2NsYXNzOiJ0aXRsZSJ9LGc9ZigoZnVuY3Rpb24oKXtyZXR1cm4oMCxvLl8pKCJociIsbnVsbCxudWxsLC0xKX0pKSx2PXtjbGFzczoicHJvcHMifSxtPWYoKGZ1bmN0aW9uKCl7cmV0dXJuKDAsby5fKSgiZGl2Iix7Y2xhc3M6InByb3BzLWtleSJ9LCJJUCIsLTEpfSkpLHc9e2NsYXNzOiJwcm9wcy12YWx1ZSJ9LF89ZigoZnVuY3Rpb24oKXtyZXR1cm4oMCxvLl8pKCJkaXYiLHtjbGFzczoicHJvcHMta2V5In0sIk9ubGluZSIsLTEpfSkpLGI9e2NsYXNzOiJwcm9wcy12YWx1ZSJ9LE89e2NsYXNzOiJsYXN0LXVwZGF0ZWQifSxrPSgwLG8uYVopKHtfX25hbWU6IkNhcmQiLHByb3BzOnttYWNoaW5lU3RhdGU6e3R5cGU6T2JqZWN0LHJlcXVpcmVkOiEwfX0sc2V0dXA6ZnVuY3Rpb24obil7dmFyIGU9ZnVuY3Rpb24obil7cmV0dXJuIG48NmU0P01hdGgubWF4KDAsTWF0aC5jZWlsKG4vMWUzKSkrInMiOk1hdGguZmxvb3Iobi82ZTQpKyJtIn0sdD0oMCxzLmlIKShEYXRlLm5vdygpKSxpPWZ1bmN0aW9uKCl7cmV0dXJuIHQudmFsdWU9RGF0ZS5ub3coKX07cmV0dXJuIHNldEludGVydmFsKChmdW5jdGlvbigpe3JldHVybiBpKCl9KSwxZTMpLGZ1bmN0aW9uKGkscil7cmV0dXJuKDAsby53ZykoKSwoMCxvLmlEKSgiZGl2IixoLFsoMCxvLl8pKCJkaXYiLHAsWygwLG8uXykoImltZyIse2NsYXNzOiJidG4iLHNyYzp1LG9uQ2xpY2s6clswXXx8KHJbMF09ZnVuY3Rpb24obil7cmV0dXJuIGkuJGVtaXQoIm9uQ2xvc2UiKX0pfSksKDAsby5fKSgicCIsZCwoMCxhLnp3KShuLm1hY2hpbmVTdGF0ZS5jb25maWcubmFtZSksMSksKDAsby5fKSgiaW1nIix7Y2xhc3M6KDAsYS5DXykoe2J0bjohMCxyZWZyZXNoaW5nOm4ubWFjaGluZVN0YXRlLmlzUmVmcmVzaGluZ30pLHNyYzpsLG9uQ2xpY2s6clsxXXx8KHJbMV09ZnVuY3Rpb24obil7cmV0dXJuIGkuJGVtaXQoIm9uUmVmcmVzaCIpfSl9LG51bGwsMildKSxnLCgwLG8uXykoImRpdiIsdixbbSwoMCxvLlVrKSgpLCgwLG8uXykoImRpdiIsdywoMCxhLnp3KShuLm1hY2hpbmVTdGF0ZS5jb25maWcuaXApLDEpLF8sKDAsby5VaykoKSwoMCxvLl8pKCJkaXYiLGIsKDAsYS56dykobi5tYWNoaW5lU3RhdGUub25saW5lPyLwn5+iIjoi8J+UtCIpLDEpXSksKDAsby5fKSgicCIsTywiTGFzdCBVcGRhdGVkOiAiKygwLGEuencpKCgwLHMuU1UpKGUpKCgwLHMuU1UpKHQpLW4ubWFjaGluZVN0YXRlLmxhc3RVcGRhdGVkKSksMSldKX19fSksQz10KDc0NCk7Y29uc3QgeT0oMCxDLlopKGssW1siX19zY29wZUlkIiwiZGF0YS12LTY5ZWYyYTMwIl1dKTt2YXIgRD15LFI9e2NsYXNzOiJoZWFkZXIifSxTPXtjbGFzczoiaGVhZGVyLWJhciJ9LFU9KDAsby5fKSgicCIse2NsYXNzOiJoZWFkZXItdGl0bGUifSwiQ2x1c3RlciBXYXRjaGVyIiwtMSksaj17Y2xhc3M6ImhlYWRlci13aWRnZXRzIn0seD0oMCxvLl8pKCJociIsbnVsbCxudWxsLC0xKSxMPXtjbGFzczoibWFjaGluZS1jb250YWluZXIifSx6PSgwLG8uXykoImRpdiIse2NsYXNzOiJmb290ZXIifSxbKDAsby5fKSgiaHIiKV0sLTEpLEg9WyJvbkNsaWNrIl0sST0oMCxvLmFaKSh7X19uYW1lOiJBcHAiLHNldHVwOmZ1bmN0aW9uKG4pe3ZhciBlPSgwLHMucWopKFt7Y29uZmlnOntuYW1lOiJMb2NhbCAxIixpcDoiMTI3LjAuMC4xIn0sb25saW5lOiExLGxhc3RVcGRhdGVkOkRhdGUubm93KCksaXNSZWZyZXNoaW5nOiExfSx7Y29uZmlnOntuYW1lOiJMb2NhbCAyIixpcDoiMTI3LjAuMC4yMyJ9LG9ubGluZTohMCxsYXN0VXBkYXRlZDpEYXRlLm5vdygpLGlzUmVmcmVzaGluZzohMX0se2NvbmZpZzp7bmFtZToiTG9jYWwgMiIsaXA6IjEyNy4wLjAuMjMifSxvbmxpbmU6ITAsbGFzdFVwZGF0ZWQ6RGF0ZS5ub3coKSxpc1JlZnJlc2hpbmc6ITF9LHtjb25maWc6e25hbWU6IkxvY2FsIDIiLGlwOiIxMjcuMC4wLjIzIn0sb25saW5lOiEwLGxhc3RVcGRhdGVkOkRhdGUubm93KCksaXNSZWZyZXNoaW5nOiExfSx7Y29uZmlnOntuYW1lOiJMb2NhbCAyIixpcDoiMTI3LjAuMC4yMyJ9LG9ubGluZTohMCxsYXN0VXBkYXRlZDpEYXRlLm5vdygpLGlzUmVmcmVzaGluZzohMX1dKSx0PTAsdT0oMCxzLnFqKShbXSk7ZnVuY3Rpb24gbChuLGUpe3ZvaWQgMD09PWUmJihlPTVlMyk7dmFyIGk9e2lkOnQrKyxtZXNzYWdlOm59O3NldFRpbWVvdXQoKGZ1bmN0aW9uKCl7cmV0dXJuIGYoaSl9KSxlKSx1LnNwbGljZSh1Lmxlbmd0aCwwLGkpfWZ1bmN0aW9uIGYobil7dS5zcGxpY2UodS5pbmRleE9mKG4pLDEpfWZ1bmN0aW9uIGgobil7ZS5zcGxpY2UobiwxKX1mdW5jdGlvbiBwKCl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspZChuKX1mdW5jdGlvbiBkKG4pe3JldHVybigwLHIubUcpKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgdCxpLG8sYSxjO3JldHVybigwLHIuSmgpKHRoaXMsKGZ1bmN0aW9uKHIpe3N3aXRjaChyLmxhYmVsKXtjYXNlIDA6aWYoZVtuXS5pc1JlZnJlc2hpbmcpcmV0dXJuWzJdO3Q9SlNPTi5zdHJpbmdpZnkoZVtuXS5jb25maWcpLGk9Imh0dHA6Ly9sb2NhbGhvc3Q6ODA4MS9tYWNoaW5lU3RhdGUiLG89IiIuY29uY2F0KGksIj9jb25maWc9IikuY29uY2F0KHQpLGVbbl0uaXNSZWZyZXNoaW5nPSEwLHIubGFiZWw9MTtjYXNlIDE6cmV0dXJuIHIudHJ5cy5wdXNoKFsxLDQsNSw2XSksWzQsZmV0Y2gobyldO2Nhc2UgMjpyZXR1cm4gYT1yLnNlbnQoKSxbNCxhLmpzb24oKV07Y2FzZSAzOnJldHVybiBjPXIuc2VudCgpLGVbbl09Yyxjb25zb2xlLmxvZyhhKSxbMyw2XTtjYXNlIDQ6cmV0dXJuIHIuc2VudCgpLGwoIkNvdWxkIG5vdCBjb25uZWN0IHRvIEFQSSBhdDpcbiciLmNvbmNhdChpLCInIikpLFszLDZdO2Nhc2UgNTpyZXR1cm4gZVtuXS5vbmxpbmU9IWVbbl0ub25saW5lLGVbbl0ubGFzdFVwZGF0ZWQ9RGF0ZS5ub3coKSxlW25dLmlzUmVmcmVzaGluZz0hMSxbN107Y2FzZSA2OnJldHVyblsyXX19KSl9KSl9cmV0dXJuIGZ1bmN0aW9uKG4sdCl7cmV0dXJuKDAsby53ZykoKSwoMCxvLmlEKShvLkhZLG51bGwsWygwLG8uXykoImRpdiIsUixbKDAsby5fKSgiZGl2IixTLFtVLCgwLG8uXykoImRpdiIsaixbKDAsby5fKSgiaW1nIix7Y2xhc3M6ImhlYWRlci1yZWZyZXNoLWJ0biIsc3JjOmMsb25DbGljazp0WzBdfHwodFswXT1mdW5jdGlvbihuKXtyZXR1cm4gcCgpfSl9KV0pXSkseF0pLCgwLG8uXykoImRpdiIsTCxbKCgwLG8ud2cpKCEwKSwoMCxvLmlEKShvLkhZLG51bGwsKDAsby5LbykoZSwoZnVuY3Rpb24obixlKXtyZXR1cm4oMCxvLndnKSgpLCgwLG8uajQpKEQse21hY2hpbmVTdGF0ZTpuLG9uT25DbG9zZTpmdW5jdGlvbihuKXtyZXR1cm4gaChlKX0sb25PblJlZnJlc2g6ZnVuY3Rpb24obil7cmV0dXJuIGQoZSl9fSxudWxsLDgsWyJtYWNoaW5lU3RhdGUiLCJvbk9uQ2xvc2UiLCJvbk9uUmVmcmVzaCJdKX0pKSwyNTYpKV0pLHosKDAsby5XbSkoaS5XMyx7bmFtZToibm90aWZpY2F0aW9uLXRyYW5zaXRpb24iLHRhZzoiZGl2IixjbGFzczoibm90aWZpY2F0aW9uLWNvbnRhaW5lciJ9LHtkZWZhdWx0OigwLG8udzUpKChmdW5jdGlvbigpe3JldHVyblsoKDAsby53ZykoITApLCgwLG8uaUQpKG8uSFksbnVsbCwoMCxvLktvKSh1LChmdW5jdGlvbihuKXtyZXR1cm4oMCxvLndnKSgpLCgwLG8uaUQpKCJkaXYiLHtrZXk6bi5pZCxjbGFzczoibm90aWZpY2F0aW9uIixvbkNsaWNrOmZ1bmN0aW9uKGUpe3JldHVybiBmKG4pfX0sWygwLG8uXykoInAiLG51bGwsKDAsYS56dykobi5tZXNzYWdlKSwxKV0sOCxIKX0pKSwxMjgpKV19KSksXzoxfSldLDY0KX19fSk7Y29uc3QgUD1JO3ZhciBxPVA7KDAsaS5yaSkocSkubW91bnQoIiNhcHAiKX19LGU9e307ZnVuY3Rpb24gdChpKXt2YXIgcj1lW2ldO2lmKHZvaWQgMCE9PXIpcmV0dXJuIHIuZXhwb3J0czt2YXIgbz1lW2ldPXtleHBvcnRzOnt9fTtyZXR1cm4gbltpXShvLG8uZXhwb3J0cyx0KSxvLmV4cG9ydHN9dC5tPW4sZnVuY3Rpb24oKXt2YXIgbj1bXTt0Lk89ZnVuY3Rpb24oZSxpLHIsbyl7aWYoIWkpe3ZhciBhPTEvMDtmb3IobD0wO2w8bi5sZW5ndGg7bCsrKXtpPW5bbF1bMF0scj1uW2xdWzFdLG89bltsXVsyXTtmb3IodmFyIGM9ITAscz0wO3M8aS5sZW5ndGg7cysrKSghMSZvfHxhPj1vKSYmT2JqZWN0LmtleXModC5PKS5ldmVyeSgoZnVuY3Rpb24obil7cmV0dXJuIHQuT1tuXShpW3NdKX0pKT9pLnNwbGljZShzLS0sMSk6KGM9ITEsbzxhJiYoYT1vKSk7aWYoYyl7bi5zcGxpY2UobC0tLDEpO3ZhciB1PXIoKTt2b2lkIDAhPT11JiYoZT11KX19cmV0dXJuIGV9bz1vfHwwO2Zvcih2YXIgbD1uLmxlbmd0aDtsPjAmJm5bbC0xXVsyXT5vO2wtLSluW2xdPW5bbC0xXTtuW2xdPVtpLHIsb119fSgpLGZ1bmN0aW9uKCl7dC5kPWZ1bmN0aW9uKG4sZSl7Zm9yKHZhciBpIGluIGUpdC5vKGUsaSkmJiF0Lm8obixpKSYmT2JqZWN0LmRlZmluZVByb3BlcnR5KG4saSx7ZW51bWVyYWJsZTohMCxnZXQ6ZVtpXX0pfX0oKSxmdW5jdGlvbigpe3QuZz1mdW5jdGlvbigpe2lmKCJvYmplY3QiPT09dHlwZW9mIGdsb2JhbFRoaXMpcmV0dXJuIGdsb2JhbFRoaXM7dHJ5e3JldHVybiB0aGlzfHxuZXcgRnVuY3Rpb24oInJldHVybiB0aGlzIikoKX1jYXRjaChuKXtpZigib2JqZWN0Ij09PXR5cGVvZiB3aW5kb3cpcmV0dXJuIHdpbmRvd319KCl9KCksZnVuY3Rpb24oKXt0Lm89ZnVuY3Rpb24obixlKXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4sZSl9fSgpLGZ1bmN0aW9uKCl7dC5wPSIvIn0oKSxmdW5jdGlvbigpe3ZhciBuPXsxNDM6MH07dC5PLmo9ZnVuY3Rpb24oZSl7cmV0dXJuIDA9PT1uW2VdfTt2YXIgZT1mdW5jdGlvbihlLGkpe3ZhciByLG8sYT1pWzBdLGM9aVsxXSxzPWlbMl0sdT0wO2lmKGEuc29tZSgoZnVuY3Rpb24oZSl7cmV0dXJuIDAhPT1uW2VdfSkpKXtmb3IociBpbiBjKXQubyhjLHIpJiYodC5tW3JdPWNbcl0pO2lmKHMpdmFyIGw9cyh0KX1mb3IoZSYmZShpKTt1PGEubGVuZ3RoO3UrKylvPWFbdV0sdC5vKG4sbykmJm5bb10mJm5bb11bMF0oKSxuW29dPTA7cmV0dXJuIHQuTyhsKX0saT1zZWxmWyJ3ZWJwYWNrQ2h1bmtjbHVzdGVyX3dhdGNoZXIiXT1zZWxmWyJ3ZWJwYWNrQ2h1bmtjbHVzdGVyX3dhdGNoZXIiXXx8W107aS5mb3JFYWNoKGUuYmluZChudWxsLDApKSxpLnB1c2g9ZS5iaW5kKG51bGwsaS5wdXNoLmJpbmQoaSkpfSgpO3ZhciBpPXQuTyh2b2lkIDAsWzk5OF0sKGZ1bmN0aW9uKCl7cmV0dXJuIHQoNzcxKX0pKTtpPXQuTyhpKX0pKCk7Ci8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC4yN2UyN2NmMC5qcy5tYXA='; 'ContentType' = 'application/javascript' }
	'/js/app.27e27cf0.js.map' = @{ 'Content' = ''; 'ContentType' = 'text/plain' }
	'/js/chunk-vendors.77390dc2.js' = @{ 'Content' = 'InVzZSBzdHJpY3QiOyhzZWxmWyJ3ZWJwYWNrQ2h1bmtjbHVzdGVyX3dhdGNoZXIiXT1zZWxmWyJ3ZWJwYWNrQ2h1bmtjbHVzdGVyX3dhdGNoZXIiXXx8W10pLnB1c2goW1s5OThdLHsyNjI6ZnVuY3Rpb24oZSx0LG4pe24uZCh0LHtCajpmdW5jdGlvbigpe3JldHVybiBzfSxGbDpmdW5jdGlvbigpe3JldHVybiBLZX0sSVU6ZnVuY3Rpb24oKXtyZXR1cm4gRWV9LEpkOmZ1bmN0aW9uKCl7cmV0dXJuIHh9LFBHOmZ1bmN0aW9uKCl7cmV0dXJuIFJlfSxTVTpmdW5jdGlvbigpe3JldHVybiBKZX0sVW06ZnVuY3Rpb24oKXtyZXR1cm4gQ2V9LFdMOmZ1bmN0aW9uKCl7cmV0dXJuIEJlfSxYJDpmdW5jdGlvbigpe3JldHVybiBJfSxYMzpmdW5jdGlvbigpe3JldHVybiBPZX0sWGw6ZnVuY3Rpb24oKXtyZXR1cm4gRmV9LGRxOmZ1bmN0aW9uKCl7cmV0dXJuIFVlfSxpSDpmdW5jdGlvbigpe3JldHVybiBMZX0sajpmdW5jdGlvbigpe3JldHVybiBSfSxsazpmdW5jdGlvbigpe3JldHVybiBTfSxuWjpmdW5jdGlvbigpe3JldHVybiBsfSxxajpmdW5jdGlvbigpe3JldHVybiB3ZX0scXE6ZnVuY3Rpb24oKXtyZXR1cm4gYn0seVQ6ZnVuY3Rpb24oKXtyZXR1cm4gSWV9fSk7dmFyIHI9big1NzcpO2xldCBvO2NsYXNzIHN7Y29uc3RydWN0b3IoZT0hMSl7dGhpcy5kZXRhY2hlZD1lLHRoaXMuX2FjdGl2ZT0hMCx0aGlzLmVmZmVjdHM9W10sdGhpcy5jbGVhbnVwcz1bXSx0aGlzLnBhcmVudD1vLCFlJiZvJiYodGhpcy5pbmRleD0oby5zY29wZXN8fChvLnNjb3Blcz1bXSkpLnB1c2godGhpcyktMSl9Z2V0IGFjdGl2ZSgpe3JldHVybiB0aGlzLl9hY3RpdmV9cnVuKGUpe2lmKHRoaXMuX2FjdGl2ZSl7Y29uc3QgdD1vO3RyeXtyZXR1cm4gbz10aGlzLGUoKX1maW5hbGx5e289dH19ZWxzZSAwfW9uKCl7bz10aGlzfW9mZigpe289dGhpcy5wYXJlbnR9c3RvcChlKXtpZih0aGlzLl9hY3RpdmUpe2xldCB0LG47Zm9yKHQ9MCxuPXRoaXMuZWZmZWN0cy5sZW5ndGg7dDxuO3QrKyl0aGlzLmVmZmVjdHNbdF0uc3RvcCgpO2Zvcih0PTAsbj10aGlzLmNsZWFudXBzLmxlbmd0aDt0PG47dCsrKXRoaXMuY2xlYW51cHNbdF0oKTtpZih0aGlzLnNjb3Blcylmb3IodD0wLG49dGhpcy5zY29wZXMubGVuZ3RoO3Q8bjt0KyspdGhpcy5zY29wZXNbdF0uc3RvcCghMCk7aWYoIXRoaXMuZGV0YWNoZWQmJnRoaXMucGFyZW50JiYhZSl7Y29uc3QgZT10aGlzLnBhcmVudC5zY29wZXMucG9wKCk7ZSYmZSE9PXRoaXMmJih0aGlzLnBhcmVudC5zY29wZXNbdGhpcy5pbmRleF09ZSxlLmluZGV4PXRoaXMuaW5kZXgpfXRoaXMucGFyZW50PXZvaWQgMCx0aGlzLl9hY3RpdmU9ITF9fX1mdW5jdGlvbiBpKGUsdD1vKXt0JiZ0LmFjdGl2ZSYmdC5lZmZlY3RzLnB1c2goZSl9ZnVuY3Rpb24gbCgpe3JldHVybiBvfWNvbnN0IGM9ZT0+e2NvbnN0IHQ9bmV3IFNldChlKTtyZXR1cm4gdC53PTAsdC5uPTAsdH0sdT1lPT4oZS53JnYpPjAsYT1lPT4oZS5uJnYpPjAsZj0oe2RlcHM6ZX0pPT57aWYoZS5sZW5ndGgpZm9yKGxldCB0PTA7dDxlLmxlbmd0aDt0KyspZVt0XS53fD12fSxwPWU9Pntjb25zdHtkZXBzOnR9PWU7aWYodC5sZW5ndGgpe2xldCBuPTA7Zm9yKGxldCByPTA7cjx0Lmxlbmd0aDtyKyspe2NvbnN0IG89dFtyXTt1KG8pJiYhYShvKT9vLmRlbGV0ZShlKTp0W24rK109byxvLncmPX52LG8ubiY9fnZ9dC5sZW5ndGg9bn19LGQ9bmV3IFdlYWtNYXA7bGV0IGg9MCx2PTE7Y29uc3QgZz0zMDtsZXQgbTtjb25zdCBfPVN5bWJvbCgiIikseT1TeW1ib2woIiIpO2NsYXNzIGJ7Y29uc3RydWN0b3IoZSx0PW51bGwsbil7dGhpcy5mbj1lLHRoaXMuc2NoZWR1bGVyPXQsdGhpcy5hY3RpdmU9ITAsdGhpcy5kZXBzPVtdLHRoaXMucGFyZW50PXZvaWQgMCxpKHRoaXMsbil9cnVuKCl7aWYoIXRoaXMuYWN0aXZlKXJldHVybiB0aGlzLmZuKCk7bGV0IGU9bSx0PXc7d2hpbGUoZSl7aWYoZT09PXRoaXMpcmV0dXJuO2U9ZS5wYXJlbnR9dHJ5e3JldHVybiB0aGlzLnBhcmVudD1tLG09dGhpcyx3PSEwLHY9MTw8KytoLGg8PWc/Zih0aGlzKTprKHRoaXMpLHRoaXMuZm4oKX1maW5hbGx5e2g8PWcmJnAodGhpcyksdj0xPDwtLWgsbT10aGlzLnBhcmVudCx3PXQsdGhpcy5wYXJlbnQ9dm9pZCAwLHRoaXMuZGVmZXJTdG9wJiZ0aGlzLnN0b3AoKX19c3RvcCgpe209PT10aGlzP3RoaXMuZGVmZXJTdG9wPSEwOnRoaXMuYWN0aXZlJiYoayh0aGlzKSx0aGlzLm9uU3RvcCYmdGhpcy5vblN0b3AoKSx0aGlzLmFjdGl2ZT0hMSl9fWZ1bmN0aW9uIGsoZSl7Y29uc3R7ZGVwczp0fT1lO2lmKHQubGVuZ3RoKXtmb3IobGV0IG49MDtuPHQubGVuZ3RoO24rKyl0W25dLmRlbGV0ZShlKTt0Lmxlbmd0aD0wfX1sZXQgdz0hMDtjb25zdCBDPVtdO2Z1bmN0aW9uIHgoKXtDLnB1c2godyksdz0hMX1mdW5jdGlvbiBTKCl7Y29uc3QgZT1DLnBvcCgpO3c9dm9pZCAwPT09ZXx8ZX1mdW5jdGlvbiBSKGUsdCxuKXtpZih3JiZtKXtsZXQgdD1kLmdldChlKTt0fHxkLnNldChlLHQ9bmV3IE1hcCk7bGV0IHI9dC5nZXQobik7cnx8dC5zZXQobixyPWMoKSk7Y29uc3Qgbz12b2lkIDA7VChyLG8pfX1mdW5jdGlvbiBUKGUsdCl7bGV0IG49ITE7aDw9Zz9hKGUpfHwoZS5ufD12LG49IXUoZSkpOm49IWUuaGFzKG0pLG4mJihlLmFkZChtKSxtLmRlcHMucHVzaChlKSl9ZnVuY3Rpb24gSShlLHQsbixvLHMsaSl7Y29uc3QgbD1kLmdldChlKTtpZighbClyZXR1cm47bGV0IHU9W107aWYoImNsZWFyIj09PXQpdT1bLi4ubC52YWx1ZXMoKV07ZWxzZSBpZigibGVuZ3RoIj09PW4mJigwLHIua0opKGUpKXtjb25zdCBlPU51bWJlcihvKTtsLmZvckVhY2goKCh0LG4pPT57KCJsZW5ndGgiPT09bnx8bj49ZSkmJnUucHVzaCh0KX0pKX1lbHNlIHN3aXRjaCh2b2lkIDAhPT1uJiZ1LnB1c2gobC5nZXQobikpLHQpe2Nhc2UiYWRkIjooMCxyLmtKKShlKT8oMCxyLlMwKShuKSYmdS5wdXNoKGwuZ2V0KCJsZW5ndGgiKSk6KHUucHVzaChsLmdldChfKSksKDAsci5fTikoZSkmJnUucHVzaChsLmdldCh5KSkpO2JyZWFrO2Nhc2UiZGVsZXRlIjooMCxyLmtKKShlKXx8KHUucHVzaChsLmdldChfKSksKDAsci5fTikoZSkmJnUucHVzaChsLmdldCh5KSkpO2JyZWFrO2Nhc2Uic2V0IjooMCxyLl9OKShlKSYmdS5wdXNoKGwuZ2V0KF8pKTticmVha31pZigxPT09dS5sZW5ndGgpdVswXSYmTyh1WzBdKTtlbHNle2NvbnN0IGU9W107Zm9yKGNvbnN0IHQgb2YgdSl0JiZlLnB1c2goLi4udCk7TyhjKGUpKX19ZnVuY3Rpb24gTyhlLHQpe2NvbnN0IG49KDAsci5rSikoZSk/ZTpbLi4uZV07Zm9yKGNvbnN0IHIgb2YgbilyLmNvbXB1dGVkJiZFKHIsdCk7Zm9yKGNvbnN0IHIgb2YgbilyLmNvbXB1dGVkfHxFKHIsdCl9ZnVuY3Rpb24gRShlLHQpeyhlIT09bXx8ZS5hbGxvd1JlY3Vyc2UpJiYoZS5zY2hlZHVsZXI/ZS5zY2hlZHVsZXIoKTplLnJ1bigpKX1jb25zdCBGPSgwLHIuZlkpKCJfX3Byb3RvX18sX192X2lzUmVmLF9faXNWdWUiKSxBPW5ldyBTZXQoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoU3ltYm9sKS5maWx0ZXIoKGU9PiJhcmd1bWVudHMiIT09ZSYmImNhbGxlciIhPT1lKSkubWFwKChlPT5TeW1ib2xbZV0pKS5maWx0ZXIoci55aykpLGo9TSgpLE49TSghMSwhMCksUD1NKCEwKSxVPUwoKTtmdW5jdGlvbiBMKCl7Y29uc3QgZT17fTtyZXR1cm5bImluY2x1ZGVzIiwiaW5kZXhPZiIsImxhc3RJbmRleE9mIl0uZm9yRWFjaCgodD0+e2VbdF09ZnVuY3Rpb24oLi4uZSl7Y29uc3Qgbj1FZSh0aGlzKTtmb3IobGV0IHQ9MCxvPXRoaXMubGVuZ3RoO3Q8bzt0KyspUihuLCJnZXQiLHQrIiIpO2NvbnN0IHI9blt0XSguLi5lKTtyZXR1cm4tMT09PXJ8fCExPT09cj9uW3RdKC4uLmUubWFwKEVlKSk6cn19KSksWyJwdXNoIiwicG9wIiwic2hpZnQiLCJ1bnNoaWZ0Iiwic3BsaWNlIl0uZm9yRWFjaCgodD0+e2VbdF09ZnVuY3Rpb24oLi4uZSl7eCgpO2NvbnN0IG49RWUodGhpcylbdF0uYXBwbHkodGhpcyxlKTtyZXR1cm4gUygpLG59fSkpLGV9ZnVuY3Rpb24gJChlKXtjb25zdCB0PUVlKHRoaXMpO3JldHVybiBSKHQsImhhcyIsZSksdC5oYXNPd25Qcm9wZXJ0eShlKX1mdW5jdGlvbiBNKGU9ITEsdD0hMSl7cmV0dXJuIGZ1bmN0aW9uKG4sbyxzKXtpZigiX192X2lzUmVhY3RpdmUiPT09bylyZXR1cm4hZTtpZigiX192X2lzUmVhZG9ubHkiPT09bylyZXR1cm4gZTtpZigiX192X2lzU2hhbGxvdyI9PT1vKXJldHVybiB0O2lmKCJfX3ZfcmF3Ij09PW8mJnM9PT0oZT90P3llOl9lOnQ/bWU6Z2UpLmdldChuKSlyZXR1cm4gbjtjb25zdCBpPSgwLHIua0opKG4pO2lmKCFlKXtpZihpJiYoMCxyLlJJKShVLG8pKXJldHVybiBSZWZsZWN0LmdldChVLG8scyk7aWYoImhhc093blByb3BlcnR5Ij09PW8pcmV0dXJuICR9Y29uc3QgbD1SZWZsZWN0LmdldChuLG8scyk7cmV0dXJuKCgwLHIueWspKG8pP0EuaGFzKG8pOkYobykpP2w6KGV8fFIobiwiZ2V0IixvKSx0P2w6VWUobCk/aSYmKDAsci5TMCkobyk/bDpsLnZhbHVlOigwLHIuS24pKGwpP2U/eGUobCk6d2UobCk6bCl9fWNvbnN0IEo9QigpLEQ9QighMCk7ZnVuY3Rpb24gQihlPSExKXtyZXR1cm4gZnVuY3Rpb24odCxuLG8scyl7bGV0IGk9dFtuXTtpZihUZShpKSYmVWUoaSkmJiFVZShvKSlyZXR1cm4hMTtpZighZSYmKEllKG8pfHxUZShvKXx8KGk9RWUoaSksbz1FZShvKSksISgwLHIua0opKHQpJiZVZShpKSYmIVVlKG8pKSlyZXR1cm4gaS52YWx1ZT1vLCEwO2NvbnN0IGw9KDAsci5rSikodCkmJigwLHIuUzApKG4pP051bWJlcihuKTx0Lmxlbmd0aDooMCxyLlJJKSh0LG4pLGM9UmVmbGVjdC5zZXQodCxuLG8scyk7cmV0dXJuIHQ9PT1FZShzKSYmKGw/KDAsci5hVSkobyxpKSYmSSh0LCJzZXQiLG4sbyxpKTpJKHQsImFkZCIsbixvKSksY319ZnVuY3Rpb24gSChlLHQpe2NvbnN0IG49KDAsci5SSSkoZSx0KSxvPWVbdF0scz1SZWZsZWN0LmRlbGV0ZVByb3BlcnR5KGUsdCk7cmV0dXJuIHMmJm4mJkkoZSwiZGVsZXRlIix0LHZvaWQgMCxvKSxzfWZ1bmN0aW9uIFYoZSx0KXtjb25zdCBuPVJlZmxlY3QuaGFzKGUsdCk7cmV0dXJuKDAsci55aykodCkmJkEuaGFzKHQpfHxSKGUsImhhcyIsdCksbn1mdW5jdGlvbiBLKGUpe3JldHVybiBSKGUsIml0ZXJhdGUiLCgwLHIua0opKGUpPyJsZW5ndGgiOl8pLFJlZmxlY3Qub3duS2V5cyhlKX1jb25zdCBHPXtnZXQ6aixzZXQ6SixkZWxldGVQcm9wZXJ0eTpILGhhczpWLG93bktleXM6S30sVz17Z2V0OlAsc2V0KGUsdCl7cmV0dXJuITB9LGRlbGV0ZVByb3BlcnR5KGUsdCl7cmV0dXJuITB9fSxxPSgwLHIubDcpKHt9LEcse2dldDpOLHNldDpEfSksej1lPT5lLFo9ZT0+UmVmbGVjdC5nZXRQcm90b3R5cGVPZihlKTtmdW5jdGlvbiBYKGUsdCxuPSExLHI9ITEpe2U9ZVsiX192X3JhdyJdO2NvbnN0IG89RWUoZSkscz1FZSh0KTtufHwodCE9PXMmJlIobywiZ2V0Iix0KSxSKG8sImdldCIscykpO2NvbnN0e2hhczppfT1aKG8pLGw9cj96Om4/amU6QWU7cmV0dXJuIGkuY2FsbChvLHQpP2woZS5nZXQodCkpOmkuY2FsbChvLHMpP2woZS5nZXQocykpOnZvaWQoZSE9PW8mJmUuZ2V0KHQpKX1mdW5jdGlvbiBZKGUsdD0hMSl7Y29uc3Qgbj10aGlzWyJfX3ZfcmF3Il0scj1FZShuKSxvPUVlKGUpO3JldHVybiB0fHwoZSE9PW8mJlIociwiaGFzIixlKSxSKHIsImhhcyIsbykpLGU9PT1vP24uaGFzKGUpOm4uaGFzKGUpfHxuLmhhcyhvKX1mdW5jdGlvbiBRKGUsdD0hMSl7cmV0dXJuIGU9ZVsiX192X3JhdyJdLCF0JiZSKEVlKGUpLCJpdGVyYXRlIixfKSxSZWZsZWN0LmdldChlLCJzaXplIixlKX1mdW5jdGlvbiBlZShlKXtlPUVlKGUpO2NvbnN0IHQ9RWUodGhpcyksbj1aKHQpLHI9bi5oYXMuY2FsbCh0LGUpO3JldHVybiByfHwodC5hZGQoZSksSSh0LCJhZGQiLGUsZSkpLHRoaXN9ZnVuY3Rpb24gdGUoZSx0KXt0PUVlKHQpO2NvbnN0IG49RWUodGhpcykse2hhczpvLGdldDpzfT1aKG4pO2xldCBpPW8uY2FsbChuLGUpO2l8fChlPUVlKGUpLGk9by5jYWxsKG4sZSkpO2NvbnN0IGw9cy5jYWxsKG4sZSk7cmV0dXJuIG4uc2V0KGUsdCksaT8oMCxyLmFVKSh0LGwpJiZJKG4sInNldCIsZSx0LGwpOkkobiwiYWRkIixlLHQpLHRoaXN9ZnVuY3Rpb24gbmUoZSl7Y29uc3QgdD1FZSh0aGlzKSx7aGFzOm4sZ2V0OnJ9PVoodCk7bGV0IG89bi5jYWxsKHQsZSk7b3x8KGU9RWUoZSksbz1uLmNhbGwodCxlKSk7Y29uc3Qgcz1yP3IuY2FsbCh0LGUpOnZvaWQgMCxpPXQuZGVsZXRlKGUpO3JldHVybiBvJiZJKHQsImRlbGV0ZSIsZSx2b2lkIDAscyksaX1mdW5jdGlvbiByZSgpe2NvbnN0IGU9RWUodGhpcyksdD0wIT09ZS5zaXplLG49dm9pZCAwLHI9ZS5jbGVhcigpO3JldHVybiB0JiZJKGUsImNsZWFyIix2b2lkIDAsdm9pZCAwLG4pLHJ9ZnVuY3Rpb24gb2UoZSx0KXtyZXR1cm4gZnVuY3Rpb24obixyKXtjb25zdCBvPXRoaXMscz1vWyJfX3ZfcmF3Il0saT1FZShzKSxsPXQ/ejplP2plOkFlO3JldHVybiFlJiZSKGksIml0ZXJhdGUiLF8pLHMuZm9yRWFjaCgoKGUsdCk9Pm4uY2FsbChyLGwoZSksbCh0KSxvKSkpfX1mdW5jdGlvbiBzZShlLHQsbil7cmV0dXJuIGZ1bmN0aW9uKC4uLm8pe2NvbnN0IHM9dGhpc1siX192X3JhdyJdLGk9RWUocyksbD0oMCxyLl9OKShpKSxjPSJlbnRyaWVzIj09PWV8fGU9PT1TeW1ib2wuaXRlcmF0b3ImJmwsdT0ia2V5cyI9PT1lJiZsLGE9c1tlXSguLi5vKSxmPW4/ejp0P2plOkFlO3JldHVybiF0JiZSKGksIml0ZXJhdGUiLHU/eTpfKSx7bmV4dCgpe2NvbnN0e3ZhbHVlOmUsZG9uZTp0fT1hLm5leHQoKTtyZXR1cm4gdD97dmFsdWU6ZSxkb25lOnR9Ont2YWx1ZTpjP1tmKGVbMF0pLGYoZVsxXSldOmYoZSksZG9uZTp0fX0sW1N5bWJvbC5pdGVyYXRvcl0oKXtyZXR1cm4gdGhpc319fX1mdW5jdGlvbiBpZShlKXtyZXR1cm4gZnVuY3Rpb24oLi4udCl7cmV0dXJuImRlbGV0ZSIhPT1lJiZ0aGlzfX1mdW5jdGlvbiBsZSgpe2NvbnN0IGU9e2dldChlKXtyZXR1cm4gWCh0aGlzLGUpfSxnZXQgc2l6ZSgpe3JldHVybiBRKHRoaXMpfSxoYXM6WSxhZGQ6ZWUsc2V0OnRlLGRlbGV0ZTpuZSxjbGVhcjpyZSxmb3JFYWNoOm9lKCExLCExKX0sdD17Z2V0KGUpe3JldHVybiBYKHRoaXMsZSwhMSwhMCl9LGdldCBzaXplKCl7cmV0dXJuIFEodGhpcyl9LGhhczpZLGFkZDplZSxzZXQ6dGUsZGVsZXRlOm5lLGNsZWFyOnJlLGZvckVhY2g6b2UoITEsITApfSxuPXtnZXQoZSl7cmV0dXJuIFgodGhpcyxlLCEwKX0sZ2V0IHNpemUoKXtyZXR1cm4gUSh0aGlzLCEwKX0saGFzKGUpe3JldHVybiBZLmNhbGwodGhpcyxlLCEwKX0sYWRkOmllKCJhZGQiKSxzZXQ6aWUoInNldCIpLGRlbGV0ZTppZSgiZGVsZXRlIiksY2xlYXI6aWUoImNsZWFyIiksZm9yRWFjaDpvZSghMCwhMSl9LHI9e2dldChlKXtyZXR1cm4gWCh0aGlzLGUsITAsITApfSxnZXQgc2l6ZSgpe3JldHVybiBRKHRoaXMsITApfSxoYXMoZSl7cmV0dXJuIFkuY2FsbCh0aGlzLGUsITApfSxhZGQ6aWUoImFkZCIpLHNldDppZSgic2V0IiksZGVsZXRlOmllKCJkZWxldGUiKSxjbGVhcjppZSgiY2xlYXIiKSxmb3JFYWNoOm9lKCEwLCEwKX0sbz1bImtleXMiLCJ2YWx1ZXMiLCJlbnRyaWVzIixTeW1ib2wuaXRlcmF0b3JdO3JldHVybiBvLmZvckVhY2goKG89PntlW29dPXNlKG8sITEsITEpLG5bb109c2UobywhMCwhMSksdFtvXT1zZShvLCExLCEwKSxyW29dPXNlKG8sITAsITApfSkpLFtlLG4sdCxyXX1jb25zdFtjZSx1ZSxhZSxmZV09bGUoKTtmdW5jdGlvbiBwZShlLHQpe2NvbnN0IG49dD9lP2ZlOmFlOmU/dWU6Y2U7cmV0dXJuKHQsbyxzKT0+Il9fdl9pc1JlYWN0aXZlIj09PW8/IWU6Il9fdl9pc1JlYWRvbmx5Ij09PW8/ZToiX192X3JhdyI9PT1vP3Q6UmVmbGVjdC5nZXQoKDAsci5SSSkobixvKSYmbyBpbiB0P246dCxvLHMpfWNvbnN0IGRlPXtnZXQ6cGUoITEsITEpfSxoZT17Z2V0OnBlKCExLCEwKX0sdmU9e2dldDpwZSghMCwhMSl9O2NvbnN0IGdlPW5ldyBXZWFrTWFwLG1lPW5ldyBXZWFrTWFwLF9lPW5ldyBXZWFrTWFwLHllPW5ldyBXZWFrTWFwO2Z1bmN0aW9uIGJlKGUpe3N3aXRjaChlKXtjYXNlIk9iamVjdCI6Y2FzZSJBcnJheSI6cmV0dXJuIDE7Y2FzZSJNYXAiOmNhc2UiU2V0IjpjYXNlIldlYWtNYXAiOmNhc2UiV2Vha1NldCI6cmV0dXJuIDI7ZGVmYXVsdDpyZXR1cm4gMH19ZnVuY3Rpb24ga2UoZSl7cmV0dXJuIGVbIl9fdl9za2lwIl18fCFPYmplY3QuaXNFeHRlbnNpYmxlKGUpPzA6YmUoKDAsci5XNykoZSkpfWZ1bmN0aW9uIHdlKGUpe3JldHVybiBUZShlKT9lOlNlKGUsITEsRyxkZSxnZSl9ZnVuY3Rpb24gQ2UoZSl7cmV0dXJuIFNlKGUsITEscSxoZSxtZSl9ZnVuY3Rpb24geGUoZSl7cmV0dXJuIFNlKGUsITAsVyx2ZSxfZSl9ZnVuY3Rpb24gU2UoZSx0LG4sbyxzKXtpZighKDAsci5LbikoZSkpcmV0dXJuIGU7aWYoZVsiX192X3JhdyJdJiYoIXR8fCFlWyJfX3ZfaXNSZWFjdGl2ZSJdKSlyZXR1cm4gZTtjb25zdCBpPXMuZ2V0KGUpO2lmKGkpcmV0dXJuIGk7Y29uc3QgbD1rZShlKTtpZigwPT09bClyZXR1cm4gZTtjb25zdCBjPW5ldyBQcm94eShlLDI9PT1sP286bik7cmV0dXJuIHMuc2V0KGUsYyksY31mdW5jdGlvbiBSZShlKXtyZXR1cm4gVGUoZSk/UmUoZVsiX192X3JhdyJdKTohKCFlfHwhZVsiX192X2lzUmVhY3RpdmUiXSl9ZnVuY3Rpb24gVGUoZSl7cmV0dXJuISghZXx8IWVbIl9fdl9pc1JlYWRvbmx5Il0pfWZ1bmN0aW9uIEllKGUpe3JldHVybiEoIWV8fCFlWyJfX3ZfaXNTaGFsbG93Il0pfWZ1bmN0aW9uIE9lKGUpe3JldHVybiBSZShlKXx8VGUoZSl9ZnVuY3Rpb24gRWUoZSl7Y29uc3QgdD1lJiZlWyJfX3ZfcmF3Il07cmV0dXJuIHQ/RWUodCk6ZX1mdW5jdGlvbiBGZShlKXtyZXR1cm4oMCxyLk5qKShlLCJfX3Zfc2tpcCIsITApLGV9Y29uc3QgQWU9ZT0+KDAsci5LbikoZSk/d2UoZSk6ZSxqZT1lPT4oMCxyLktuKShlKT94ZShlKTplO2Z1bmN0aW9uIE5lKGUpe3cmJm0mJihlPUVlKGUpLFQoZS5kZXB8fChlLmRlcD1jKCkpKSl9ZnVuY3Rpb24gUGUoZSx0KXtlPUVlKGUpO2NvbnN0IG49ZS5kZXA7biYmTyhuKX1mdW5jdGlvbiBVZShlKXtyZXR1cm4hKCFlfHwhMCE9PWUuX192X2lzUmVmKX1mdW5jdGlvbiBMZShlKXtyZXR1cm4gJGUoZSwhMSl9ZnVuY3Rpb24gJGUoZSx0KXtyZXR1cm4gVWUoZSk/ZTpuZXcgTWUoZSx0KX1jbGFzcyBNZXtjb25zdHJ1Y3RvcihlLHQpe3RoaXMuX192X2lzU2hhbGxvdz10LHRoaXMuZGVwPXZvaWQgMCx0aGlzLl9fdl9pc1JlZj0hMCx0aGlzLl9yYXdWYWx1ZT10P2U6RWUoZSksdGhpcy5fdmFsdWU9dD9lOkFlKGUpfWdldCB2YWx1ZSgpe3JldHVybiBOZSh0aGlzKSx0aGlzLl92YWx1ZX1zZXQgdmFsdWUoZSl7Y29uc3QgdD10aGlzLl9fdl9pc1NoYWxsb3d8fEllKGUpfHxUZShlKTtlPXQ/ZTpFZShlKSwoMCxyLmFVKShlLHRoaXMuX3Jhd1ZhbHVlKSYmKHRoaXMuX3Jhd1ZhbHVlPWUsdGhpcy5fdmFsdWU9dD9lOkFlKGUpLFBlKHRoaXMsZSkpfX1mdW5jdGlvbiBKZShlKXtyZXR1cm4gVWUoZSk/ZS52YWx1ZTplfWNvbnN0IERlPXtnZXQ6KGUsdCxuKT0+SmUoUmVmbGVjdC5nZXQoZSx0LG4pKSxzZXQ6KGUsdCxuLHIpPT57Y29uc3Qgbz1lW3RdO3JldHVybiBVZShvKSYmIVVlKG4pPyhvLnZhbHVlPW4sITApOlJlZmxlY3Quc2V0KGUsdCxuLHIpfX07ZnVuY3Rpb24gQmUoZSl7cmV0dXJuIFJlKGUpP2U6bmV3IFByb3h5KGUsRGUpfXZhciBIZTtjbGFzcyBWZXtjb25zdHJ1Y3RvcihlLHQsbixyKXt0aGlzLl9zZXR0ZXI9dCx0aGlzLmRlcD12b2lkIDAsdGhpcy5fX3ZfaXNSZWY9ITAsdGhpc1tIZV09ITEsdGhpcy5fZGlydHk9ITAsdGhpcy5lZmZlY3Q9bmV3IGIoZSwoKCk9Pnt0aGlzLl9kaXJ0eXx8KHRoaXMuX2RpcnR5PSEwLFBlKHRoaXMpKX0pKSx0aGlzLmVmZmVjdC5jb21wdXRlZD10aGlzLHRoaXMuZWZmZWN0LmFjdGl2ZT10aGlzLl9jYWNoZWFibGU9IXIsdGhpc1siX192X2lzUmVhZG9ubHkiXT1ufWdldCB2YWx1ZSgpe2NvbnN0IGU9RWUodGhpcyk7cmV0dXJuIE5lKGUpLCFlLl9kaXJ0eSYmZS5fY2FjaGVhYmxlfHwoZS5fZGlydHk9ITEsZS5fdmFsdWU9ZS5lZmZlY3QucnVuKCkpLGUuX3ZhbHVlfXNldCB2YWx1ZShlKXt0aGlzLl9zZXR0ZXIoZSl9fWZ1bmN0aW9uIEtlKGUsdCxuPSExKXtsZXQgbyxzO2NvbnN0IGk9KDAsci5tZikoZSk7aT8obz1lLHM9ci5kRyk6KG89ZS5nZXQscz1lLnNldCk7Y29uc3QgbD1uZXcgVmUobyxzLGl8fCFzLG4pO3JldHVybiBsfUhlPSJfX3ZfaXNSZWFkb25seSJ9LDI1MjpmdW5jdGlvbihlLHQsbil7bi5kKHQseyRkOmZ1bmN0aW9uKCl7cmV0dXJuIGl9LENuOmZ1bmN0aW9uKCl7cmV0dXJuIFV9LEZOOmZ1bmN0aW9uKCl7cmV0dXJuIGxufSxIWTpmdW5jdGlvbigpe3JldHVybiBUdH0sS286ZnVuY3Rpb24oKXtyZXR1cm4gTmV9LFAkOmZ1bmN0aW9uKCl7cmV0dXJuIHJlfSxRNjpmdW5jdGlvbigpe3JldHVybiB1ZX0sVTI6ZnVuY3Rpb24oKXtyZXR1cm4gc2V9LFVrOmZ1bmN0aW9uKCl7cmV0dXJuIFp0fSxVczpmdW5jdGlvbigpe3JldHVybiBrdH0sV206ZnVuY3Rpb24oKXtyZXR1cm4gR3R9LFk4OmZ1bmN0aW9uKCl7cmV0dXJuIGVlfSxfOmZ1bmN0aW9uKCl7cmV0dXJuIEt0fSxhWjpmdW5jdGlvbigpe3JldHVybiBhZX0sZEQ6ZnVuY3Rpb24oKXtyZXR1cm4gUH0saDpmdW5jdGlvbigpe3JldHVybiB4bn0saUQ6ZnVuY3Rpb24oKXtyZXR1cm4gJHR9LGljOmZ1bmN0aW9uKCl7cmV0dXJuIFNlfSxqNDpmdW5jdGlvbigpe3JldHVybiBNdH0sbks6ZnVuY3Rpb24oKXtyZXR1cm4gY2V9LHc1OmZ1bmN0aW9uKCl7cmV0dXJuIEx9LHdnOmZ1bmN0aW9uKCl7cmV0dXJuIGp0fX0pO3ZhciByPW4oMjYyKSxvPW4oNTc3KTtmdW5jdGlvbiBzKGUsdCxuLHIpe2xldCBvO3RyeXtvPXI/ZSguLi5yKTplKCl9Y2F0Y2gocyl7bChzLHQsbil9cmV0dXJuIG99ZnVuY3Rpb24gaShlLHQsbixyKXtpZigoMCxvLm1mKShlKSl7Y29uc3QgaT1zKGUsdCxuLHIpO3JldHVybiBpJiYoMCxvLnRJKShpKSYmaS5jYXRjaCgoZT0+e2woZSx0LG4pfSkpLGl9Y29uc3QgYz1bXTtmb3IobGV0IG89MDtvPGUubGVuZ3RoO28rKyljLnB1c2goaShlW29dLHQsbixyKSk7cmV0dXJuIGN9ZnVuY3Rpb24gbChlLHQsbixyPSEwKXtjb25zdCBvPXQ/dC52bm9kZTpudWxsO2lmKHQpe2xldCByPXQucGFyZW50O2NvbnN0IG89dC5wcm94eSxpPW47d2hpbGUocil7Y29uc3QgdD1yLmVjO2lmKHQpZm9yKGxldCBuPTA7bjx0Lmxlbmd0aDtuKyspaWYoITE9PT10W25dKGUsbyxpKSlyZXR1cm47cj1yLnBhcmVudH1jb25zdCBsPXQuYXBwQ29udGV4dC5jb25maWcuZXJyb3JIYW5kbGVyO2lmKGwpcmV0dXJuIHZvaWQgcyhsLG51bGwsMTAsW2UsbyxpXSl9YyhlLG4sbyxyKX1mdW5jdGlvbiBjKGUsdCxuLHI9ITApe2NvbnNvbGUuZXJyb3IoZSl9bGV0IHU9ITEsYT0hMTtjb25zdCBmPVtdO2xldCBwPTA7Y29uc3QgZD1bXTtsZXQgaD1udWxsLHY9MDtjb25zdCBnPVByb21pc2UucmVzb2x2ZSgpO2xldCBtPW51bGw7ZnVuY3Rpb24gXyhlKXtjb25zdCB0PW18fGc7cmV0dXJuIGU/dC50aGVuKHRoaXM/ZS5iaW5kKHRoaXMpOmUpOnR9ZnVuY3Rpb24geShlKXtsZXQgdD1wKzEsbj1mLmxlbmd0aDt3aGlsZSh0PG4pe2NvbnN0IHI9dCtuPj4+MSxvPVIoZltyXSk7bzxlP3Q9cisxOm49cn1yZXR1cm4gdH1mdW5jdGlvbiBiKGUpe2YubGVuZ3RoJiZmLmluY2x1ZGVzKGUsdSYmZS5hbGxvd1JlY3Vyc2U/cCsxOnApfHwobnVsbD09ZS5pZD9mLnB1c2goZSk6Zi5zcGxpY2UoeShlLmlkKSwwLGUpLGsoKSl9ZnVuY3Rpb24gaygpe3V8fGF8fChhPSEwLG09Zy50aGVuKEkpKX1mdW5jdGlvbiB3KGUpe2NvbnN0IHQ9Zi5pbmRleE9mKGUpO3Q+cCYmZi5zcGxpY2UodCwxKX1mdW5jdGlvbiBDKGUpeygwLG8ua0opKGUpP2QucHVzaCguLi5lKTpoJiZoLmluY2x1ZGVzKGUsZS5hbGxvd1JlY3Vyc2U/disxOnYpfHxkLnB1c2goZSksaygpfWZ1bmN0aW9uIHgoZSx0PSh1P3ArMTowKSl7Zm9yKDA7dDxmLmxlbmd0aDt0Kyspe2NvbnN0IGU9Zlt0XTtlJiZlLnByZSYmKGYuc3BsaWNlKHQsMSksdC0tLGUoKSl9fWZ1bmN0aW9uIFMoZSl7aWYoZC5sZW5ndGgpe2NvbnN0IGU9Wy4uLm5ldyBTZXQoZCldO2lmKGQubGVuZ3RoPTAsaClyZXR1cm4gdm9pZCBoLnB1c2goLi4uZSk7Zm9yKGg9ZSxoLnNvcnQoKChlLHQpPT5SKGUpLVIodCkpKSx2PTA7djxoLmxlbmd0aDt2KyspaFt2XSgpO2g9bnVsbCx2PTB9fWNvbnN0IFI9ZT0+bnVsbD09ZS5pZD8xLzA6ZS5pZCxUPShlLHQpPT57Y29uc3Qgbj1SKGUpLVIodCk7aWYoMD09PW4pe2lmKGUucHJlJiYhdC5wcmUpcmV0dXJuLTE7aWYodC5wcmUmJiFlLnByZSlyZXR1cm4gMX1yZXR1cm4gbn07ZnVuY3Rpb24gSShlKXthPSExLHU9ITAsZi5zb3J0KFQpO28uZEc7dHJ5e2ZvcihwPTA7cDxmLmxlbmd0aDtwKyspe2NvbnN0IGU9ZltwXTtlJiYhMSE9PWUuYWN0aXZlJiZzKGUsbnVsbCwxNCl9fWZpbmFsbHl7cD0wLGYubGVuZ3RoPTAsUyhlKSx1PSExLG09bnVsbCwoZi5sZW5ndGh8fGQubGVuZ3RoKSYmSShlKX19bmV3IFNldDtuZXcgTWFwO2Z1bmN0aW9uIE8oZSx0LC4uLm4pe2lmKGUuaXNVbm1vdW50ZWQpcmV0dXJuO2NvbnN0IHI9ZS52bm9kZS5wcm9wc3x8by5rVDtsZXQgcz1uO2NvbnN0IGw9dC5zdGFydHNXaXRoKCJ1cGRhdGU6IiksYz1sJiZ0LnNsaWNlKDcpO2lmKGMmJmMgaW4gcil7Y29uc3QgZT1gJHsibW9kZWxWYWx1ZSI9PT1jPyJtb2RlbCI6Y31Nb2RpZmllcnNgLHtudW1iZXI6dCx0cmltOml9PXJbZV18fG8ua1Q7aSYmKHM9bi5tYXAoKGU9PigwLG8uSEQpKGUpP2UudHJpbSgpOmUpKSksdCYmKHM9bi5tYXAoby5oNSkpfWxldCB1O2xldCBhPXJbdT0oMCxvLmhSKSh0KV18fHJbdT0oMCxvLmhSKSgoMCxvLl9BKSh0KSldOyFhJiZsJiYoYT1yW3U9KDAsby5oUikoKDAsby5ycykodCkpXSksYSYmaShhLGUsNixzKTtjb25zdCBmPXJbdSsiT25jZSJdO2lmKGYpe2lmKGUuZW1pdHRlZCl7aWYoZS5lbWl0dGVkW3VdKXJldHVybn1lbHNlIGUuZW1pdHRlZD17fTtlLmVtaXR0ZWRbdV09ITAsaShmLGUsNixzKX19ZnVuY3Rpb24gRShlLHQsbj0hMSl7Y29uc3Qgcj10LmVtaXRzQ2FjaGUscz1yLmdldChlKTtpZih2b2lkIDAhPT1zKXJldHVybiBzO2NvbnN0IGk9ZS5lbWl0cztsZXQgbD17fSxjPSExO2lmKCEoMCxvLm1mKShlKSl7Y29uc3Qgcj1lPT57Y29uc3Qgbj1FKGUsdCwhMCk7biYmKGM9ITAsKDAsby5sNykobCxuKSl9OyFuJiZ0Lm1peGlucy5sZW5ndGgmJnQubWl4aW5zLmZvckVhY2gociksZS5leHRlbmRzJiZyKGUuZXh0ZW5kcyksZS5taXhpbnMmJmUubWl4aW5zLmZvckVhY2gocil9cmV0dXJuIGl8fGM/KCgwLG8ua0opKGkpP2kuZm9yRWFjaCgoZT0+bFtlXT1udWxsKSk6KDAsby5sNykobCxpKSwoMCxvLktuKShlKSYmci5zZXQoZSxsKSxsKTooKDAsby5LbikoZSkmJnIuc2V0KGUsbnVsbCksbnVsbCl9ZnVuY3Rpb24gRihlLHQpe3JldHVybiEoIWV8fCEoMCxvLkY3KSh0KSkmJih0PXQuc2xpY2UoMikucmVwbGFjZSgvT25jZSQvLCIiKSwoMCxvLlJJKShlLHRbMF0udG9Mb3dlckNhc2UoKSt0LnNsaWNlKDEpKXx8KDAsby5SSSkoZSwoMCxvLnJzKSh0KSl8fCgwLG8uUkkpKGUsdCkpfWxldCBBPW51bGwsaj1udWxsO2Z1bmN0aW9uIE4oZSl7Y29uc3QgdD1BO3JldHVybiBBPWUsaj1lJiZlLnR5cGUuX19zY29wZUlkfHxudWxsLHR9ZnVuY3Rpb24gUChlKXtqPWV9ZnVuY3Rpb24gVSgpe2o9bnVsbH1mdW5jdGlvbiBMKGUsdD1BLG4pe2lmKCF0KXJldHVybiBlO2lmKGUuX24pcmV0dXJuIGU7Y29uc3Qgcj0oLi4ubik9PntyLl9kJiZVdCgtMSk7Y29uc3Qgbz1OKHQpO2xldCBzO3RyeXtzPWUoLi4ubil9ZmluYWxseXtOKG8pLHIuX2QmJlV0KDEpfXJldHVybiBzfTtyZXR1cm4gci5fbj0hMCxyLl9jPSEwLHIuX2Q9ITAscn1mdW5jdGlvbiAkKGUpe2NvbnN0e3R5cGU6dCx2bm9kZTpuLHByb3h5OnIsd2l0aFByb3h5OnMscHJvcHM6aSxwcm9wc09wdGlvbnM6W2NdLHNsb3RzOnUsYXR0cnM6YSxlbWl0OmYscmVuZGVyOnAscmVuZGVyQ2FjaGU6ZCxkYXRhOmgsc2V0dXBTdGF0ZTp2LGN0eDpnLGluaGVyaXRBdHRyczptfT1lO2xldCBfLHk7Y29uc3QgYj1OKGUpO3RyeXtpZig0Jm4uc2hhcGVGbGFnKXtjb25zdCBlPXN8fHI7Xz1YdChwLmNhbGwoZSxlLGQsaSx2LGgsZykpLHk9YX1lbHNle2NvbnN0IGU9dDswLF89WHQoZS5sZW5ndGg+MT9lKGkse2F0dHJzOmEsc2xvdHM6dSxlbWl0OmZ9KTplKGksbnVsbCkpLHk9dC5wcm9wcz9hOk0oYSl9fWNhdGNoKHcpe0Z0Lmxlbmd0aD0wLGwodyxlLDEpLF89R3QoT3QpfWxldCBrPV87aWYoeSYmITEhPT1tKXtjb25zdCBlPU9iamVjdC5rZXlzKHkpLHtzaGFwZUZsYWc6dH09aztlLmxlbmd0aCYmNyZ0JiYoYyYmZS5zb21lKG8udFIpJiYoeT1KKHksYykpLGs9enQoayx5KSl9cmV0dXJuIG4uZGlycyYmKGs9enQoayksay5kaXJzPWsuZGlycz9rLmRpcnMuY29uY2F0KG4uZGlycyk6bi5kaXJzKSxuLnRyYW5zaXRpb24mJihrLnRyYW5zaXRpb249bi50cmFuc2l0aW9uKSxfPWssTihiKSxffWNvbnN0IE09ZT0+e2xldCB0O2Zvcihjb25zdCBuIGluIGUpKCJjbGFzcyI9PT1ufHwic3R5bGUiPT09bnx8KDAsby5GNykobikpJiYoKHR8fCh0PXt9KSlbbl09ZVtuXSk7cmV0dXJuIHR9LEo9KGUsdCk9Pntjb25zdCBuPXt9O2Zvcihjb25zdCByIGluIGUpKDAsby50UikocikmJnIuc2xpY2UoOSlpbiB0fHwobltyXT1lW3JdKTtyZXR1cm4gbn07ZnVuY3Rpb24gRChlLHQsbil7Y29uc3R7cHJvcHM6cixjaGlsZHJlbjpvLGNvbXBvbmVudDpzfT1lLHtwcm9wczppLGNoaWxkcmVuOmwscGF0Y2hGbGFnOmN9PXQsdT1zLmVtaXRzT3B0aW9ucztpZih0LmRpcnN8fHQudHJhbnNpdGlvbilyZXR1cm4hMDtpZighKG4mJmM+PTApKXJldHVybiEoIW8mJiFsfHxsJiZsLiRzdGFibGUpfHxyIT09aSYmKHI/IWl8fEIocixpLHUpOiEhaSk7aWYoMTAyNCZjKXJldHVybiEwO2lmKDE2JmMpcmV0dXJuIHI/QihyLGksdSk6ISFpO2lmKDgmYyl7Y29uc3QgZT10LmR5bmFtaWNQcm9wcztmb3IobGV0IHQ9MDt0PGUubGVuZ3RoO3QrKyl7Y29uc3Qgbj1lW3RdO2lmKGlbbl0hPT1yW25dJiYhRih1LG4pKXJldHVybiEwfX1yZXR1cm4hMX1mdW5jdGlvbiBCKGUsdCxuKXtjb25zdCByPU9iamVjdC5rZXlzKHQpO2lmKHIubGVuZ3RoIT09T2JqZWN0LmtleXMoZSkubGVuZ3RoKXJldHVybiEwO2ZvcihsZXQgbz0wO288ci5sZW5ndGg7bysrKXtjb25zdCBzPXJbb107aWYodFtzXSE9PWVbc10mJiFGKG4scykpcmV0dXJuITB9cmV0dXJuITF9ZnVuY3Rpb24gSCh7dm5vZGU6ZSxwYXJlbnQ6dH0sbil7d2hpbGUodCYmdC5zdWJUcmVlPT09ZSkoZT10LnZub2RlKS5lbD1uLHQ9dC5wYXJlbnR9Y29uc3QgVj1lPT5lLl9faXNTdXNwZW5zZTtmdW5jdGlvbiBLKGUsdCl7dCYmdC5wZW5kaW5nQnJhbmNoPygwLG8ua0opKGUpP3QuZWZmZWN0cy5wdXNoKC4uLmUpOnQuZWZmZWN0cy5wdXNoKGUpOkMoZSl9ZnVuY3Rpb24gRyhlLHQpe2lmKHNuKXtsZXQgbj1zbi5wcm92aWRlcztjb25zdCByPXNuLnBhcmVudCYmc24ucGFyZW50LnByb3ZpZGVzO3I9PT1uJiYobj1zbi5wcm92aWRlcz1PYmplY3QuY3JlYXRlKHIpKSxuW2VdPXR9ZWxzZSAwfWZ1bmN0aW9uIFcoZSx0LG49ITEpe2NvbnN0IHI9c258fEE7aWYocil7Y29uc3Qgcz1udWxsPT1yLnBhcmVudD9yLnZub2RlLmFwcENvbnRleHQmJnIudm5vZGUuYXBwQ29udGV4dC5wcm92aWRlczpyLnBhcmVudC5wcm92aWRlcztpZihzJiZlIGluIHMpcmV0dXJuIHNbZV07aWYoYXJndW1lbnRzLmxlbmd0aD4xKXJldHVybiBuJiYoMCxvLm1mKSh0KT90LmNhbGwoci5wcm94eSk6dH1lbHNlIDB9Y29uc3QgcT17fTtmdW5jdGlvbiB6KGUsdCxuKXtyZXR1cm4gWihlLHQsbil9ZnVuY3Rpb24gWihlLHQse2ltbWVkaWF0ZTpuLGRlZXA6bCxmbHVzaDpjLG9uVHJhY2s6dSxvblRyaWdnZXI6YX09by5rVCl7Y29uc3QgZj0oMCxyLm5aKSgpPT09KG51bGw9PT1zbnx8dm9pZCAwPT09c24/dm9pZCAwOnNuLnNjb3BlKT9zbjpudWxsO2xldCBwLGQsaD0hMSx2PSExO2lmKCgwLHIuZHEpKGUpPyhwPSgpPT5lLnZhbHVlLGg9KDAsci55VCkoZSkpOigwLHIuUEcpKGUpPyhwPSgpPT5lLGw9ITApOigwLG8ua0opKGUpPyh2PSEwLGg9ZS5zb21lKChlPT4oMCxyLlBHKShlKXx8KDAsci55VCkoZSkpKSxwPSgpPT5lLm1hcCgoZT0+KDAsci5kcSkoZSk/ZS52YWx1ZTooMCxyLlBHKShlKT9RKGUpOigwLG8ubWYpKGUpP3MoZSxmLDIpOnZvaWQgMCkpKTpwPSgwLG8ubWYpKGUpP3Q/KCk9PnMoZSxmLDIpOigpPT57aWYoIWZ8fCFmLmlzVW5tb3VudGVkKXJldHVybiBkJiZkKCksaShlLGYsMyxbbV0pfTpvLmRHLHQmJmwpe2NvbnN0IGU9cDtwPSgpPT5RKGUoKSl9bGV0IGcsbT1lPT57ZD13Lm9uU3RvcD0oKT0+e3MoZSxmLDQpfX07aWYoZG4pe2lmKG09by5kRyx0P24mJmkodCxmLDMsW3AoKSx2P1tdOnZvaWQgMCxtXSk6cCgpLCJzeW5jIiE9PWMpcmV0dXJuIG8uZEc7e2NvbnN0IGU9Um4oKTtnPWUuX193YXRjaGVySGFuZGxlc3x8KGUuX193YXRjaGVySGFuZGxlcz1bXSl9fWxldCBfPXY/bmV3IEFycmF5KGUubGVuZ3RoKS5maWxsKHEpOnE7Y29uc3QgeT0oKT0+e2lmKHcuYWN0aXZlKWlmKHQpe2NvbnN0IGU9dy5ydW4oKTsobHx8aHx8KHY/ZS5zb21lKCgoZSx0KT0+KDAsby5hVSkoZSxfW3RdKSkpOigwLG8uYVUpKGUsXykpKSYmKGQmJmQoKSxpKHQsZiwzLFtlLF89PT1xP3ZvaWQgMDp2JiZfWzBdPT09cT9bXTpfLG1dKSxfPWUpfWVsc2Ugdy5ydW4oKX07bGV0IGs7eS5hbGxvd1JlY3Vyc2U9ISF0LCJzeW5jIj09PWM/az15OiJwb3N0Ij09PWM/az0oKT0+YnQoeSxmJiZmLnN1c3BlbnNlKTooeS5wcmU9ITAsZiYmKHkuaWQ9Zi51aWQpLGs9KCk9PmIoeSkpO2NvbnN0IHc9bmV3IHIucXEocCxrKTt0P24/eSgpOl89dy5ydW4oKToicG9zdCI9PT1jP2J0KHcucnVuLmJpbmQodyksZiYmZi5zdXNwZW5zZSk6dy5ydW4oKTtjb25zdCBDPSgpPT57dy5zdG9wKCksZiYmZi5zY29wZSYmKDAsby5PZCkoZi5zY29wZS5lZmZlY3RzLHcpfTtyZXR1cm4gZyYmZy5wdXNoKEMpLEN9ZnVuY3Rpb24gWChlLHQsbil7Y29uc3Qgcj10aGlzLnByb3h5LHM9KDAsby5IRCkoZSk/ZS5pbmNsdWRlcygiLiIpP1kocixlKTooKT0+cltlXTplLmJpbmQocixyKTtsZXQgaTsoMCxvLm1mKSh0KT9pPXQ6KGk9dC5oYW5kbGVyLG49dCk7Y29uc3QgbD1zbjtjbih0aGlzKTtjb25zdCBjPVoocyxpLmJpbmQociksbik7cmV0dXJuIGw/Y24obCk6dW4oKSxjfWZ1bmN0aW9uIFkoZSx0KXtjb25zdCBuPXQuc3BsaXQoIi4iKTtyZXR1cm4oKT0+e2xldCB0PWU7Zm9yKGxldCBlPTA7ZTxuLmxlbmd0aCYmdDtlKyspdD10W25bZV1dO3JldHVybiB0fX1mdW5jdGlvbiBRKGUsdCl7aWYoISgwLG8uS24pKGUpfHxlWyJfX3Zfc2tpcCJdKXJldHVybiBlO2lmKHQ9dHx8bmV3IFNldCx0LmhhcyhlKSlyZXR1cm4gZTtpZih0LmFkZChlKSwoMCxyLmRxKShlKSlRKGUudmFsdWUsdCk7ZWxzZSBpZigoMCxvLmtKKShlKSlmb3IobGV0IG49MDtuPGUubGVuZ3RoO24rKylRKGVbbl0sdCk7ZWxzZSBpZigoMCxvLkRNKShlKXx8KDAsby5fTikoZSkpZS5mb3JFYWNoKChlPT57UShlLHQpfSkpO2Vsc2UgaWYoKDAsby5QTykoZSkpZm9yKGNvbnN0IG4gaW4gZSlRKGVbbl0sdCk7cmV0dXJuIGV9ZnVuY3Rpb24gZWUoKXtjb25zdCBlPXtpc01vdW50ZWQ6ITEsaXNMZWF2aW5nOiExLGlzVW5tb3VudGluZzohMSxsZWF2aW5nVk5vZGVzOm5ldyBNYXB9O3JldHVybiBDZSgoKCk9PntlLmlzTW91bnRlZD0hMH0pKSxSZSgoKCk9PntlLmlzVW5tb3VudGluZz0hMH0pKSxlfWNvbnN0IHRlPVtGdW5jdGlvbixBcnJheV0sbmU9e25hbWU6IkJhc2VUcmFuc2l0aW9uIixwcm9wczp7bW9kZTpTdHJpbmcsYXBwZWFyOkJvb2xlYW4scGVyc2lzdGVkOkJvb2xlYW4sb25CZWZvcmVFbnRlcjp0ZSxvbkVudGVyOnRlLG9uQWZ0ZXJFbnRlcjp0ZSxvbkVudGVyQ2FuY2VsbGVkOnRlLG9uQmVmb3JlTGVhdmU6dGUsb25MZWF2ZTp0ZSxvbkFmdGVyTGVhdmU6dGUsb25MZWF2ZUNhbmNlbGxlZDp0ZSxvbkJlZm9yZUFwcGVhcjp0ZSxvbkFwcGVhcjp0ZSxvbkFmdGVyQXBwZWFyOnRlLG9uQXBwZWFyQ2FuY2VsbGVkOnRlfSxzZXR1cChlLHtzbG90czp0fSl7Y29uc3Qgbj1sbigpLG89ZWUoKTtsZXQgcztyZXR1cm4oKT0+e2NvbnN0IGk9dC5kZWZhdWx0JiZ1ZSh0LmRlZmF1bHQoKSwhMCk7aWYoIWl8fCFpLmxlbmd0aClyZXR1cm47bGV0IGw9aVswXTtpZihpLmxlbmd0aD4xKXtsZXQgZT0hMTtmb3IoY29uc3QgdCBvZiBpKWlmKHQudHlwZSE9PU90KXswLGw9dCxlPSEwO2JyZWFrfX1jb25zdCBjPSgwLHIuSVUpKGUpLHttb2RlOnV9PWM7aWYoby5pc0xlYXZpbmcpcmV0dXJuIGllKGwpO2NvbnN0IGE9bGUobCk7aWYoIWEpcmV0dXJuIGllKGwpO2NvbnN0IGY9c2UoYSxjLG8sbik7Y2UoYSxmKTtjb25zdCBwPW4uc3ViVHJlZSxkPXAmJmxlKHApO2xldCBoPSExO2NvbnN0e2dldFRyYW5zaXRpb25LZXk6dn09YS50eXBlO2lmKHYpe2NvbnN0IGU9digpO3ZvaWQgMD09PXM/cz1lOmUhPT1zJiYocz1lLGg9ITApfWlmKGQmJmQudHlwZSE9PU90JiYoIUR0KGEsZCl8fGgpKXtjb25zdCBlPXNlKGQsYyxvLG4pO2lmKGNlKGQsZSksIm91dC1pbiI9PT11KXJldHVybiBvLmlzTGVhdmluZz0hMCxlLmFmdGVyTGVhdmU9KCk9PntvLmlzTGVhdmluZz0hMSwhMSE9PW4udXBkYXRlLmFjdGl2ZSYmbi51cGRhdGUoKX0saWUobCk7ImluLW91dCI9PT11JiZhLnR5cGUhPT1PdCYmKGUuZGVsYXlMZWF2ZT0oZSx0LG4pPT57Y29uc3Qgcj1vZShvLGQpO3JbU3RyaW5nKGQua2V5KV09ZCxlLl9sZWF2ZUNiPSgpPT57dCgpLGUuX2xlYXZlQ2I9dm9pZCAwLGRlbGV0ZSBmLmRlbGF5ZWRMZWF2ZX0sZi5kZWxheWVkTGVhdmU9bn0pfXJldHVybiBsfX19LHJlPW5lO2Z1bmN0aW9uIG9lKGUsdCl7Y29uc3R7bGVhdmluZ1ZOb2RlczpufT1lO2xldCByPW4uZ2V0KHQudHlwZSk7cmV0dXJuIHJ8fChyPU9iamVjdC5jcmVhdGUobnVsbCksbi5zZXQodC50eXBlLHIpKSxyfWZ1bmN0aW9uIHNlKGUsdCxuLHIpe2NvbnN0e2FwcGVhcjpzLG1vZGU6bCxwZXJzaXN0ZWQ6Yz0hMSxvbkJlZm9yZUVudGVyOnUsb25FbnRlcjphLG9uQWZ0ZXJFbnRlcjpmLG9uRW50ZXJDYW5jZWxsZWQ6cCxvbkJlZm9yZUxlYXZlOmQsb25MZWF2ZTpoLG9uQWZ0ZXJMZWF2ZTp2LG9uTGVhdmVDYW5jZWxsZWQ6ZyxvbkJlZm9yZUFwcGVhcjptLG9uQXBwZWFyOl8sb25BZnRlckFwcGVhcjp5LG9uQXBwZWFyQ2FuY2VsbGVkOmJ9PXQsaz1TdHJpbmcoZS5rZXkpLHc9b2UobixlKSxDPShlLHQpPT57ZSYmaShlLHIsOSx0KX0seD0oZSx0KT0+e2NvbnN0IG49dFsxXTtDKGUsdCksKDAsby5rSikoZSk/ZS5ldmVyeSgoZT0+ZS5sZW5ndGg8PTEpKSYmbigpOmUubGVuZ3RoPD0xJiZuKCl9LFM9e21vZGU6bCxwZXJzaXN0ZWQ6YyxiZWZvcmVFbnRlcih0KXtsZXQgcj11O2lmKCFuLmlzTW91bnRlZCl7aWYoIXMpcmV0dXJuO3I9bXx8dX10Ll9sZWF2ZUNiJiZ0Ll9sZWF2ZUNiKCEwKTtjb25zdCBvPXdba107byYmRHQoZSxvKSYmby5lbC5fbGVhdmVDYiYmby5lbC5fbGVhdmVDYigpLEMocixbdF0pfSxlbnRlcihlKXtsZXQgdD1hLHI9ZixvPXA7aWYoIW4uaXNNb3VudGVkKXtpZighcylyZXR1cm47dD1ffHxhLHI9eXx8ZixvPWJ8fHB9bGV0IGk9ITE7Y29uc3QgbD1lLl9lbnRlckNiPXQ9PntpfHwoaT0hMCxDKHQ/bzpyLFtlXSksUy5kZWxheWVkTGVhdmUmJlMuZGVsYXllZExlYXZlKCksZS5fZW50ZXJDYj12b2lkIDApfTt0P3godCxbZSxsXSk6bCgpfSxsZWF2ZSh0LHIpe2NvbnN0IG89U3RyaW5nKGUua2V5KTtpZih0Ll9lbnRlckNiJiZ0Ll9lbnRlckNiKCEwKSxuLmlzVW5tb3VudGluZylyZXR1cm4gcigpO0MoZCxbdF0pO2xldCBzPSExO2NvbnN0IGk9dC5fbGVhdmVDYj1uPT57c3x8KHM9ITAscigpLEMobj9nOnYsW3RdKSx0Ll9sZWF2ZUNiPXZvaWQgMCx3W29dPT09ZSYmZGVsZXRlIHdbb10pfTt3W29dPWUsaD94KGgsW3QsaV0pOmkoKX0sY2xvbmUoZSl7cmV0dXJuIHNlKGUsdCxuLHIpfX07cmV0dXJuIFN9ZnVuY3Rpb24gaWUoZSl7aWYocGUoZSkpcmV0dXJuIGU9enQoZSksZS5jaGlsZHJlbj1udWxsLGV9ZnVuY3Rpb24gbGUoZSl7cmV0dXJuIHBlKGUpP2UuY2hpbGRyZW4/ZS5jaGlsZHJlblswXTp2b2lkIDA6ZX1mdW5jdGlvbiBjZShlLHQpezYmZS5zaGFwZUZsYWcmJmUuY29tcG9uZW50P2NlKGUuY29tcG9uZW50LnN1YlRyZWUsdCk6MTI4JmUuc2hhcGVGbGFnPyhlLnNzQ29udGVudC50cmFuc2l0aW9uPXQuY2xvbmUoZS5zc0NvbnRlbnQpLGUuc3NGYWxsYmFjay50cmFuc2l0aW9uPXQuY2xvbmUoZS5zc0ZhbGxiYWNrKSk6ZS50cmFuc2l0aW9uPXR9ZnVuY3Rpb24gdWUoZSx0PSExLG4pe2xldCByPVtdLG89MDtmb3IobGV0IHM9MDtzPGUubGVuZ3RoO3MrKyl7bGV0IGk9ZVtzXTtjb25zdCBsPW51bGw9PW4/aS5rZXk6U3RyaW5nKG4pK1N0cmluZyhudWxsIT1pLmtleT9pLmtleTpzKTtpLnR5cGU9PT1UdD8oMTI4JmkucGF0Y2hGbGFnJiZvKysscj1yLmNvbmNhdCh1ZShpLmNoaWxkcmVuLHQsbCkpKToodHx8aS50eXBlIT09T3QpJiZyLnB1c2gobnVsbCE9bD96dChpLHtrZXk6bH0pOmkpfWlmKG8+MSlmb3IobGV0IHM9MDtzPHIubGVuZ3RoO3MrKylyW3NdLnBhdGNoRmxhZz0tMjtyZXR1cm4gcn1mdW5jdGlvbiBhZShlKXtyZXR1cm4oMCxvLm1mKShlKT97c2V0dXA6ZSxuYW1lOmUubmFtZX06ZX1jb25zdCBmZT1lPT4hIWUudHlwZS5fX2FzeW5jTG9hZGVyO2NvbnN0IHBlPWU9PmUudHlwZS5fX2lzS2VlcEFsaXZlO1JlZ0V4cCxSZWdFeHA7ZnVuY3Rpb24gZGUoZSx0KXtyZXR1cm4oMCxvLmtKKShlKT9lLnNvbWUoKGU9PmRlKGUsdCkpKTooMCxvLkhEKShlKT9lLnNwbGl0KCIsIikuaW5jbHVkZXModCk6ISEoMCxvLktqKShlKSYmZS50ZXN0KHQpfWZ1bmN0aW9uIGhlKGUsdCl7Z2UoZSwiYSIsdCl9ZnVuY3Rpb24gdmUoZSx0KXtnZShlLCJkYSIsdCl9ZnVuY3Rpb24gZ2UoZSx0LG49c24pe2NvbnN0IHI9ZS5fX3dkY3x8KGUuX193ZGM9KCk9PntsZXQgdD1uO3doaWxlKHQpe2lmKHQuaXNEZWFjdGl2YXRlZClyZXR1cm47dD10LnBhcmVudH1yZXR1cm4gZSgpfSk7aWYoYmUodCxyLG4pLG4pe2xldCBlPW4ucGFyZW50O3doaWxlKGUmJmUucGFyZW50KXBlKGUucGFyZW50LnZub2RlKSYmbWUocix0LG4sZSksZT1lLnBhcmVudH19ZnVuY3Rpb24gbWUoZSx0LG4scil7Y29uc3Qgcz1iZSh0LGUsciwhMCk7VGUoKCgpPT57KDAsby5PZCkoclt0XSxzKX0pLG4pfWZ1bmN0aW9uIF9lKGUpe2Uuc2hhcGVGbGFnJj0tMjU3LGUuc2hhcGVGbGFnJj0tNTEzfWZ1bmN0aW9uIHllKGUpe3JldHVybiAxMjgmZS5zaGFwZUZsYWc/ZS5zc0NvbnRlbnQ6ZX1mdW5jdGlvbiBiZShlLHQsbj1zbixvPSExKXtpZihuKXtjb25zdCBzPW5bZV18fChuW2VdPVtdKSxsPXQuX193ZWh8fCh0Ll9fd2VoPSguLi5vKT0+e2lmKG4uaXNVbm1vdW50ZWQpcmV0dXJuOygwLHIuSmQpKCksY24obik7Y29uc3Qgcz1pKHQsbixlLG8pO3JldHVybiB1bigpLCgwLHIubGspKCksc30pO3JldHVybiBvP3MudW5zaGlmdChsKTpzLnB1c2gobCksbH19Y29uc3Qga2U9ZT0+KHQsbj1zbik9PighZG58fCJzcCI9PT1lKSYmYmUoZSwoKC4uLmUpPT50KC4uLmUpKSxuKSx3ZT1rZSgiYm0iKSxDZT1rZSgibSIpLHhlPWtlKCJidSIpLFNlPWtlKCJ1IiksUmU9a2UoImJ1bSIpLFRlPWtlKCJ1bSIpLEllPWtlKCJzcCIpLE9lPWtlKCJydGciKSxFZT1rZSgicnRjIik7ZnVuY3Rpb24gRmUoZSx0PXNuKXtiZSgiZWMiLGUsdCl9ZnVuY3Rpb24gQWUoZSx0LG4sbyl7Y29uc3Qgcz1lLmRpcnMsbD10JiZ0LmRpcnM7Zm9yKGxldCBjPTA7YzxzLmxlbmd0aDtjKyspe2NvbnN0IHU9c1tjXTtsJiYodS5vbGRWYWx1ZT1sW2NdLnZhbHVlKTtsZXQgYT11LmRpcltvXTthJiYoKDAsci5KZCkoKSxpKGEsbiw4LFtlLmVsLHUsZSx0XSksKDAsci5saykoKSl9fWNvbnN0IGplPVN5bWJvbCgpO2Z1bmN0aW9uIE5lKGUsdCxuLHIpe2xldCBzO2NvbnN0IGk9biYmbltyXTtpZigoMCxvLmtKKShlKXx8KDAsby5IRCkoZSkpe3M9bmV3IEFycmF5KGUubGVuZ3RoKTtmb3IobGV0IG49MCxyPWUubGVuZ3RoO248cjtuKyspc1tuXT10KGVbbl0sbix2b2lkIDAsaSYmaVtuXSl9ZWxzZSBpZigibnVtYmVyIj09PXR5cGVvZiBlKXswLHM9bmV3IEFycmF5KGUpO2ZvcihsZXQgbj0wO248ZTtuKyspc1tuXT10KG4rMSxuLHZvaWQgMCxpJiZpW25dKX1lbHNlIGlmKCgwLG8uS24pKGUpKWlmKGVbU3ltYm9sLml0ZXJhdG9yXSlzPUFycmF5LmZyb20oZSwoKGUsbik9PnQoZSxuLHZvaWQgMCxpJiZpW25dKSkpO2Vsc2V7Y29uc3Qgbj1PYmplY3Qua2V5cyhlKTtzPW5ldyBBcnJheShuLmxlbmd0aCk7Zm9yKGxldCByPTAsbz1uLmxlbmd0aDtyPG87cisrKXtjb25zdCBvPW5bcl07c1tyXT10KGVbb10sbyxyLGkmJmlbcl0pfX1lbHNlIHM9W107cmV0dXJuIG4mJihuW3JdPXMpLHN9Y29uc3QgUGU9ZT0+ZT9hbihlKT9ibihlKXx8ZS5wcm94eTpQZShlLnBhcmVudCk6bnVsbCxVZT0oMCxvLmw3KShPYmplY3QuY3JlYXRlKG51bGwpLHskOmU9PmUsJGVsOmU9PmUudm5vZGUuZWwsJGRhdGE6ZT0+ZS5kYXRhLCRwcm9wczplPT5lLnByb3BzLCRhdHRyczplPT5lLmF0dHJzLCRzbG90czplPT5lLnNsb3RzLCRyZWZzOmU9PmUucmVmcywkcGFyZW50OmU9PlBlKGUucGFyZW50KSwkcm9vdDplPT5QZShlLnJvb3QpLCRlbWl0OmU9PmUuZW1pdCwkb3B0aW9uczplPT5WZShlKSwkZm9yY2VVcGRhdGU6ZT0+ZS5mfHwoZS5mPSgpPT5iKGUudXBkYXRlKSksJG5leHRUaWNrOmU9PmUubnx8KGUubj1fLmJpbmQoZS5wcm94eSkpLCR3YXRjaDplPT5YLmJpbmQoZSl9KSxMZT0oZSx0KT0+ZSE9PW8ua1QmJiFlLl9faXNTY3JpcHRTZXR1cCYmKDAsby5SSSkoZSx0KSwkZT17Z2V0KHtfOmV9LHQpe2NvbnN0e2N0eDpuLHNldHVwU3RhdGU6cyxkYXRhOmkscHJvcHM6bCxhY2Nlc3NDYWNoZTpjLHR5cGU6dSxhcHBDb250ZXh0OmF9PWU7bGV0IGY7aWYoIiQiIT09dFswXSl7Y29uc3Qgcj1jW3RdO2lmKHZvaWQgMCE9PXIpc3dpdGNoKHIpe2Nhc2UgMTpyZXR1cm4gc1t0XTtjYXNlIDI6cmV0dXJuIGlbdF07Y2FzZSA0OnJldHVybiBuW3RdO2Nhc2UgMzpyZXR1cm4gbFt0XX1lbHNle2lmKExlKHMsdCkpcmV0dXJuIGNbdF09MSxzW3RdO2lmKGkhPT1vLmtUJiYoMCxvLlJJKShpLHQpKXJldHVybiBjW3RdPTIsaVt0XTtpZigoZj1lLnByb3BzT3B0aW9uc1swXSkmJigwLG8uUkkpKGYsdCkpcmV0dXJuIGNbdF09MyxsW3RdO2lmKG4hPT1vLmtUJiYoMCxvLlJJKShuLHQpKXJldHVybiBjW3RdPTQsblt0XTtNZSYmKGNbdF09MCl9fWNvbnN0IHA9VWVbdF07bGV0IGQsaDtyZXR1cm4gcD8oIiRhdHRycyI9PT10JiYoMCxyLmopKGUsImdldCIsdCkscChlKSk6KGQ9dS5fX2Nzc01vZHVsZXMpJiYoZD1kW3RdKT9kOm4hPT1vLmtUJiYoMCxvLlJJKShuLHQpPyhjW3RdPTQsblt0XSk6KGg9YS5jb25maWcuZ2xvYmFsUHJvcGVydGllcywoMCxvLlJJKShoLHQpP2hbdF06dm9pZCAwKX0sc2V0KHtfOmV9LHQsbil7Y29uc3R7ZGF0YTpyLHNldHVwU3RhdGU6cyxjdHg6aX09ZTtyZXR1cm4gTGUocyx0KT8oc1t0XT1uLCEwKTpyIT09by5rVCYmKDAsby5SSSkocix0KT8oclt0XT1uLCEwKTohKDAsby5SSSkoZS5wcm9wcyx0KSYmKCgiJCIhPT10WzBdfHwhKHQuc2xpY2UoMSlpbiBlKSkmJihpW3RdPW4sITApKX0saGFzKHtfOntkYXRhOmUsc2V0dXBTdGF0ZTp0LGFjY2Vzc0NhY2hlOm4sY3R4OnIsYXBwQ29udGV4dDpzLHByb3BzT3B0aW9uczppfX0sbCl7bGV0IGM7cmV0dXJuISFuW2xdfHxlIT09by5rVCYmKDAsby5SSSkoZSxsKXx8TGUodCxsKXx8KGM9aVswXSkmJigwLG8uUkkpKGMsbCl8fCgwLG8uUkkpKHIsbCl8fCgwLG8uUkkpKFVlLGwpfHwoMCxvLlJJKShzLmNvbmZpZy5nbG9iYWxQcm9wZXJ0aWVzLGwpfSxkZWZpbmVQcm9wZXJ0eShlLHQsbil7cmV0dXJuIG51bGwhPW4uZ2V0P2UuXy5hY2Nlc3NDYWNoZVt0XT0wOigwLG8uUkkpKG4sInZhbHVlIikmJnRoaXMuc2V0KGUsdCxuLnZhbHVlLG51bGwpLFJlZmxlY3QuZGVmaW5lUHJvcGVydHkoZSx0LG4pfX07bGV0IE1lPSEwO2Z1bmN0aW9uIEplKGUpe2NvbnN0IHQ9VmUoZSksbj1lLnByb3h5LHM9ZS5jdHg7TWU9ITEsdC5iZWZvcmVDcmVhdGUmJkJlKHQuYmVmb3JlQ3JlYXRlLGUsImJjIik7Y29uc3R7ZGF0YTppLGNvbXB1dGVkOmwsbWV0aG9kczpjLHdhdGNoOnUscHJvdmlkZTphLGluamVjdDpmLGNyZWF0ZWQ6cCxiZWZvcmVNb3VudDpkLG1vdW50ZWQ6aCxiZWZvcmVVcGRhdGU6dix1cGRhdGVkOmcsYWN0aXZhdGVkOm0sZGVhY3RpdmF0ZWQ6XyxiZWZvcmVEZXN0cm95OnksYmVmb3JlVW5tb3VudDpiLGRlc3Ryb3llZDprLHVubW91bnRlZDp3LHJlbmRlcjpDLHJlbmRlclRyYWNrZWQ6eCxyZW5kZXJUcmlnZ2VyZWQ6UyxlcnJvckNhcHR1cmVkOlIsc2VydmVyUHJlZmV0Y2g6VCxleHBvc2U6SSxpbmhlcml0QXR0cnM6Tyxjb21wb25lbnRzOkUsZGlyZWN0aXZlczpGLGZpbHRlcnM6QX09dCxqPW51bGw7aWYoZiYmRGUoZixzLGosZS5hcHBDb250ZXh0LmNvbmZpZy51bndyYXBJbmplY3RlZFJlZiksYylmb3IoY29uc3QgciBpbiBjKXtjb25zdCBlPWNbcl07KDAsby5tZikoZSkmJihzW3JdPWUuYmluZChuKSl9aWYoaSl7MDtjb25zdCB0PWkuY2FsbChuLG4pOzAsKDAsby5LbikodCkmJihlLmRhdGE9KDAsci5xaikodCkpfWlmKE1lPSEwLGwpZm9yKGNvbnN0IHIgaW4gbCl7Y29uc3QgZT1sW3JdLHQ9KDAsby5tZikoZSk/ZS5iaW5kKG4sbik6KDAsby5tZikoZS5nZXQpP2UuZ2V0LmJpbmQobixuKTpvLmRHOzA7Y29uc3QgaT0hKDAsby5tZikoZSkmJigwLG8ubWYpKGUuc2V0KT9lLnNldC5iaW5kKG4pOm8uZEcsYz1Dbih7Z2V0OnQsc2V0Oml9KTtPYmplY3QuZGVmaW5lUHJvcGVydHkocyxyLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6KCk9PmMudmFsdWUsc2V0OmU9PmMudmFsdWU9ZX0pfWlmKHUpZm9yKGNvbnN0IHIgaW4gdSlIZSh1W3JdLHMsbixyKTtpZihhKXtjb25zdCBlPSgwLG8ubWYpKGEpP2EuY2FsbChuKTphO1JlZmxlY3Qub3duS2V5cyhlKS5mb3JFYWNoKCh0PT57Ryh0LGVbdF0pfSkpfWZ1bmN0aW9uIE4oZSx0KXsoMCxvLmtKKSh0KT90LmZvckVhY2goKHQ9PmUodC5iaW5kKG4pKSkpOnQmJmUodC5iaW5kKG4pKX1pZihwJiZCZShwLGUsImMiKSxOKHdlLGQpLE4oQ2UsaCksTih4ZSx2KSxOKFNlLGcpLE4oaGUsbSksTih2ZSxfKSxOKEZlLFIpLE4oRWUseCksTihPZSxTKSxOKFJlLGIpLE4oVGUsdyksTihJZSxUKSwoMCxvLmtKKShJKSlpZihJLmxlbmd0aCl7Y29uc3QgdD1lLmV4cG9zZWR8fChlLmV4cG9zZWQ9e30pO0kuZm9yRWFjaCgoZT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse2dldDooKT0+bltlXSxzZXQ6dD0+bltlXT10fSl9KSl9ZWxzZSBlLmV4cG9zZWR8fChlLmV4cG9zZWQ9e30pO0MmJmUucmVuZGVyPT09by5kRyYmKGUucmVuZGVyPUMpLG51bGwhPU8mJihlLmluaGVyaXRBdHRycz1PKSxFJiYoZS5jb21wb25lbnRzPUUpLEYmJihlLmRpcmVjdGl2ZXM9Ril9ZnVuY3Rpb24gRGUoZSx0LG49by5kRyxzPSExKXsoMCxvLmtKKShlKSYmKGU9emUoZSkpO2Zvcihjb25zdCBpIGluIGUpe2NvbnN0IG49ZVtpXTtsZXQgbDtsPSgwLG8uS24pKG4pPyJkZWZhdWx0ImluIG4/VyhuLmZyb218fGksbi5kZWZhdWx0LCEwKTpXKG4uZnJvbXx8aSk6VyhuKSwoMCxyLmRxKShsKSYmcz9PYmplY3QuZGVmaW5lUHJvcGVydHkodCxpLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6KCk9PmwudmFsdWUsc2V0OmU9PmwudmFsdWU9ZX0pOnRbaV09bH19ZnVuY3Rpb24gQmUoZSx0LG4pe2koKDAsby5rSikoZSk/ZS5tYXAoKGU9PmUuYmluZCh0LnByb3h5KSkpOmUuYmluZCh0LnByb3h5KSx0LG4pfWZ1bmN0aW9uIEhlKGUsdCxuLHIpe2NvbnN0IHM9ci5pbmNsdWRlcygiLiIpP1kobixyKTooKT0+bltyXTtpZigoMCxvLkhEKShlKSl7Y29uc3Qgbj10W2VdOygwLG8ubWYpKG4pJiZ6KHMsbil9ZWxzZSBpZigoMCxvLm1mKShlKSl6KHMsZS5iaW5kKG4pKTtlbHNlIGlmKCgwLG8uS24pKGUpKWlmKCgwLG8ua0opKGUpKWUuZm9yRWFjaCgoZT0+SGUoZSx0LG4scikpKTtlbHNle2NvbnN0IHI9KDAsby5tZikoZS5oYW5kbGVyKT9lLmhhbmRsZXIuYmluZChuKTp0W2UuaGFuZGxlcl07KDAsby5tZikocikmJnoocyxyLGUpfWVsc2UgMH1mdW5jdGlvbiBWZShlKXtjb25zdCB0PWUudHlwZSx7bWl4aW5zOm4sZXh0ZW5kczpyfT10LHttaXhpbnM6cyxvcHRpb25zQ2FjaGU6aSxjb25maWc6e29wdGlvbk1lcmdlU3RyYXRlZ2llczpsfX09ZS5hcHBDb250ZXh0LGM9aS5nZXQodCk7bGV0IHU7cmV0dXJuIGM/dT1jOnMubGVuZ3RofHxufHxyPyh1PXt9LHMubGVuZ3RoJiZzLmZvckVhY2goKGU9PktlKHUsZSxsLCEwKSkpLEtlKHUsdCxsKSk6dT10LCgwLG8uS24pKHQpJiZpLnNldCh0LHUpLHV9ZnVuY3Rpb24gS2UoZSx0LG4scj0hMSl7Y29uc3R7bWl4aW5zOm8sZXh0ZW5kczpzfT10O3MmJktlKGUscyxuLCEwKSxvJiZvLmZvckVhY2goKHQ9PktlKGUsdCxuLCEwKSkpO2Zvcihjb25zdCBpIGluIHQpaWYociYmImV4cG9zZSI9PT1pKTtlbHNle2NvbnN0IHI9R2VbaV18fG4mJm5baV07ZVtpXT1yP3IoZVtpXSx0W2ldKTp0W2ldfXJldHVybiBlfWNvbnN0IEdlPXtkYXRhOldlLHByb3BzOlhlLGVtaXRzOlhlLG1ldGhvZHM6WGUsY29tcHV0ZWQ6WGUsYmVmb3JlQ3JlYXRlOlplLGNyZWF0ZWQ6WmUsYmVmb3JlTW91bnQ6WmUsbW91bnRlZDpaZSxiZWZvcmVVcGRhdGU6WmUsdXBkYXRlZDpaZSxiZWZvcmVEZXN0cm95OlplLGJlZm9yZVVubW91bnQ6WmUsZGVzdHJveWVkOlplLHVubW91bnRlZDpaZSxhY3RpdmF0ZWQ6WmUsZGVhY3RpdmF0ZWQ6WmUsZXJyb3JDYXB0dXJlZDpaZSxzZXJ2ZXJQcmVmZXRjaDpaZSxjb21wb25lbnRzOlhlLGRpcmVjdGl2ZXM6WGUsd2F0Y2g6WWUscHJvdmlkZTpXZSxpbmplY3Q6cWV9O2Z1bmN0aW9uIFdlKGUsdCl7cmV0dXJuIHQ/ZT9mdW5jdGlvbigpe3JldHVybigwLG8ubDcpKCgwLG8ubWYpKGUpP2UuY2FsbCh0aGlzLHRoaXMpOmUsKDAsby5tZikodCk/dC5jYWxsKHRoaXMsdGhpcyk6dCl9OnQ6ZX1mdW5jdGlvbiBxZShlLHQpe3JldHVybiBYZSh6ZShlKSx6ZSh0KSl9ZnVuY3Rpb24gemUoZSl7aWYoKDAsby5rSikoZSkpe2NvbnN0IHQ9e307Zm9yKGxldCBuPTA7bjxlLmxlbmd0aDtuKyspdFtlW25dXT1lW25dO3JldHVybiB0fXJldHVybiBlfWZ1bmN0aW9uIFplKGUsdCl7cmV0dXJuIGU/Wy4uLm5ldyBTZXQoW10uY29uY2F0KGUsdCkpXTp0fWZ1bmN0aW9uIFhlKGUsdCl7cmV0dXJuIGU/KDAsby5sNykoKDAsby5sNykoT2JqZWN0LmNyZWF0ZShudWxsKSxlKSx0KTp0fWZ1bmN0aW9uIFllKGUsdCl7aWYoIWUpcmV0dXJuIHQ7aWYoIXQpcmV0dXJuIGU7Y29uc3Qgbj0oMCxvLmw3KShPYmplY3QuY3JlYXRlKG51bGwpLGUpO2Zvcihjb25zdCByIGluIHQpbltyXT1aZShlW3JdLHRbcl0pO3JldHVybiBufWZ1bmN0aW9uIFFlKGUsdCxuLHM9ITEpe2NvbnN0IGk9e30sbD17fTsoMCxvLk5qKShsLEJ0LDEpLGUucHJvcHNEZWZhdWx0cz1PYmplY3QuY3JlYXRlKG51bGwpLHR0KGUsdCxpLGwpO2Zvcihjb25zdCByIGluIGUucHJvcHNPcHRpb25zWzBdKXIgaW4gaXx8KGlbcl09dm9pZCAwKTtuP2UucHJvcHM9cz9pOigwLHIuVW0pKGkpOmUudHlwZS5wcm9wcz9lLnByb3BzPWk6ZS5wcm9wcz1sLGUuYXR0cnM9bH1mdW5jdGlvbiBldChlLHQsbixzKXtjb25zdHtwcm9wczppLGF0dHJzOmwsdm5vZGU6e3BhdGNoRmxhZzpjfX09ZSx1PSgwLHIuSVUpKGkpLFthXT1lLnByb3BzT3B0aW9ucztsZXQgZj0hMTtpZighKHN8fGM+MCl8fDE2JmMpe2xldCByO3R0KGUsdCxpLGwpJiYoZj0hMCk7Zm9yKGNvbnN0IHMgaW4gdSl0JiYoKDAsby5SSSkodCxzKXx8KHI9KDAsby5ycykocykpIT09cyYmKDAsby5SSSkodCxyKSl8fChhPyFufHx2b2lkIDA9PT1uW3NdJiZ2b2lkIDA9PT1uW3JdfHwoaVtzXT1udChhLHUscyx2b2lkIDAsZSwhMCkpOmRlbGV0ZSBpW3NdKTtpZihsIT09dSlmb3IoY29uc3QgZSBpbiBsKXQmJigwLG8uUkkpKHQsZSl8fChkZWxldGUgbFtlXSxmPSEwKX1lbHNlIGlmKDgmYyl7Y29uc3Qgbj1lLnZub2RlLmR5bmFtaWNQcm9wcztmb3IobGV0IHI9MDtyPG4ubGVuZ3RoO3IrKyl7bGV0IHM9bltyXTtpZihGKGUuZW1pdHNPcHRpb25zLHMpKWNvbnRpbnVlO2NvbnN0IGM9dFtzXTtpZihhKWlmKCgwLG8uUkkpKGwscykpYyE9PWxbc10mJihsW3NdPWMsZj0hMCk7ZWxzZXtjb25zdCB0PSgwLG8uX0EpKHMpO2lbdF09bnQoYSx1LHQsYyxlLCExKX1lbHNlIGMhPT1sW3NdJiYobFtzXT1jLGY9ITApfX1mJiYoMCxyLlgkKShlLCJzZXQiLCIkYXR0cnMiKX1mdW5jdGlvbiB0dChlLHQsbixzKXtjb25zdFtpLGxdPWUucHJvcHNPcHRpb25zO2xldCBjLHU9ITE7aWYodClmb3IobGV0IHIgaW4gdCl7aWYoKDAsby5HZykocikpY29udGludWU7Y29uc3QgYT10W3JdO2xldCBmO2kmJigwLG8uUkkpKGksZj0oMCxvLl9BKShyKSk/bCYmbC5pbmNsdWRlcyhmKT8oY3x8KGM9e30pKVtmXT1hOm5bZl09YTpGKGUuZW1pdHNPcHRpb25zLHIpfHxyIGluIHMmJmE9PT1zW3JdfHwoc1tyXT1hLHU9ITApfWlmKGwpe2NvbnN0IHQ9KDAsci5JVSkobikscz1jfHxvLmtUO2ZvcihsZXQgcj0wO3I8bC5sZW5ndGg7cisrKXtjb25zdCBjPWxbcl07bltjXT1udChpLHQsYyxzW2NdLGUsISgwLG8uUkkpKHMsYykpfX1yZXR1cm4gdX1mdW5jdGlvbiBudChlLHQsbixyLHMsaSl7Y29uc3QgbD1lW25dO2lmKG51bGwhPWwpe2NvbnN0IGU9KDAsby5SSSkobCwiZGVmYXVsdCIpO2lmKGUmJnZvaWQgMD09PXIpe2NvbnN0IGU9bC5kZWZhdWx0O2lmKGwudHlwZSE9PUZ1bmN0aW9uJiYoMCxvLm1mKShlKSl7Y29uc3R7cHJvcHNEZWZhdWx0czpvfT1zO24gaW4gbz9yPW9bbl06KGNuKHMpLHI9b1tuXT1lLmNhbGwobnVsbCx0KSx1bigpKX1lbHNlIHI9ZX1sWzBdJiYoaSYmIWU/cj0hMTohbFsxXXx8IiIhPT1yJiZyIT09KDAsby5ycykobil8fChyPSEwKSl9cmV0dXJuIHJ9ZnVuY3Rpb24gcnQoZSx0LG49ITEpe2NvbnN0IHI9dC5wcm9wc0NhY2hlLHM9ci5nZXQoZSk7aWYocylyZXR1cm4gcztjb25zdCBpPWUucHJvcHMsbD17fSxjPVtdO2xldCB1PSExO2lmKCEoMCxvLm1mKShlKSl7Y29uc3Qgcj1lPT57dT0hMDtjb25zdFtuLHJdPXJ0KGUsdCwhMCk7KDAsby5sNykobCxuKSxyJiZjLnB1c2goLi4ucil9OyFuJiZ0Lm1peGlucy5sZW5ndGgmJnQubWl4aW5zLmZvckVhY2gociksZS5leHRlbmRzJiZyKGUuZXh0ZW5kcyksZS5taXhpbnMmJmUubWl4aW5zLmZvckVhY2gocil9aWYoIWkmJiF1KXJldHVybigwLG8uS24pKGUpJiZyLnNldChlLG8uWjYpLG8uWjY7aWYoKDAsby5rSikoaSkpZm9yKGxldCBmPTA7ZjxpLmxlbmd0aDtmKyspezA7Y29uc3QgZT0oMCxvLl9BKShpW2ZdKTtvdChlKSYmKGxbZV09by5rVCl9ZWxzZSBpZihpKXswO2Zvcihjb25zdCBlIGluIGkpe2NvbnN0IHQ9KDAsby5fQSkoZSk7aWYob3QodCkpe2NvbnN0IG49aVtlXSxyPWxbdF09KDAsby5rSikobil8fCgwLG8ubWYpKG4pP3t0eXBlOm59Ok9iamVjdC5hc3NpZ24oe30sbik7aWYocil7Y29uc3QgZT1sdChCb29sZWFuLHIudHlwZSksbj1sdChTdHJpbmcsci50eXBlKTtyWzBdPWU+LTEsclsxXT1uPDB8fGU8biwoZT4tMXx8KDAsby5SSSkociwiZGVmYXVsdCIpKSYmYy5wdXNoKHQpfX19fWNvbnN0IGE9W2wsY107cmV0dXJuKDAsby5LbikoZSkmJnIuc2V0KGUsYSksYX1mdW5jdGlvbiBvdChlKXtyZXR1cm4iJCIhPT1lWzBdfWZ1bmN0aW9uIHN0KGUpe2NvbnN0IHQ9ZSYmZS50b1N0cmluZygpLm1hdGNoKC9eXHMqKGZ1bmN0aW9ufGNsYXNzKSAoXHcrKS8pO3JldHVybiB0P3RbMl06bnVsbD09PWU/Im51bGwiOiIifWZ1bmN0aW9uIGl0KGUsdCl7cmV0dXJuIHN0KGUpPT09c3QodCl9ZnVuY3Rpb24gbHQoZSx0KXtyZXR1cm4oMCxvLmtKKSh0KT90LmZpbmRJbmRleCgodD0+aXQodCxlKSkpOigwLG8ubWYpKHQpJiZpdCh0LGUpPzA6LTF9Y29uc3QgY3Q9ZT0+Il8iPT09ZVswXXx8IiRzdGFibGUiPT09ZSx1dD1lPT4oMCxvLmtKKShlKT9lLm1hcChYdCk6W1h0KGUpXSxhdD0oZSx0LG4pPT57aWYodC5fbilyZXR1cm4gdDtjb25zdCByPUwoKCguLi5lKT0+dXQodCguLi5lKSkpLG4pO3JldHVybiByLl9jPSExLHJ9LGZ0PShlLHQsbik9Pntjb25zdCByPWUuX2N0eDtmb3IoY29uc3QgcyBpbiBlKXtpZihjdChzKSljb250aW51ZTtjb25zdCBuPWVbc107aWYoKDAsby5tZikobikpdFtzXT1hdChzLG4scik7ZWxzZSBpZihudWxsIT1uKXswO2NvbnN0IGU9dXQobik7dFtzXT0oKT0+ZX19fSxwdD0oZSx0KT0+e2NvbnN0IG49dXQodCk7ZS5zbG90cy5kZWZhdWx0PSgpPT5ufSxkdD0oZSx0KT0+e2lmKDMyJmUudm5vZGUuc2hhcGVGbGFnKXtjb25zdCBuPXQuXztuPyhlLnNsb3RzPSgwLHIuSVUpKHQpLCgwLG8uTmopKHQsIl8iLG4pKTpmdCh0LGUuc2xvdHM9e30pfWVsc2UgZS5zbG90cz17fSx0JiZwdChlLHQpOygwLG8uTmopKGUuc2xvdHMsQnQsMSl9LGh0PShlLHQsbik9Pntjb25zdHt2bm9kZTpyLHNsb3RzOnN9PWU7bGV0IGk9ITAsbD1vLmtUO2lmKDMyJnIuc2hhcGVGbGFnKXtjb25zdCBlPXQuXztlP24mJjE9PT1lP2k9ITE6KCgwLG8ubDcpKHMsdCksbnx8MSE9PWV8fGRlbGV0ZSBzLl8pOihpPSF0LiRzdGFibGUsZnQodCxzKSksbD10fWVsc2UgdCYmKHB0KGUsdCksbD17ZGVmYXVsdDoxfSk7aWYoaSlmb3IoY29uc3QgbyBpbiBzKWN0KG8pfHxvIGluIGx8fGRlbGV0ZSBzW29dfTtmdW5jdGlvbiB2dCgpe3JldHVybnthcHA6bnVsbCxjb25maWc6e2lzTmF0aXZlVGFnOm8uTk8scGVyZm9ybWFuY2U6ITEsZ2xvYmFsUHJvcGVydGllczp7fSxvcHRpb25NZXJnZVN0cmF0ZWdpZXM6e30sZXJyb3JIYW5kbGVyOnZvaWQgMCx3YXJuSGFuZGxlcjp2b2lkIDAsY29tcGlsZXJPcHRpb25zOnt9fSxtaXhpbnM6W10sY29tcG9uZW50czp7fSxkaXJlY3RpdmVzOnt9LHByb3ZpZGVzOk9iamVjdC5jcmVhdGUobnVsbCksb3B0aW9uc0NhY2hlOm5ldyBXZWFrTWFwLHByb3BzQ2FjaGU6bmV3IFdlYWtNYXAsZW1pdHNDYWNoZTpuZXcgV2Vha01hcH19bGV0IGd0PTA7ZnVuY3Rpb24gbXQoZSx0KXtyZXR1cm4gZnVuY3Rpb24obixyPW51bGwpeygwLG8ubWYpKG4pfHwobj1PYmplY3QuYXNzaWduKHt9LG4pKSxudWxsPT1yfHwoMCxvLktuKShyKXx8KHI9bnVsbCk7Y29uc3Qgcz12dCgpLGk9bmV3IFNldDtsZXQgbD0hMTtjb25zdCBjPXMuYXBwPXtfdWlkOmd0KyssX2NvbXBvbmVudDpuLF9wcm9wczpyLF9jb250YWluZXI6bnVsbCxfY29udGV4dDpzLF9pbnN0YW5jZTpudWxsLHZlcnNpb246VG4sZ2V0IGNvbmZpZygpe3JldHVybiBzLmNvbmZpZ30sc2V0IGNvbmZpZyhlKXswfSx1c2UoZSwuLi50KXtyZXR1cm4gaS5oYXMoZSl8fChlJiYoMCxvLm1mKShlLmluc3RhbGwpPyhpLmFkZChlKSxlLmluc3RhbGwoYywuLi50KSk6KDAsby5tZikoZSkmJihpLmFkZChlKSxlKGMsLi4udCkpKSxjfSxtaXhpbihlKXtyZXR1cm4gcy5taXhpbnMuaW5jbHVkZXMoZSl8fHMubWl4aW5zLnB1c2goZSksY30sY29tcG9uZW50KGUsdCl7cmV0dXJuIHQ/KHMuY29tcG9uZW50c1tlXT10LGMpOnMuY29tcG9uZW50c1tlXX0sZGlyZWN0aXZlKGUsdCl7cmV0dXJuIHQ/KHMuZGlyZWN0aXZlc1tlXT10LGMpOnMuZGlyZWN0aXZlc1tlXX0sbW91bnQobyxpLHUpe2lmKCFsKXswO2NvbnN0IGE9R3QobixyKTtyZXR1cm4gYS5hcHBDb250ZXh0PXMsaSYmdD90KGEsbyk6ZShhLG8sdSksbD0hMCxjLl9jb250YWluZXI9byxvLl9fdnVlX2FwcF9fPWMsYm4oYS5jb21wb25lbnQpfHxhLmNvbXBvbmVudC5wcm94eX19LHVubW91bnQoKXtsJiYoZShudWxsLGMuX2NvbnRhaW5lciksZGVsZXRlIGMuX2NvbnRhaW5lci5fX3Z1ZV9hcHBfXyl9LHByb3ZpZGUoZSx0KXtyZXR1cm4gcy5wcm92aWRlc1tlXT10LGN9fTtyZXR1cm4gY319ZnVuY3Rpb24gX3QoZSx0LG4saSxsPSExKXtpZigoMCxvLmtKKShlKSlyZXR1cm4gdm9pZCBlLmZvckVhY2goKChlLHIpPT5fdChlLHQmJigoMCxvLmtKKSh0KT90W3JdOnQpLG4saSxsKSkpO2lmKGZlKGkpJiYhbClyZXR1cm47Y29uc3QgYz00Jmkuc2hhcGVGbGFnP2JuKGkuY29tcG9uZW50KXx8aS5jb21wb25lbnQucHJveHk6aS5lbCx1PWw/bnVsbDpjLHtpOmEscjpmfT1lO2NvbnN0IHA9dCYmdC5yLGQ9YS5yZWZzPT09by5rVD9hLnJlZnM9e306YS5yZWZzLGg9YS5zZXR1cFN0YXRlO2lmKG51bGwhPXAmJnAhPT1mJiYoKDAsby5IRCkocCk/KGRbcF09bnVsbCwoMCxvLlJJKShoLHApJiYoaFtwXT1udWxsKSk6KDAsci5kcSkocCkmJihwLnZhbHVlPW51bGwpKSwoMCxvLm1mKShmKSlzKGYsYSwxMixbdSxkXSk7ZWxzZXtjb25zdCB0PSgwLG8uSEQpKGYpLHM9KDAsci5kcSkoZik7aWYodHx8cyl7Y29uc3Qgcj0oKT0+e2lmKGUuZil7Y29uc3Qgbj10PygwLG8uUkkpKGgsZik/aFtmXTpkW2ZdOmYudmFsdWU7bD8oMCxvLmtKKShuKSYmKDAsby5PZCkobixjKTooMCxvLmtKKShuKT9uLmluY2x1ZGVzKGMpfHxuLnB1c2goYyk6dD8oZFtmXT1bY10sKDAsby5SSSkoaCxmKSYmKGhbZl09ZFtmXSkpOihmLnZhbHVlPVtjXSxlLmsmJihkW2Uua109Zi52YWx1ZSkpfWVsc2UgdD8oZFtmXT11LCgwLG8uUkkpKGgsZikmJihoW2ZdPXUpKTpzJiYoZi52YWx1ZT11LGUuayYmKGRbZS5rXT11KSl9O3U/KHIuaWQ9LTEsYnQocixuKSk6cigpfWVsc2UgMH19ZnVuY3Rpb24geXQoKXt9Y29uc3QgYnQ9SztmdW5jdGlvbiBrdChlKXtyZXR1cm4gd3QoZSl9ZnVuY3Rpb24gd3QoZSx0KXt5dCgpO2NvbnN0IG49KDAsby5FOSkoKTtuLl9fVlVFX189ITA7Y29uc3R7aW5zZXJ0OnMscmVtb3ZlOmkscGF0Y2hQcm9wOmwsY3JlYXRlRWxlbWVudDpjLGNyZWF0ZVRleHQ6dSxjcmVhdGVDb21tZW50OmEsc2V0VGV4dDpmLHNldEVsZW1lbnRUZXh0OnAscGFyZW50Tm9kZTpkLG5leHRTaWJsaW5nOmgsc2V0U2NvcGVJZDp2PW8uZEcsaW5zZXJ0U3RhdGljQ29udGVudDpnfT1lLG09KGUsdCxuLHI9bnVsbCxvPW51bGwscz1udWxsLGk9ITEsbD1udWxsLGM9ISF0LmR5bmFtaWNDaGlsZHJlbik9PntpZihlPT09dClyZXR1cm47ZSYmIUR0KGUsdCkmJihyPVkoZSksVyhlLG8scywhMCksZT1udWxsKSwtMj09PXQucGF0Y2hGbGFnJiYoYz0hMSx0LmR5bmFtaWNDaGlsZHJlbj1udWxsKTtjb25zdHt0eXBlOnUscmVmOmEsc2hhcGVGbGFnOmZ9PXQ7c3dpdGNoKHUpe2Nhc2UgSXQ6XyhlLHQsbixyKTticmVhaztjYXNlIE90OnkoZSx0LG4scik7YnJlYWs7Y2FzZSBFdDpudWxsPT1lJiZrKHQsbixyLGkpO2JyZWFrO2Nhc2UgVHQ6TihlLHQsbixyLG8scyxpLGwsYyk7YnJlYWs7ZGVmYXVsdDoxJmY/VChlLHQsbixyLG8scyxpLGwsYyk6NiZmP1AoZSx0LG4scixvLHMsaSxsLGMpOig2NCZmfHwxMjgmZikmJnUucHJvY2VzcyhlLHQsbixyLG8scyxpLGwsYyxlZSl9bnVsbCE9YSYmbyYmX3QoYSxlJiZlLnJlZixzLHR8fGUsIXQpfSxfPShlLHQsbixyKT0+e2lmKG51bGw9PWUpcyh0LmVsPXUodC5jaGlsZHJlbiksbixyKTtlbHNle2NvbnN0IG49dC5lbD1lLmVsO3QuY2hpbGRyZW4hPT1lLmNoaWxkcmVuJiZmKG4sdC5jaGlsZHJlbil9fSx5PShlLHQsbixyKT0+e251bGw9PWU/cyh0LmVsPWEodC5jaGlsZHJlbnx8IiIpLG4scik6dC5lbD1lLmVsfSxrPShlLHQsbixyKT0+e1tlLmVsLGUuYW5jaG9yXT1nKGUuY2hpbGRyZW4sdCxuLHIsZS5lbCxlLmFuY2hvcil9LEM9KHtlbDplLGFuY2hvcjp0fSxuLHIpPT57bGV0IG87d2hpbGUoZSYmZSE9PXQpbz1oKGUpLHMoZSxuLHIpLGU9bztzKHQsbixyKX0sUj0oe2VsOmUsYW5jaG9yOnR9KT0+e2xldCBuO3doaWxlKGUmJmUhPT10KW49aChlKSxpKGUpLGU9bjtpKHQpfSxUPShlLHQsbixyLG8scyxpLGwsYyk9PntpPWl8fCJzdmciPT09dC50eXBlLG51bGw9PWU/SSh0LG4scixvLHMsaSxsLGMpOkYoZSx0LG8scyxpLGwsYyl9LEk9KGUsdCxuLHIsaSx1LGEsZik9PntsZXQgZCxoO2NvbnN0e3R5cGU6dixwcm9wczpnLHNoYXBlRmxhZzptLHRyYW5zaXRpb246XyxkaXJzOnl9PWU7aWYoZD1lLmVsPWMoZS50eXBlLHUsZyYmZy5pcyxnKSw4Jm0/cChkLGUuY2hpbGRyZW4pOjE2Jm0mJkUoZS5jaGlsZHJlbixkLG51bGwscixpLHUmJiJmb3JlaWduT2JqZWN0IiE9PXYsYSxmKSx5JiZBZShlLG51bGwsciwiY3JlYXRlZCIpLE8oZCxlLGUuc2NvcGVJZCxhLHIpLGcpe2Zvcihjb25zdCB0IGluIGcpInZhbHVlIj09PXR8fCgwLG8uR2cpKHQpfHxsKGQsdCxudWxsLGdbdF0sdSxlLmNoaWxkcmVuLHIsaSxYKTsidmFsdWUiaW4gZyYmbChkLCJ2YWx1ZSIsbnVsbCxnLnZhbHVlKSwoaD1nLm9uVm5vZGVCZWZvcmVNb3VudCkmJnRuKGgscixlKX15JiZBZShlLG51bGwsciwiYmVmb3JlTW91bnQiKTtjb25zdCBiPSghaXx8aSYmIWkucGVuZGluZ0JyYW5jaCkmJl8mJiFfLnBlcnNpc3RlZDtiJiZfLmJlZm9yZUVudGVyKGQpLHMoZCx0LG4pLCgoaD1nJiZnLm9uVm5vZGVNb3VudGVkKXx8Ynx8eSkmJmJ0KCgoKT0+e2gmJnRuKGgscixlKSxiJiZfLmVudGVyKGQpLHkmJkFlKGUsbnVsbCxyLCJtb3VudGVkIil9KSxpKX0sTz0oZSx0LG4scixvKT0+e2lmKG4mJnYoZSxuKSxyKWZvcihsZXQgcz0wO3M8ci5sZW5ndGg7cysrKXYoZSxyW3NdKTtpZihvKXtsZXQgbj1vLnN1YlRyZWU7aWYodD09PW4pe2NvbnN0IHQ9by52bm9kZTtPKGUsdCx0LnNjb3BlSWQsdC5zbG90U2NvcGVJZHMsby5wYXJlbnQpfX19LEU9KGUsdCxuLHIsbyxzLGksbCxjPTApPT57Zm9yKGxldCB1PWM7dTxlLmxlbmd0aDt1Kyspe2NvbnN0IGM9ZVt1XT1sP1l0KGVbdV0pOlh0KGVbdV0pO20obnVsbCxjLHQsbixyLG8scyxpLGwpfX0sRj0oZSx0LG4scixzLGksYyk9Pntjb25zdCB1PXQuZWw9ZS5lbDtsZXR7cGF0Y2hGbGFnOmEsZHluYW1pY0NoaWxkcmVuOmYsZGlyczpkfT10O2F8PTE2JmUucGF0Y2hGbGFnO2NvbnN0IGg9ZS5wcm9wc3x8by5rVCx2PXQucHJvcHN8fG8ua1Q7bGV0IGc7biYmQ3QobiwhMSksKGc9di5vblZub2RlQmVmb3JlVXBkYXRlKSYmdG4oZyxuLHQsZSksZCYmQWUodCxlLG4sImJlZm9yZVVwZGF0ZSIpLG4mJkN0KG4sITApO2NvbnN0IG09cyYmImZvcmVpZ25PYmplY3QiIT09dC50eXBlO2lmKGY/QShlLmR5bmFtaWNDaGlsZHJlbixmLHUsbixyLG0saSk6Y3x8QihlLHQsdSxudWxsLG4scixtLGksITEpLGE+MCl7aWYoMTYmYSlqKHUsdCxoLHYsbixyLHMpO2Vsc2UgaWYoMiZhJiZoLmNsYXNzIT09di5jbGFzcyYmbCh1LCJjbGFzcyIsbnVsbCx2LmNsYXNzLHMpLDQmYSYmbCh1LCJzdHlsZSIsaC5zdHlsZSx2LnN0eWxlLHMpLDgmYSl7Y29uc3Qgbz10LmR5bmFtaWNQcm9wcztmb3IobGV0IHQ9MDt0PG8ubGVuZ3RoO3QrKyl7Y29uc3QgaT1vW3RdLGM9aFtpXSxhPXZbaV07YT09PWMmJiJ2YWx1ZSIhPT1pfHxsKHUsaSxjLGEscyxlLmNoaWxkcmVuLG4scixYKX19MSZhJiZlLmNoaWxkcmVuIT09dC5jaGlsZHJlbiYmcCh1LHQuY2hpbGRyZW4pfWVsc2UgY3x8bnVsbCE9Znx8aih1LHQsaCx2LG4scixzKTsoKGc9di5vblZub2RlVXBkYXRlZCl8fGQpJiZidCgoKCk9PntnJiZ0bihnLG4sdCxlKSxkJiZBZSh0LGUsbiwidXBkYXRlZCIpfSkscil9LEE9KGUsdCxuLHIsbyxzLGkpPT57Zm9yKGxldCBsPTA7bDx0Lmxlbmd0aDtsKyspe2NvbnN0IGM9ZVtsXSx1PXRbbF0sYT1jLmVsJiYoYy50eXBlPT09VHR8fCFEdChjLHUpfHw3MCZjLnNoYXBlRmxhZyk/ZChjLmVsKTpuO20oYyx1LGEsbnVsbCxyLG8scyxpLCEwKX19LGo9KGUsdCxuLHIscyxpLGMpPT57aWYobiE9PXIpe2lmKG4hPT1vLmtUKWZvcihjb25zdCB1IGluIG4pKDAsby5HZykodSl8fHUgaW4gcnx8bChlLHUsblt1XSxudWxsLGMsdC5jaGlsZHJlbixzLGksWCk7Zm9yKGNvbnN0IHUgaW4gcil7aWYoKDAsby5HZykodSkpY29udGludWU7Y29uc3QgYT1yW3VdLGY9blt1XTthIT09ZiYmInZhbHVlIiE9PXUmJmwoZSx1LGYsYSxjLHQuY2hpbGRyZW4scyxpLFgpfSJ2YWx1ZSJpbiByJiZsKGUsInZhbHVlIixuLnZhbHVlLHIudmFsdWUpfX0sTj0oZSx0LG4scixvLGksbCxjLGEpPT57Y29uc3QgZj10LmVsPWU/ZS5lbDp1KCIiKSxwPXQuYW5jaG9yPWU/ZS5hbmNob3I6dSgiIik7bGV0e3BhdGNoRmxhZzpkLGR5bmFtaWNDaGlsZHJlbjpoLHNsb3RTY29wZUlkczp2fT10O3YmJihjPWM/Yy5jb25jYXQodik6diksbnVsbD09ZT8ocyhmLG4scikscyhwLG4sciksRSh0LmNoaWxkcmVuLG4scCxvLGksbCxjLGEpKTpkPjAmJjY0JmQmJmgmJmUuZHluYW1pY0NoaWxkcmVuPyhBKGUuZHluYW1pY0NoaWxkcmVuLGgsbixvLGksbCxjKSwobnVsbCE9dC5rZXl8fG8mJnQ9PT1vLnN1YlRyZWUpJiZ4dChlLHQsITApKTpCKGUsdCxuLHAsbyxpLGwsYyxhKX0sUD0oZSx0LG4scixvLHMsaSxsLGMpPT57dC5zbG90U2NvcGVJZHM9bCxudWxsPT1lPzUxMiZ0LnNoYXBlRmxhZz9vLmN0eC5hY3RpdmF0ZSh0LG4scixpLGMpOlUodCxuLHIsbyxzLGksYyk6TChlLHQsYyl9LFU9KGUsdCxuLHIsbyxzLGkpPT57Y29uc3QgbD1lLmNvbXBvbmVudD1vbihlLHIsbyk7aWYocGUoZSkmJihsLmN0eC5yZW5kZXJlcj1lZSksaG4obCksbC5hc3luY0RlcCl7aWYobyYmby5yZWdpc3RlckRlcChsLE0pLCFlLmVsKXtjb25zdCBlPWwuc3ViVHJlZT1HdChPdCk7eShudWxsLGUsdCxuKX19ZWxzZSBNKGwsZSx0LG4sbyxzLGkpfSxMPShlLHQsbik9Pntjb25zdCByPXQuY29tcG9uZW50PWUuY29tcG9uZW50O2lmKEQoZSx0LG4pKXtpZihyLmFzeW5jRGVwJiYhci5hc3luY1Jlc29sdmVkKXJldHVybiB2b2lkIEoocix0LG4pO3IubmV4dD10LHcoci51cGRhdGUpLHIudXBkYXRlKCl9ZWxzZSB0LmVsPWUuZWwsci52bm9kZT10fSxNPShlLHQsbixzLGksbCxjKT0+e2NvbnN0IHU9KCk9PntpZihlLmlzTW91bnRlZCl7bGV0IHQse25leHQ6bixidTpyLHU6cyxwYXJlbnQ6dSx2bm9kZTphfT1lLGY9bjswLEN0KGUsITEpLG4/KG4uZWw9YS5lbCxKKGUsbixjKSk6bj1hLHImJigwLG8uaXIpKHIpLCh0PW4ucHJvcHMmJm4ucHJvcHMub25Wbm9kZUJlZm9yZVVwZGF0ZSkmJnRuKHQsdSxuLGEpLEN0KGUsITApO2NvbnN0IHA9JChlKTswO2NvbnN0IGg9ZS5zdWJUcmVlO2Uuc3ViVHJlZT1wLG0oaCxwLGQoaC5lbCksWShoKSxlLGksbCksbi5lbD1wLmVsLG51bGw9PT1mJiZIKGUscC5lbCkscyYmYnQocyxpKSwodD1uLnByb3BzJiZuLnByb3BzLm9uVm5vZGVVcGRhdGVkKSYmYnQoKCgpPT50bih0LHUsbixhKSksaSl9ZWxzZXtsZXQgcjtjb25zdHtlbDpjLHByb3BzOnV9PXQse2JtOmEsbTpmLHBhcmVudDpwfT1lLGQ9ZmUodCk7aWYoQ3QoZSwhMSksYSYmKDAsby5pcikoYSksIWQmJihyPXUmJnUub25Wbm9kZUJlZm9yZU1vdW50KSYmdG4ocixwLHQpLEN0KGUsITApLGMmJm5lKXtjb25zdCBuPSgpPT57ZS5zdWJUcmVlPSQoZSksbmUoYyxlLnN1YlRyZWUsZSxpLG51bGwpfTtkP3QudHlwZS5fX2FzeW5jTG9hZGVyKCkudGhlbigoKCk9PiFlLmlzVW5tb3VudGVkJiZuKCkpKTpuKCl9ZWxzZXswO2NvbnN0IHI9ZS5zdWJUcmVlPSQoZSk7MCxtKG51bGwscixuLHMsZSxpLGwpLHQuZWw9ci5lbH1pZihmJiZidChmLGkpLCFkJiYocj11JiZ1Lm9uVm5vZGVNb3VudGVkKSl7Y29uc3QgZT10O2J0KCgoKT0+dG4ocixwLGUpKSxpKX0oMjU2JnQuc2hhcGVGbGFnfHxwJiZmZShwLnZub2RlKSYmMjU2JnAudm5vZGUuc2hhcGVGbGFnKSYmZS5hJiZidChlLmEsaSksZS5pc01vdW50ZWQ9ITAsdD1uPXM9bnVsbH19LGE9ZS5lZmZlY3Q9bmV3IHIucXEodSwoKCk9PmIoZikpLGUuc2NvcGUpLGY9ZS51cGRhdGU9KCk9PmEucnVuKCk7Zi5pZD1lLnVpZCxDdChlLCEwKSxmKCl9LEo9KGUsdCxuKT0+e3QuY29tcG9uZW50PWU7Y29uc3Qgbz1lLnZub2RlLnByb3BzO2Uudm5vZGU9dCxlLm5leHQ9bnVsbCxldChlLHQucHJvcHMsbyxuKSxodChlLHQuY2hpbGRyZW4sbiksKDAsci5KZCkoKSx4KCksKDAsci5saykoKX0sQj0oZSx0LG4scixvLHMsaSxsLGM9ITEpPT57Y29uc3QgdT1lJiZlLmNoaWxkcmVuLGE9ZT9lLnNoYXBlRmxhZzowLGY9dC5jaGlsZHJlbix7cGF0Y2hGbGFnOmQsc2hhcGVGbGFnOmh9PXQ7aWYoZD4wKXtpZigxMjgmZClyZXR1cm4gdm9pZCBLKHUsZixuLHIsbyxzLGksbCxjKTtpZigyNTYmZClyZXR1cm4gdm9pZCBWKHUsZixuLHIsbyxzLGksbCxjKX04Jmg/KDE2JmEmJlgodSxvLHMpLGYhPT11JiZwKG4sZikpOjE2JmE/MTYmaD9LKHUsZixuLHIsbyxzLGksbCxjKTpYKHUsbyxzLCEwKTooOCZhJiZwKG4sIiIpLDE2JmgmJkUoZixuLHIsbyxzLGksbCxjKSl9LFY9KGUsdCxuLHIscyxpLGwsYyx1KT0+e2U9ZXx8by5aNix0PXR8fG8uWjY7Y29uc3QgYT1lLmxlbmd0aCxmPXQubGVuZ3RoLHA9TWF0aC5taW4oYSxmKTtsZXQgZDtmb3IoZD0wO2Q8cDtkKyspe2NvbnN0IHI9dFtkXT11P1l0KHRbZF0pOlh0KHRbZF0pO20oZVtkXSxyLG4sbnVsbCxzLGksbCxjLHUpfWE+Zj9YKGUscyxpLCEwLCExLHApOkUodCxuLHIscyxpLGwsYyx1LHApfSxLPShlLHQsbixyLHMsaSxsLGMsdSk9PntsZXQgYT0wO2NvbnN0IGY9dC5sZW5ndGg7bGV0IHA9ZS5sZW5ndGgtMSxkPWYtMTt3aGlsZShhPD1wJiZhPD1kKXtjb25zdCByPWVbYV0sbz10W2FdPXU/WXQodFthXSk6WHQodFthXSk7aWYoIUR0KHIsbykpYnJlYWs7bShyLG8sbixudWxsLHMsaSxsLGMsdSksYSsrfXdoaWxlKGE8PXAmJmE8PWQpe2NvbnN0IHI9ZVtwXSxvPXRbZF09dT9ZdCh0W2RdKTpYdCh0W2RdKTtpZighRHQocixvKSlicmVhazttKHIsbyxuLG51bGwscyxpLGwsYyx1KSxwLS0sZC0tfWlmKGE+cCl7aWYoYTw9ZCl7Y29uc3QgZT1kKzEsbz1lPGY/dFtlXS5lbDpyO3doaWxlKGE8PWQpbShudWxsLHRbYV09dT9ZdCh0W2FdKTpYdCh0W2FdKSxuLG8scyxpLGwsYyx1KSxhKyt9fWVsc2UgaWYoYT5kKXdoaWxlKGE8PXApVyhlW2FdLHMsaSwhMCksYSsrO2Vsc2V7Y29uc3QgaD1hLHY9YSxnPW5ldyBNYXA7Zm9yKGE9djthPD1kO2ErKyl7Y29uc3QgZT10W2FdPXU/WXQodFthXSk6WHQodFthXSk7bnVsbCE9ZS5rZXkmJmcuc2V0KGUua2V5LGEpfWxldCBfLHk9MDtjb25zdCBiPWQtdisxO2xldCBrPSExLHc9MDtjb25zdCBDPW5ldyBBcnJheShiKTtmb3IoYT0wO2E8YjthKyspQ1thXT0wO2ZvcihhPWg7YTw9cDthKyspe2NvbnN0IHI9ZVthXTtpZih5Pj1iKXtXKHIscyxpLCEwKTtjb250aW51ZX1sZXQgbztpZihudWxsIT1yLmtleSlvPWcuZ2V0KHIua2V5KTtlbHNlIGZvcihfPXY7Xzw9ZDtfKyspaWYoMD09PUNbXy12XSYmRHQocix0W19dKSl7bz1fO2JyZWFrfXZvaWQgMD09PW8/VyhyLHMsaSwhMCk6KENbby12XT1hKzEsbz49dz93PW86az0hMCxtKHIsdFtvXSxuLG51bGwscyxpLGwsYyx1KSx5KyspfWNvbnN0IHg9az9TdChDKTpvLlo2O2ZvcihfPXgubGVuZ3RoLTEsYT1iLTE7YT49MDthLS0pe2NvbnN0IGU9dithLG89dFtlXSxwPWUrMTxmP3RbZSsxXS5lbDpyOzA9PT1DW2FdP20obnVsbCxvLG4scCxzLGksbCxjLHUpOmsmJihfPDB8fGEhPT14W19dP0cobyxuLHAsMik6Xy0tKX19fSxHPShlLHQsbixyLG89bnVsbCk9Pntjb25zdHtlbDppLHR5cGU6bCx0cmFuc2l0aW9uOmMsY2hpbGRyZW46dSxzaGFwZUZsYWc6YX09ZTtpZig2JmEpcmV0dXJuIHZvaWQgRyhlLmNvbXBvbmVudC5zdWJUcmVlLHQsbixyKTtpZigxMjgmYSlyZXR1cm4gdm9pZCBlLnN1c3BlbnNlLm1vdmUodCxuLHIpO2lmKDY0JmEpcmV0dXJuIHZvaWQgbC5tb3ZlKGUsdCxuLGVlKTtpZihsPT09VHQpe3MoaSx0LG4pO2ZvcihsZXQgZT0wO2U8dS5sZW5ndGg7ZSsrKUcodVtlXSx0LG4scik7cmV0dXJuIHZvaWQgcyhlLmFuY2hvcix0LG4pfWlmKGw9PT1FdClyZXR1cm4gdm9pZCBDKGUsdCxuKTtjb25zdCBmPTIhPT1yJiYxJmEmJmM7aWYoZilpZigwPT09ciljLmJlZm9yZUVudGVyKGkpLHMoaSx0LG4pLGJ0KCgoKT0+Yy5lbnRlcihpKSksbyk7ZWxzZXtjb25zdHtsZWF2ZTplLGRlbGF5TGVhdmU6cixhZnRlckxlYXZlOm99PWMsbD0oKT0+cyhpLHQsbiksdT0oKT0+e2UoaSwoKCk9PntsKCksbyYmbygpfSkpfTtyP3IoaSxsLHUpOnUoKX1lbHNlIHMoaSx0LG4pfSxXPShlLHQsbixyPSExLG89ITEpPT57Y29uc3R7dHlwZTpzLHByb3BzOmkscmVmOmwsY2hpbGRyZW46YyxkeW5hbWljQ2hpbGRyZW46dSxzaGFwZUZsYWc6YSxwYXRjaEZsYWc6ZixkaXJzOnB9PWU7aWYobnVsbCE9bCYmX3QobCxudWxsLG4sZSwhMCksMjU2JmEpcmV0dXJuIHZvaWQgdC5jdHguZGVhY3RpdmF0ZShlKTtjb25zdCBkPTEmYSYmcCxoPSFmZShlKTtsZXQgdjtpZihoJiYodj1pJiZpLm9uVm5vZGVCZWZvcmVVbm1vdW50KSYmdG4odix0LGUpLDYmYSlaKGUuY29tcG9uZW50LG4scik7ZWxzZXtpZigxMjgmYSlyZXR1cm4gdm9pZCBlLnN1c3BlbnNlLnVubW91bnQobixyKTtkJiZBZShlLG51bGwsdCwiYmVmb3JlVW5tb3VudCIpLDY0JmE/ZS50eXBlLnJlbW92ZShlLHQsbixvLGVlLHIpOnUmJihzIT09VHR8fGY+MCYmNjQmZik/WCh1LHQsbiwhMSwhMCk6KHM9PT1UdCYmMzg0JmZ8fCFvJiYxNiZhKSYmWChjLHQsbiksciYmcShlKX0oaCYmKHY9aSYmaS5vblZub2RlVW5tb3VudGVkKXx8ZCkmJmJ0KCgoKT0+e3YmJnRuKHYsdCxlKSxkJiZBZShlLG51bGwsdCwidW5tb3VudGVkIil9KSxuKX0scT1lPT57Y29uc3R7dHlwZTp0LGVsOm4sYW5jaG9yOnIsdHJhbnNpdGlvbjpvfT1lO2lmKHQ9PT1UdClyZXR1cm4gdm9pZCB6KG4scik7aWYodD09PUV0KXJldHVybiB2b2lkIFIoZSk7Y29uc3Qgcz0oKT0+e2kobiksbyYmIW8ucGVyc2lzdGVkJiZvLmFmdGVyTGVhdmUmJm8uYWZ0ZXJMZWF2ZSgpfTtpZigxJmUuc2hhcGVGbGFnJiZvJiYhby5wZXJzaXN0ZWQpe2NvbnN0e2xlYXZlOnQsZGVsYXlMZWF2ZTpyfT1vLGk9KCk9PnQobixzKTtyP3IoZS5lbCxzLGkpOmkoKX1lbHNlIHMoKX0sej0oZSx0KT0+e2xldCBuO3doaWxlKGUhPT10KW49aChlKSxpKGUpLGU9bjtpKHQpfSxaPShlLHQsbik9Pntjb25zdHtidW06cixzY29wZTpzLHVwZGF0ZTppLHN1YlRyZWU6bCx1bTpjfT1lO3ImJigwLG8uaXIpKHIpLHMuc3RvcCgpLGkmJihpLmFjdGl2ZT0hMSxXKGwsZSx0LG4pKSxjJiZidChjLHQpLGJ0KCgoKT0+e2UuaXNVbm1vdW50ZWQ9ITB9KSx0KSx0JiZ0LnBlbmRpbmdCcmFuY2gmJiF0LmlzVW5tb3VudGVkJiZlLmFzeW5jRGVwJiYhZS5hc3luY1Jlc29sdmVkJiZlLnN1c3BlbnNlSWQ9PT10LnBlbmRpbmdJZCYmKHQuZGVwcy0tLDA9PT10LmRlcHMmJnQucmVzb2x2ZSgpKX0sWD0oZSx0LG4scj0hMSxvPSExLHM9MCk9Pntmb3IobGV0IGk9cztpPGUubGVuZ3RoO2krKylXKGVbaV0sdCxuLHIsbyl9LFk9ZT0+NiZlLnNoYXBlRmxhZz9ZKGUuY29tcG9uZW50LnN1YlRyZWUpOjEyOCZlLnNoYXBlRmxhZz9lLnN1c3BlbnNlLm5leHQoKTpoKGUuYW5jaG9yfHxlLmVsKSxRPShlLHQsbik9PntudWxsPT1lP3QuX3Zub2RlJiZXKHQuX3Zub2RlLG51bGwsbnVsbCwhMCk6bSh0Ll92bm9kZXx8bnVsbCxlLHQsbnVsbCxudWxsLG51bGwsbikseCgpLFMoKSx0Ll92bm9kZT1lfSxlZT17cDptLHVtOlcsbTpHLHI6cSxtdDpVLG1jOkUscGM6QixwYmM6QSxuOlksbzplfTtsZXQgdGUsbmU7cmV0dXJuIHQmJihbdGUsbmVdPXQoZWUpKSx7cmVuZGVyOlEsaHlkcmF0ZTp0ZSxjcmVhdGVBcHA6bXQoUSx0ZSl9fWZ1bmN0aW9uIEN0KHtlZmZlY3Q6ZSx1cGRhdGU6dH0sbil7ZS5hbGxvd1JlY3Vyc2U9dC5hbGxvd1JlY3Vyc2U9bn1mdW5jdGlvbiB4dChlLHQsbj0hMSl7Y29uc3Qgcj1lLmNoaWxkcmVuLHM9dC5jaGlsZHJlbjtpZigoMCxvLmtKKShyKSYmKDAsby5rSikocykpZm9yKGxldCBvPTA7bzxyLmxlbmd0aDtvKyspe2NvbnN0IGU9cltvXTtsZXQgdD1zW29dOzEmdC5zaGFwZUZsYWcmJiF0LmR5bmFtaWNDaGlsZHJlbiYmKCh0LnBhdGNoRmxhZzw9MHx8MzI9PT10LnBhdGNoRmxhZykmJih0PXNbb109WXQoc1tvXSksdC5lbD1lLmVsKSxufHx4dChlLHQpKSx0LnR5cGU9PT1JdCYmKHQuZWw9ZS5lbCl9fWZ1bmN0aW9uIFN0KGUpe2NvbnN0IHQ9ZS5zbGljZSgpLG49WzBdO2xldCByLG8scyxpLGw7Y29uc3QgYz1lLmxlbmd0aDtmb3Iocj0wO3I8YztyKyspe2NvbnN0IGM9ZVtyXTtpZigwIT09Yyl7aWYobz1uW24ubGVuZ3RoLTFdLGVbb108Yyl7dFtyXT1vLG4ucHVzaChyKTtjb250aW51ZX1zPTAsaT1uLmxlbmd0aC0xO3doaWxlKHM8aSlsPXMraT4+MSxlW25bbF1dPGM/cz1sKzE6aT1sO2M8ZVtuW3NdXSYmKHM+MCYmKHRbcl09bltzLTFdKSxuW3NdPXIpfX1zPW4ubGVuZ3RoLGk9bltzLTFdO3doaWxlKHMtLSA+MCluW3NdPWksaT10W2ldO3JldHVybiBufWNvbnN0IFJ0PWU9PmUuX19pc1RlbGVwb3J0O2NvbnN0IFR0PVN5bWJvbCh2b2lkIDApLEl0PVN5bWJvbCh2b2lkIDApLE90PVN5bWJvbCh2b2lkIDApLEV0PVN5bWJvbCh2b2lkIDApLEZ0PVtdO2xldCBBdD1udWxsO2Z1bmN0aW9uIGp0KGU9ITEpe0Z0LnB1c2goQXQ9ZT9udWxsOltdKX1mdW5jdGlvbiBOdCgpe0Z0LnBvcCgpLEF0PUZ0W0Z0Lmxlbmd0aC0xXXx8bnVsbH1sZXQgUHQ9MTtmdW5jdGlvbiBVdChlKXtQdCs9ZX1mdW5jdGlvbiBMdChlKXtyZXR1cm4gZS5keW5hbWljQ2hpbGRyZW49UHQ+MD9BdHx8by5aNjpudWxsLE50KCksUHQ+MCYmQXQmJkF0LnB1c2goZSksZX1mdW5jdGlvbiAkdChlLHQsbixyLG8scyl7cmV0dXJuIEx0KEt0KGUsdCxuLHIsbyxzLCEwKSl9ZnVuY3Rpb24gTXQoZSx0LG4scixvKXtyZXR1cm4gTHQoR3QoZSx0LG4scixvLCEwKSl9ZnVuY3Rpb24gSnQoZSl7cmV0dXJuISFlJiYhMD09PWUuX192X2lzVk5vZGV9ZnVuY3Rpb24gRHQoZSx0KXtyZXR1cm4gZS50eXBlPT09dC50eXBlJiZlLmtleT09PXQua2V5fWNvbnN0IEJ0PSJfX3ZJbnRlcm5hbCIsSHQ9KHtrZXk6ZX0pPT5udWxsIT1lP2U6bnVsbCxWdD0oe3JlZjplLHJlZl9rZXk6dCxyZWZfZm9yOm59KT0+bnVsbCE9ZT8oMCxvLkhEKShlKXx8KDAsci5kcSkoZSl8fCgwLG8ubWYpKGUpP3tpOkEscjplLGs6dCxmOiEhbn06ZTpudWxsO2Z1bmN0aW9uIEt0KGUsdD1udWxsLG49bnVsbCxyPTAscz1udWxsLGk9KGU9PT1UdD8wOjEpLGw9ITEsYz0hMSl7Y29uc3QgdT17X192X2lzVk5vZGU6ITAsX192X3NraXA6ITAsdHlwZTplLHByb3BzOnQsa2V5OnQmJkh0KHQpLHJlZjp0JiZWdCh0KSxzY29wZUlkOmosc2xvdFNjb3BlSWRzOm51bGwsY2hpbGRyZW46bixjb21wb25lbnQ6bnVsbCxzdXNwZW5zZTpudWxsLHNzQ29udGVudDpudWxsLHNzRmFsbGJhY2s6bnVsbCxkaXJzOm51bGwsdHJhbnNpdGlvbjpudWxsLGVsOm51bGwsYW5jaG9yOm51bGwsdGFyZ2V0Om51bGwsdGFyZ2V0QW5jaG9yOm51bGwsc3RhdGljQ291bnQ6MCxzaGFwZUZsYWc6aSxwYXRjaEZsYWc6cixkeW5hbWljUHJvcHM6cyxkeW5hbWljQ2hpbGRyZW46bnVsbCxhcHBDb250ZXh0Om51bGwsY3R4OkF9O3JldHVybiBjPyhRdCh1LG4pLDEyOCZpJiZlLm5vcm1hbGl6ZSh1KSk6biYmKHUuc2hhcGVGbGFnfD0oMCxvLkhEKShuKT84OjE2KSxQdD4wJiYhbCYmQXQmJih1LnBhdGNoRmxhZz4wfHw2JmkpJiYzMiE9PXUucGF0Y2hGbGFnJiZBdC5wdXNoKHUpLHV9Y29uc3QgR3Q9V3Q7ZnVuY3Rpb24gV3QoZSx0PW51bGwsbj1udWxsLHM9MCxpPW51bGwsbD0hMSl7aWYoZSYmZSE9PWplfHwoZT1PdCksSnQoZSkpe2NvbnN0IHI9enQoZSx0LCEwKTtyZXR1cm4gbiYmUXQocixuKSxQdD4wJiYhbCYmQXQmJig2JnIuc2hhcGVGbGFnP0F0W0F0LmluZGV4T2YoZSldPXI6QXQucHVzaChyKSksci5wYXRjaEZsYWd8PS0yLHJ9aWYod24oZSkmJihlPWUuX192Y2NPcHRzKSx0KXt0PXF0KHQpO2xldHtjbGFzczplLHN0eWxlOm59PXQ7ZSYmISgwLG8uSEQpKGUpJiYodC5jbGFzcz0oMCxvLkNfKShlKSksKDAsby5LbikobikmJigoMCxyLlgzKShuKSYmISgwLG8ua0opKG4pJiYobj0oMCxvLmw3KSh7fSxuKSksdC5zdHlsZT0oMCxvLmo1KShuKSl9Y29uc3QgYz0oMCxvLkhEKShlKT8xOlYoZSk/MTI4OlJ0KGUpPzY0OigwLG8uS24pKGUpPzQ6KDAsby5tZikoZSk/MjowO3JldHVybiBLdChlLHQsbixzLGksYyxsLCEwKX1mdW5jdGlvbiBxdChlKXtyZXR1cm4gZT8oMCxyLlgzKShlKXx8QnQgaW4gZT8oMCxvLmw3KSh7fSxlKTplOm51bGx9ZnVuY3Rpb24genQoZSx0LG49ITEpe2NvbnN0e3Byb3BzOnIscmVmOnMscGF0Y2hGbGFnOmksY2hpbGRyZW46bH09ZSxjPXQ/ZW4ocnx8e30sdCk6cix1PXtfX3ZfaXNWTm9kZTohMCxfX3Zfc2tpcDohMCx0eXBlOmUudHlwZSxwcm9wczpjLGtleTpjJiZIdChjKSxyZWY6dCYmdC5yZWY/biYmcz8oMCxvLmtKKShzKT9zLmNvbmNhdChWdCh0KSk6W3MsVnQodCldOlZ0KHQpOnMsc2NvcGVJZDplLnNjb3BlSWQsc2xvdFNjb3BlSWRzOmUuc2xvdFNjb3BlSWRzLGNoaWxkcmVuOmwsdGFyZ2V0OmUudGFyZ2V0LHRhcmdldEFuY2hvcjplLnRhcmdldEFuY2hvcixzdGF0aWNDb3VudDplLnN0YXRpY0NvdW50LHNoYXBlRmxhZzplLnNoYXBlRmxhZyxwYXRjaEZsYWc6dCYmZS50eXBlIT09VHQ/LTE9PT1pPzE2OjE2fGk6aSxkeW5hbWljUHJvcHM6ZS5keW5hbWljUHJvcHMsZHluYW1pY0NoaWxkcmVuOmUuZHluYW1pY0NoaWxkcmVuLGFwcENvbnRleHQ6ZS5hcHBDb250ZXh0LGRpcnM6ZS5kaXJzLHRyYW5zaXRpb246ZS50cmFuc2l0aW9uLGNvbXBvbmVudDplLmNvbXBvbmVudCxzdXNwZW5zZTplLnN1c3BlbnNlLHNzQ29udGVudDplLnNzQ29udGVudCYmenQoZS5zc0NvbnRlbnQpLHNzRmFsbGJhY2s6ZS5zc0ZhbGxiYWNrJiZ6dChlLnNzRmFsbGJhY2spLGVsOmUuZWwsYW5jaG9yOmUuYW5jaG9yLGN0eDplLmN0eCxjZTplLmNlfTtyZXR1cm4gdX1mdW5jdGlvbiBadChlPSIgIix0PTApe3JldHVybiBHdChJdCxudWxsLGUsdCl9ZnVuY3Rpb24gWHQoZSl7cmV0dXJuIG51bGw9PWV8fCJib29sZWFuIj09PXR5cGVvZiBlP0d0KE90KTooMCxvLmtKKShlKT9HdChUdCxudWxsLGUuc2xpY2UoKSk6Im9iamVjdCI9PT10eXBlb2YgZT9ZdChlKTpHdChJdCxudWxsLFN0cmluZyhlKSl9ZnVuY3Rpb24gWXQoZSl7cmV0dXJuIG51bGw9PT1lLmVsJiYtMSE9PWUucGF0Y2hGbGFnfHxlLm1lbW8/ZTp6dChlKX1mdW5jdGlvbiBRdChlLHQpe2xldCBuPTA7Y29uc3R7c2hhcGVGbGFnOnJ9PWU7aWYobnVsbD09dCl0PW51bGw7ZWxzZSBpZigoMCxvLmtKKSh0KSluPTE2O2Vsc2UgaWYoIm9iamVjdCI9PT10eXBlb2YgdCl7aWYoNjUmcil7Y29uc3Qgbj10LmRlZmF1bHQ7cmV0dXJuIHZvaWQobiYmKG4uX2MmJihuLl9kPSExKSxRdChlLG4oKSksbi5fYyYmKG4uX2Q9ITApKSl9e249MzI7Y29uc3Qgcj10Ll87cnx8QnQgaW4gdD8zPT09ciYmQSYmKDE9PT1BLnNsb3RzLl8/dC5fPTE6KHQuXz0yLGUucGF0Y2hGbGFnfD0xMDI0KSk6dC5fY3R4PUF9fWVsc2UoMCxvLm1mKSh0KT8odD17ZGVmYXVsdDp0LF9jdHg6QX0sbj0zMik6KHQ9U3RyaW5nKHQpLDY0JnI/KG49MTYsdD1bWnQodCldKTpuPTgpO2UuY2hpbGRyZW49dCxlLnNoYXBlRmxhZ3w9bn1mdW5jdGlvbiBlbiguLi5lKXtjb25zdCB0PXt9O2ZvcihsZXQgbj0wO248ZS5sZW5ndGg7bisrKXtjb25zdCByPWVbbl07Zm9yKGNvbnN0IGUgaW4gcilpZigiY2xhc3MiPT09ZSl0LmNsYXNzIT09ci5jbGFzcyYmKHQuY2xhc3M9KDAsby5DXykoW3QuY2xhc3Msci5jbGFzc10pKTtlbHNlIGlmKCJzdHlsZSI9PT1lKXQuc3R5bGU9KDAsby5qNSkoW3Quc3R5bGUsci5zdHlsZV0pO2Vsc2UgaWYoKDAsby5GNykoZSkpe2NvbnN0IG49dFtlXSxzPXJbZV07IXN8fG49PT1zfHwoMCxvLmtKKShuKSYmbi5pbmNsdWRlcyhzKXx8KHRbZV09bj9bXS5jb25jYXQobixzKTpzKX1lbHNlIiIhPT1lJiYodFtlXT1yW2VdKX1yZXR1cm4gdH1mdW5jdGlvbiB0bihlLHQsbixyPW51bGwpe2koZSx0LDcsW24scl0pfWNvbnN0IG5uPXZ0KCk7bGV0IHJuPTA7ZnVuY3Rpb24gb24oZSx0LG4pe2NvbnN0IHM9ZS50eXBlLGk9KHQ/dC5hcHBDb250ZXh0OmUuYXBwQ29udGV4dCl8fG5uLGw9e3VpZDpybisrLHZub2RlOmUsdHlwZTpzLHBhcmVudDp0LGFwcENvbnRleHQ6aSxyb290Om51bGwsbmV4dDpudWxsLHN1YlRyZWU6bnVsbCxlZmZlY3Q6bnVsbCx1cGRhdGU6bnVsbCxzY29wZTpuZXcgci5CaighMCkscmVuZGVyOm51bGwscHJveHk6bnVsbCxleHBvc2VkOm51bGwsZXhwb3NlUHJveHk6bnVsbCx3aXRoUHJveHk6bnVsbCxwcm92aWRlczp0P3QucHJvdmlkZXM6T2JqZWN0LmNyZWF0ZShpLnByb3ZpZGVzKSxhY2Nlc3NDYWNoZTpudWxsLHJlbmRlckNhY2hlOltdLGNvbXBvbmVudHM6bnVsbCxkaXJlY3RpdmVzOm51bGwscHJvcHNPcHRpb25zOnJ0KHMsaSksZW1pdHNPcHRpb25zOkUocyxpKSxlbWl0Om51bGwsZW1pdHRlZDpudWxsLHByb3BzRGVmYXVsdHM6by5rVCxpbmhlcml0QXR0cnM6cy5pbmhlcml0QXR0cnMsY3R4Om8ua1QsZGF0YTpvLmtULHByb3BzOm8ua1QsYXR0cnM6by5rVCxzbG90czpvLmtULHJlZnM6by5rVCxzZXR1cFN0YXRlOm8ua1Qsc2V0dXBDb250ZXh0Om51bGwsc3VzcGVuc2U6bixzdXNwZW5zZUlkOm4/bi5wZW5kaW5nSWQ6MCxhc3luY0RlcDpudWxsLGFzeW5jUmVzb2x2ZWQ6ITEsaXNNb3VudGVkOiExLGlzVW5tb3VudGVkOiExLGlzRGVhY3RpdmF0ZWQ6ITEsYmM6bnVsbCxjOm51bGwsYm06bnVsbCxtOm51bGwsYnU6bnVsbCx1Om51bGwsdW06bnVsbCxidW06bnVsbCxkYTpudWxsLGE6bnVsbCxydGc6bnVsbCxydGM6bnVsbCxlYzpudWxsLHNwOm51bGx9O3JldHVybiBsLmN0eD17XzpsfSxsLnJvb3Q9dD90LnJvb3Q6bCxsLmVtaXQ9Ty5iaW5kKG51bGwsbCksZS5jZSYmZS5jZShsKSxsfWxldCBzbj1udWxsO2NvbnN0IGxuPSgpPT5zbnx8QSxjbj1lPT57c249ZSxlLnNjb3BlLm9uKCl9LHVuPSgpPT57c24mJnNuLnNjb3BlLm9mZigpLHNuPW51bGx9O2Z1bmN0aW9uIGFuKGUpe3JldHVybiA0JmUudm5vZGUuc2hhcGVGbGFnfWxldCBmbixwbixkbj0hMTtmdW5jdGlvbiBobihlLHQ9ITEpe2RuPXQ7Y29uc3R7cHJvcHM6bixjaGlsZHJlbjpyfT1lLnZub2RlLG89YW4oZSk7UWUoZSxuLG8sdCksZHQoZSxyKTtjb25zdCBzPW8/dm4oZSx0KTp2b2lkIDA7cmV0dXJuIGRuPSExLHN9ZnVuY3Rpb24gdm4oZSx0KXtjb25zdCBuPWUudHlwZTtlLmFjY2Vzc0NhY2hlPU9iamVjdC5jcmVhdGUobnVsbCksZS5wcm94eT0oMCxyLlhsKShuZXcgUHJveHkoZS5jdHgsJGUpKTtjb25zdHtzZXR1cDppfT1uO2lmKGkpe2NvbnN0IG49ZS5zZXR1cENvbnRleHQ9aS5sZW5ndGg+MT95bihlKTpudWxsO2NuKGUpLCgwLHIuSmQpKCk7Y29uc3QgYz1zKGksZSwwLFtlLnByb3BzLG5dKTtpZigoMCxyLmxrKSgpLHVuKCksKDAsby50SSkoYykpe2lmKGMudGhlbih1bix1biksdClyZXR1cm4gYy50aGVuKChuPT57Z24oZSxuLHQpfSkpLmNhdGNoKCh0PT57bCh0LGUsMCl9KSk7ZS5hc3luY0RlcD1jfWVsc2UgZ24oZSxjLHQpfWVsc2UgbW4oZSx0KX1mdW5jdGlvbiBnbihlLHQsbil7KDAsby5tZikodCk/ZS50eXBlLl9fc3NySW5saW5lUmVuZGVyP2Uuc3NyUmVuZGVyPXQ6ZS5yZW5kZXI9dDooMCxvLktuKSh0KSYmKGUuc2V0dXBTdGF0ZT0oMCxyLldMKSh0KSksbW4oZSxuKX1mdW5jdGlvbiBtbihlLHQsbil7Y29uc3Qgcz1lLnR5cGU7aWYoIWUucmVuZGVyKXtpZighdCYmZm4mJiFzLnJlbmRlcil7Y29uc3QgdD1zLnRlbXBsYXRlfHxWZShlKS50ZW1wbGF0ZTtpZih0KXswO2NvbnN0e2lzQ3VzdG9tRWxlbWVudDpuLGNvbXBpbGVyT3B0aW9uczpyfT1lLmFwcENvbnRleHQuY29uZmlnLHtkZWxpbWl0ZXJzOmksY29tcGlsZXJPcHRpb25zOmx9PXMsYz0oMCxvLmw3KSgoMCxvLmw3KSh7aXNDdXN0b21FbGVtZW50Om4sZGVsaW1pdGVyczppfSxyKSxsKTtzLnJlbmRlcj1mbih0LGMpfX1lLnJlbmRlcj1zLnJlbmRlcnx8by5kRyxwbiYmcG4oZSl9Y24oZSksKDAsci5KZCkoKSxKZShlKSwoMCxyLmxrKSgpLHVuKCl9ZnVuY3Rpb24gX24oZSl7cmV0dXJuIG5ldyBQcm94eShlLmF0dHJzLHtnZXQodCxuKXtyZXR1cm4oMCxyLmopKGUsImdldCIsIiRhdHRycyIpLHRbbl19fSl9ZnVuY3Rpb24geW4oZSl7Y29uc3QgdD10PT57ZS5leHBvc2VkPXR8fHt9fTtsZXQgbjtyZXR1cm57Z2V0IGF0dHJzKCl7cmV0dXJuIG58fChuPV9uKGUpKX0sc2xvdHM6ZS5zbG90cyxlbWl0OmUuZW1pdCxleHBvc2U6dH19ZnVuY3Rpb24gYm4oZSl7aWYoZS5leHBvc2VkKXJldHVybiBlLmV4cG9zZVByb3h5fHwoZS5leHBvc2VQcm94eT1uZXcgUHJveHkoKDAsci5XTCkoKDAsci5YbCkoZS5leHBvc2VkKSkse2dldCh0LG4pe3JldHVybiBuIGluIHQ/dFtuXTpuIGluIFVlP1VlW25dKGUpOnZvaWQgMH0saGFzKGUsdCl7cmV0dXJuIHQgaW4gZXx8dCBpbiBVZX19KSl9ZnVuY3Rpb24ga24oZSx0PSEwKXtyZXR1cm4oMCxvLm1mKShlKT9lLmRpc3BsYXlOYW1lfHxlLm5hbWU6ZS5uYW1lfHx0JiZlLl9fbmFtZX1mdW5jdGlvbiB3bihlKXtyZXR1cm4oMCxvLm1mKShlKSYmIl9fdmNjT3B0cyJpbiBlfWNvbnN0IENuPShlLHQpPT4oMCxyLkZsKShlLHQsZG4pO2Z1bmN0aW9uIHhuKGUsdCxuKXtjb25zdCByPWFyZ3VtZW50cy5sZW5ndGg7cmV0dXJuIDI9PT1yPygwLG8uS24pKHQpJiYhKDAsby5rSikodCk/SnQodCk/R3QoZSxudWxsLFt0XSk6R3QoZSx0KTpHdChlLG51bGwsdCk6KHI+Mz9uPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywyKTozPT09ciYmSnQobikmJihuPVtuXSksR3QoZSx0LG4pKX1jb25zdCBTbj1TeW1ib2woIiIpLFJuPSgpPT57e2NvbnN0IGU9VyhTbik7cmV0dXJuIGV9fTtjb25zdCBUbj0iMy4yLjQ3In0sOTYzOmZ1bmN0aW9uKGUsdCxuKXtuLmQodCx7VzM6ZnVuY3Rpb24oKXtyZXR1cm4gdGV9LHJpOmZ1bmN0aW9uKCl7cmV0dXJuIHVlfX0pO3ZhciByPW4oNTc3KSxvPW4oMjUyKSxzPW4oMjYyKTtjb25zdCBpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIsbD0idW5kZWZpbmVkIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDpudWxsLGM9bCYmbC5jcmVhdGVFbGVtZW50KCJ0ZW1wbGF0ZSIpLHU9e2luc2VydDooZSx0LG4pPT57dC5pbnNlcnRCZWZvcmUoZSxufHxudWxsKX0scmVtb3ZlOmU9Pntjb25zdCB0PWUucGFyZW50Tm9kZTt0JiZ0LnJlbW92ZUNoaWxkKGUpfSxjcmVhdGVFbGVtZW50OihlLHQsbixyKT0+e2NvbnN0IG89dD9sLmNyZWF0ZUVsZW1lbnROUyhpLGUpOmwuY3JlYXRlRWxlbWVudChlLG4/e2lzOm59OnZvaWQgMCk7cmV0dXJuInNlbGVjdCI9PT1lJiZyJiZudWxsIT1yLm11bHRpcGxlJiZvLnNldEF0dHJpYnV0ZSgibXVsdGlwbGUiLHIubXVsdGlwbGUpLG99LGNyZWF0ZVRleHQ6ZT0+bC5jcmVhdGVUZXh0Tm9kZShlKSxjcmVhdGVDb21tZW50OmU9PmwuY3JlYXRlQ29tbWVudChlKSxzZXRUZXh0OihlLHQpPT57ZS5ub2RlVmFsdWU9dH0sc2V0RWxlbWVudFRleHQ6KGUsdCk9PntlLnRleHRDb250ZW50PXR9LHBhcmVudE5vZGU6ZT0+ZS5wYXJlbnROb2RlLG5leHRTaWJsaW5nOmU9PmUubmV4dFNpYmxpbmcscXVlcnlTZWxlY3RvcjplPT5sLnF1ZXJ5U2VsZWN0b3IoZSksc2V0U2NvcGVJZChlLHQpe2Uuc2V0QXR0cmlidXRlKHQsIiIpfSxpbnNlcnRTdGF0aWNDb250ZW50KGUsdCxuLHIsbyxzKXtjb25zdCBpPW4/bi5wcmV2aW91c1NpYmxpbmc6dC5sYXN0Q2hpbGQ7aWYobyYmKG89PT1zfHxvLm5leHRTaWJsaW5nKSl7d2hpbGUoMSlpZih0Lmluc2VydEJlZm9yZShvLmNsb25lTm9kZSghMCksbiksbz09PXN8fCEobz1vLm5leHRTaWJsaW5nKSlicmVha31lbHNle2MuaW5uZXJIVE1MPXI/YDxzdmc+JHtlfTwvc3ZnPmA6ZTtjb25zdCBvPWMuY29udGVudDtpZihyKXtjb25zdCBlPW8uZmlyc3RDaGlsZDt3aGlsZShlLmZpcnN0Q2hpbGQpby5hcHBlbmRDaGlsZChlLmZpcnN0Q2hpbGQpO28ucmVtb3ZlQ2hpbGQoZSl9dC5pbnNlcnRCZWZvcmUobyxuKX1yZXR1cm5baT9pLm5leHRTaWJsaW5nOnQuZmlyc3RDaGlsZCxuP24ucHJldmlvdXNTaWJsaW5nOnQubGFzdENoaWxkXX19O2Z1bmN0aW9uIGEoZSx0LG4pe2NvbnN0IHI9ZS5fdnRjO3ImJih0PSh0P1t0LC4uLnJdOlsuLi5yXSkuam9pbigiICIpKSxudWxsPT10P2UucmVtb3ZlQXR0cmlidXRlKCJjbGFzcyIpOm4/ZS5zZXRBdHRyaWJ1dGUoImNsYXNzIix0KTplLmNsYXNzTmFtZT10fWZ1bmN0aW9uIGYoZSx0LG4pe2NvbnN0IG89ZS5zdHlsZSxzPSgwLHIuSEQpKG4pO2lmKG4mJiFzKXtpZih0JiYhKDAsci5IRCkodCkpZm9yKGNvbnN0IGUgaW4gdCludWxsPT1uW2VdJiZkKG8sZSwiIik7Zm9yKGNvbnN0IGUgaW4gbilkKG8sZSxuW2VdKX1lbHNle2NvbnN0IHI9by5kaXNwbGF5O3M/dCE9PW4mJihvLmNzc1RleHQ9bik6dCYmZS5yZW1vdmVBdHRyaWJ1dGUoInN0eWxlIiksIl92b2QiaW4gZSYmKG8uZGlzcGxheT1yKX19Y29uc3QgcD0vXHMqIWltcG9ydGFudCQvO2Z1bmN0aW9uIGQoZSx0LG4pe2lmKCgwLHIua0opKG4pKW4uZm9yRWFjaCgobj0+ZChlLHQsbikpKTtlbHNlIGlmKG51bGw9PW4mJihuPSIiKSx0LnN0YXJ0c1dpdGgoIi0tIikpZS5zZXRQcm9wZXJ0eSh0LG4pO2Vsc2V7Y29uc3Qgbz1nKGUsdCk7cC50ZXN0KG4pP2Uuc2V0UHJvcGVydHkoKDAsci5ycykobyksbi5yZXBsYWNlKHAsIiIpLCJpbXBvcnRhbnQiKTplW29dPW59fWNvbnN0IGg9WyJXZWJraXQiLCJNb3oiLCJtcyJdLHY9e307ZnVuY3Rpb24gZyhlLHQpe2NvbnN0IG49dlt0XTtpZihuKXJldHVybiBuO2xldCBvPSgwLHIuX0EpKHQpO2lmKCJmaWx0ZXIiIT09byYmbyBpbiBlKXJldHVybiB2W3RdPW87bz0oMCxyLmtDKShvKTtmb3IobGV0IHI9MDtyPGgubGVuZ3RoO3IrKyl7Y29uc3Qgbj1oW3JdK287aWYobiBpbiBlKXJldHVybiB2W3RdPW59cmV0dXJuIHR9Y29uc3QgbT0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI7ZnVuY3Rpb24gXyhlLHQsbixvLHMpe2lmKG8mJnQuc3RhcnRzV2l0aCgieGxpbms6IikpbnVsbD09bj9lLnJlbW92ZUF0dHJpYnV0ZU5TKG0sdC5zbGljZSg2LHQubGVuZ3RoKSk6ZS5zZXRBdHRyaWJ1dGVOUyhtLHQsbik7ZWxzZXtjb25zdCBvPSgwLHIuUHEpKHQpO251bGw9PW58fG8mJiEoMCxyLnlBKShuKT9lLnJlbW92ZUF0dHJpYnV0ZSh0KTplLnNldEF0dHJpYnV0ZSh0LG8/IiI6bil9fWZ1bmN0aW9uIHkoZSx0LG4sbyxzLGksbCl7aWYoImlubmVySFRNTCI9PT10fHwidGV4dENvbnRlbnQiPT09dClyZXR1cm4gbyYmbChvLHMsaSksdm9pZChlW3RdPW51bGw9PW4/IiI6bik7aWYoInZhbHVlIj09PXQmJiJQUk9HUkVTUyIhPT1lLnRhZ05hbWUmJiFlLnRhZ05hbWUuaW5jbHVkZXMoIi0iKSl7ZS5fdmFsdWU9bjtjb25zdCByPW51bGw9PW4/IiI6bjtyZXR1cm4gZS52YWx1ZT09PXImJiJPUFRJT04iIT09ZS50YWdOYW1lfHwoZS52YWx1ZT1yKSx2b2lkKG51bGw9PW4mJmUucmVtb3ZlQXR0cmlidXRlKHQpKX1sZXQgYz0hMTtpZigiIj09PW58fG51bGw9PW4pe2NvbnN0IG89dHlwZW9mIGVbdF07ImJvb2xlYW4iPT09bz9uPSgwLHIueUEpKG4pOm51bGw9PW4mJiJzdHJpbmciPT09bz8obj0iIixjPSEwKToibnVtYmVyIj09PW8mJihuPTAsYz0hMCl9dHJ5e2VbdF09bn1jYXRjaCh1KXswfWMmJmUucmVtb3ZlQXR0cmlidXRlKHQpfWZ1bmN0aW9uIGIoZSx0LG4scil7ZS5hZGRFdmVudExpc3RlbmVyKHQsbixyKX1mdW5jdGlvbiBrKGUsdCxuLHIpe2UucmVtb3ZlRXZlbnRMaXN0ZW5lcih0LG4scil9ZnVuY3Rpb24gdyhlLHQsbixyLG89bnVsbCl7Y29uc3Qgcz1lLl92ZWl8fChlLl92ZWk9e30pLGk9c1t0XTtpZihyJiZpKWkudmFsdWU9cjtlbHNle2NvbnN0W24sbF09eCh0KTtpZihyKXtjb25zdCBpPXNbdF09SShyLG8pO2IoZSxuLGksbCl9ZWxzZSBpJiYoayhlLG4saSxsKSxzW3RdPXZvaWQgMCl9fWNvbnN0IEM9Lyg/Ok9uY2V8UGFzc2l2ZXxDYXB0dXJlKSQvO2Z1bmN0aW9uIHgoZSl7bGV0IHQ7aWYoQy50ZXN0KGUpKXtsZXQgbjt0PXt9O3doaWxlKG49ZS5tYXRjaChDKSllPWUuc2xpY2UoMCxlLmxlbmd0aC1uWzBdLmxlbmd0aCksdFtuWzBdLnRvTG93ZXJDYXNlKCldPSEwfWNvbnN0IG49IjoiPT09ZVsyXT9lLnNsaWNlKDMpOigwLHIucnMpKGUuc2xpY2UoMikpO3JldHVybltuLHRdfWxldCBTPTA7Y29uc3QgUj1Qcm9taXNlLnJlc29sdmUoKSxUPSgpPT5TfHwoUi50aGVuKCgoKT0+Uz0wKSksUz1EYXRlLm5vdygpKTtmdW5jdGlvbiBJKGUsdCl7Y29uc3Qgbj1lPT57aWYoZS5fdnRzKXtpZihlLl92dHM8PW4uYXR0YWNoZWQpcmV0dXJufWVsc2UgZS5fdnRzPURhdGUubm93KCk7KDAsby4kZCkoTyhlLG4udmFsdWUpLHQsNSxbZV0pfTtyZXR1cm4gbi52YWx1ZT1lLG4uYXR0YWNoZWQ9VCgpLG59ZnVuY3Rpb24gTyhlLHQpe2lmKCgwLHIua0opKHQpKXtjb25zdCBuPWUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uO3JldHVybiBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbj0oKT0+e24uY2FsbChlKSxlLl9zdG9wcGVkPSEwfSx0Lm1hcCgoZT0+dD0+IXQuX3N0b3BwZWQmJmUmJmUodCkpKX1yZXR1cm4gdH1jb25zdCBFPS9eb25bYS16XS8sRj0oZSx0LG4sbyxzPSExLGksbCxjLHUpPT57ImNsYXNzIj09PXQ/YShlLG8scyk6InN0eWxlIj09PXQ/ZihlLG4sbyk6KDAsci5GNykodCk/KDAsci50UikodCl8fHcoZSx0LG4sbyxsKTooIi4iPT09dFswXT8odD10LnNsaWNlKDEpLDEpOiJeIj09PXRbMF0/KHQ9dC5zbGljZSgxKSwwKTpBKGUsdCxvLHMpKT95KGUsdCxvLGksbCxjLHUpOigidHJ1ZS12YWx1ZSI9PT10P2UuX3RydWVWYWx1ZT1vOiJmYWxzZS12YWx1ZSI9PT10JiYoZS5fZmFsc2VWYWx1ZT1vKSxfKGUsdCxvLHMpKX07ZnVuY3Rpb24gQShlLHQsbixvKXtyZXR1cm4gbz8iaW5uZXJIVE1MIj09PXR8fCJ0ZXh0Q29udGVudCI9PT10fHwhISh0IGluIGUmJkUudGVzdCh0KSYmKDAsci5tZikobikpOiJzcGVsbGNoZWNrIiE9PXQmJiJkcmFnZ2FibGUiIT09dCYmInRyYW5zbGF0ZSIhPT10JiYoImZvcm0iIT09dCYmKCgibGlzdCIhPT10fHwiSU5QVVQiIT09ZS50YWdOYW1lKSYmKCgidHlwZSIhPT10fHwiVEVYVEFSRUEiIT09ZS50YWdOYW1lKSYmKCghRS50ZXN0KHQpfHwhKDAsci5IRCkobikpJiZ0IGluIGUpKSkpfSJ1bmRlZmluZWQiIT09dHlwZW9mIEhUTUxFbGVtZW50JiZIVE1MRWxlbWVudDtjb25zdCBqPSJ0cmFuc2l0aW9uIixOPSJhbmltYXRpb24iLFA9KGUse3Nsb3RzOnR9KT0+KDAsby5oKShvLlAkLEooZSksdCk7UC5kaXNwbGF5TmFtZT0iVHJhbnNpdGlvbiI7Y29uc3QgVT17bmFtZTpTdHJpbmcsdHlwZTpTdHJpbmcsY3NzOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDohMH0sZHVyYXRpb246W1N0cmluZyxOdW1iZXIsT2JqZWN0XSxlbnRlckZyb21DbGFzczpTdHJpbmcsZW50ZXJBY3RpdmVDbGFzczpTdHJpbmcsZW50ZXJUb0NsYXNzOlN0cmluZyxhcHBlYXJGcm9tQ2xhc3M6U3RyaW5nLGFwcGVhckFjdGl2ZUNsYXNzOlN0cmluZyxhcHBlYXJUb0NsYXNzOlN0cmluZyxsZWF2ZUZyb21DbGFzczpTdHJpbmcsbGVhdmVBY3RpdmVDbGFzczpTdHJpbmcsbGVhdmVUb0NsYXNzOlN0cmluZ30sTD1QLnByb3BzPSgwLHIubDcpKHt9LG8uUCQucHJvcHMsVSksJD0oZSx0PVtdKT0+eygwLHIua0opKGUpP2UuZm9yRWFjaCgoZT0+ZSguLi50KSkpOmUmJmUoLi4udCl9LE09ZT0+ISFlJiYoKDAsci5rSikoZSk/ZS5zb21lKChlPT5lLmxlbmd0aD4xKSk6ZS5sZW5ndGg+MSk7ZnVuY3Rpb24gSihlKXtjb25zdCB0PXt9O2Zvcihjb25zdCByIGluIGUpciBpbiBVfHwodFtyXT1lW3JdKTtpZighMT09PWUuY3NzKXJldHVybiB0O2NvbnN0e25hbWU6bj0idiIsdHlwZTpvLGR1cmF0aW9uOnMsZW50ZXJGcm9tQ2xhc3M6aT1gJHtufS1lbnRlci1mcm9tYCxlbnRlckFjdGl2ZUNsYXNzOmw9YCR7bn0tZW50ZXItYWN0aXZlYCxlbnRlclRvQ2xhc3M6Yz1gJHtufS1lbnRlci10b2AsYXBwZWFyRnJvbUNsYXNzOnU9aSxhcHBlYXJBY3RpdmVDbGFzczphPWwsYXBwZWFyVG9DbGFzczpmPWMsbGVhdmVGcm9tQ2xhc3M6cD1gJHtufS1sZWF2ZS1mcm9tYCxsZWF2ZUFjdGl2ZUNsYXNzOmQ9YCR7bn0tbGVhdmUtYWN0aXZlYCxsZWF2ZVRvQ2xhc3M6aD1gJHtufS1sZWF2ZS10b2B9PWUsdj1EKHMpLGc9diYmdlswXSxtPXYmJnZbMV0se29uQmVmb3JlRW50ZXI6XyxvbkVudGVyOnksb25FbnRlckNhbmNlbGxlZDpiLG9uTGVhdmU6ayxvbkxlYXZlQ2FuY2VsbGVkOncsb25CZWZvcmVBcHBlYXI6Qz1fLG9uQXBwZWFyOng9eSxvbkFwcGVhckNhbmNlbGxlZDpTPWJ9PXQsUj0oZSx0LG4pPT57VihlLHQ/ZjpjKSxWKGUsdD9hOmwpLG4mJm4oKX0sVD0oZSx0KT0+e2UuX2lzTGVhdmluZz0hMSxWKGUscCksVihlLGgpLFYoZSxkKSx0JiZ0KCl9LEk9ZT0+KHQsbik9Pntjb25zdCByPWU/eDp5LHM9KCk9PlIodCxlLG4pOyQocixbdCxzXSksSygoKCk9PntWKHQsZT91OmkpLEgodCxlP2Y6YyksTShyKXx8Vyh0LG8sZyxzKX0pKX07cmV0dXJuKDAsci5sNykodCx7b25CZWZvcmVFbnRlcihlKXskKF8sW2VdKSxIKGUsaSksSChlLGwpfSxvbkJlZm9yZUFwcGVhcihlKXskKEMsW2VdKSxIKGUsdSksSChlLGEpfSxvbkVudGVyOkkoITEpLG9uQXBwZWFyOkkoITApLG9uTGVhdmUoZSx0KXtlLl9pc0xlYXZpbmc9ITA7Y29uc3Qgbj0oKT0+VChlLHQpO0goZSxwKSxYKCksSChlLGQpLEsoKCgpPT57ZS5faXNMZWF2aW5nJiYoVihlLHApLEgoZSxoKSxNKGspfHxXKGUsbyxtLG4pKX0pKSwkKGssW2Usbl0pfSxvbkVudGVyQ2FuY2VsbGVkKGUpe1IoZSwhMSksJChiLFtlXSl9LG9uQXBwZWFyQ2FuY2VsbGVkKGUpe1IoZSwhMCksJChTLFtlXSl9LG9uTGVhdmVDYW5jZWxsZWQoZSl7VChlKSwkKHcsW2VdKX19KX1mdW5jdGlvbiBEKGUpe2lmKG51bGw9PWUpcmV0dXJuIG51bGw7aWYoKDAsci5LbikoZSkpcmV0dXJuW0IoZS5lbnRlciksQihlLmxlYXZlKV07e2NvbnN0IHQ9QihlKTtyZXR1cm5bdCx0XX19ZnVuY3Rpb24gQihlKXtjb25zdCB0PSgwLHIuSGUpKGUpO3JldHVybiB0fWZ1bmN0aW9uIEgoZSx0KXt0LnNwbGl0KC9ccysvKS5mb3JFYWNoKCh0PT50JiZlLmNsYXNzTGlzdC5hZGQodCkpKSwoZS5fdnRjfHwoZS5fdnRjPW5ldyBTZXQpKS5hZGQodCl9ZnVuY3Rpb24gVihlLHQpe3Quc3BsaXQoL1xzKy8pLmZvckVhY2goKHQ9PnQmJmUuY2xhc3NMaXN0LnJlbW92ZSh0KSkpO2NvbnN0e192dGM6bn09ZTtuJiYobi5kZWxldGUodCksbi5zaXplfHwoZS5fdnRjPXZvaWQgMCkpfWZ1bmN0aW9uIEsoZSl7cmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgoKT0+e3JlcXVlc3RBbmltYXRpb25GcmFtZShlKX0pKX1sZXQgRz0wO2Z1bmN0aW9uIFcoZSx0LG4scil7Y29uc3Qgbz1lLl9lbmRJZD0rK0cscz0oKT0+e289PT1lLl9lbmRJZCYmcigpfTtpZihuKXJldHVybiBzZXRUaW1lb3V0KHMsbik7Y29uc3R7dHlwZTppLHRpbWVvdXQ6bCxwcm9wQ291bnQ6Y309cShlLHQpO2lmKCFpKXJldHVybiByKCk7Y29uc3QgdT1pKyJlbmQiO2xldCBhPTA7Y29uc3QgZj0oKT0+e2UucmVtb3ZlRXZlbnRMaXN0ZW5lcih1LHApLHMoKX0scD10PT57dC50YXJnZXQ9PT1lJiYrK2E+PWMmJmYoKX07c2V0VGltZW91dCgoKCk9PnthPGMmJmYoKX0pLGwrMSksZS5hZGRFdmVudExpc3RlbmVyKHUscCl9ZnVuY3Rpb24gcShlLHQpe2NvbnN0IG49d2luZG93LmdldENvbXB1dGVkU3R5bGUoZSkscj1lPT4obltlXXx8IiIpLnNwbGl0KCIsICIpLG89cihgJHtqfURlbGF5YCkscz1yKGAke2p9RHVyYXRpb25gKSxpPXoobyxzKSxsPXIoYCR7Tn1EZWxheWApLGM9cihgJHtOfUR1cmF0aW9uYCksdT16KGwsYyk7bGV0IGE9bnVsbCxmPTAscD0wO3Q9PT1qP2k+MCYmKGE9aixmPWkscD1zLmxlbmd0aCk6dD09PU4/dT4wJiYoYT1OLGY9dSxwPWMubGVuZ3RoKTooZj1NYXRoLm1heChpLHUpLGE9Zj4wP2k+dT9qOk46bnVsbCxwPWE/YT09PWo/cy5sZW5ndGg6Yy5sZW5ndGg6MCk7Y29uc3QgZD1hPT09aiYmL1xiKHRyYW5zZm9ybXxhbGwpKCx8JCkvLnRlc3QocihgJHtqfVByb3BlcnR5YCkudG9TdHJpbmcoKSk7cmV0dXJue3R5cGU6YSx0aW1lb3V0OmYscHJvcENvdW50OnAsaGFzVHJhbnNmb3JtOmR9fWZ1bmN0aW9uIHooZSx0KXt3aGlsZShlLmxlbmd0aDx0Lmxlbmd0aCllPWUuY29uY2F0KGUpO3JldHVybiBNYXRoLm1heCguLi50Lm1hcCgoKHQsbik9PloodCkrWihlW25dKSkpKX1mdW5jdGlvbiBaKGUpe3JldHVybiAxZTMqTnVtYmVyKGUuc2xpY2UoMCwtMSkucmVwbGFjZSgiLCIsIi4iKSl9ZnVuY3Rpb24gWCgpe3JldHVybiBkb2N1bWVudC5ib2R5Lm9mZnNldEhlaWdodH1jb25zdCBZPW5ldyBXZWFrTWFwLFE9bmV3IFdlYWtNYXAsZWU9e25hbWU6IlRyYW5zaXRpb25Hcm91cCIscHJvcHM6KDAsci5sNykoe30sTCx7dGFnOlN0cmluZyxtb3ZlQ2xhc3M6U3RyaW5nfSksc2V0dXAoZSx7c2xvdHM6dH0pe2NvbnN0IG49KDAsby5GTikoKSxyPSgwLG8uWTgpKCk7bGV0IGksbDtyZXR1cm4oMCxvLmljKSgoKCk9PntpZighaS5sZW5ndGgpcmV0dXJuO2NvbnN0IHQ9ZS5tb3ZlQ2xhc3N8fGAke2UubmFtZXx8InYifS1tb3ZlYDtpZighc2UoaVswXS5lbCxuLnZub2RlLmVsLHQpKXJldHVybjtpLmZvckVhY2gobmUpLGkuZm9yRWFjaChyZSk7Y29uc3Qgcj1pLmZpbHRlcihvZSk7WCgpLHIuZm9yRWFjaCgoZT0+e2NvbnN0IG49ZS5lbCxyPW4uc3R5bGU7SChuLHQpLHIudHJhbnNmb3JtPXIud2Via2l0VHJhbnNmb3JtPXIudHJhbnNpdGlvbkR1cmF0aW9uPSIiO2NvbnN0IG89bi5fbW92ZUNiPWU9PntlJiZlLnRhcmdldCE9PW58fGUmJiEvdHJhbnNmb3JtJC8udGVzdChlLnByb3BlcnR5TmFtZSl8fChuLnJlbW92ZUV2ZW50TGlzdGVuZXIoInRyYW5zaXRpb25lbmQiLG8pLG4uX21vdmVDYj1udWxsLFYobix0KSl9O24uYWRkRXZlbnRMaXN0ZW5lcigidHJhbnNpdGlvbmVuZCIsbyl9KSl9KSksKCk9Pntjb25zdCBjPSgwLHMuSVUpKGUpLHU9SihjKTtsZXQgYT1jLnRhZ3x8by5IWTtpPWwsbD10LmRlZmF1bHQ/KDAsby5RNikodC5kZWZhdWx0KCkpOltdO2ZvcihsZXQgZT0wO2U8bC5sZW5ndGg7ZSsrKXtjb25zdCB0PWxbZV07bnVsbCE9dC5rZXkmJigwLG8ubkspKHQsKDAsby5VMikodCx1LHIsbikpfWlmKGkpZm9yKGxldCBlPTA7ZTxpLmxlbmd0aDtlKyspe2NvbnN0IHQ9aVtlXTsoMCxvLm5LKSh0LCgwLG8uVTIpKHQsdSxyLG4pKSxZLnNldCh0LHQuZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkpfXJldHVybigwLG8uV20pKGEsbnVsbCxsKX19fTtlZS5wcm9wcztjb25zdCB0ZT1lZTtmdW5jdGlvbiBuZShlKXtjb25zdCB0PWUuZWw7dC5fbW92ZUNiJiZ0Ll9tb3ZlQ2IoKSx0Ll9lbnRlckNiJiZ0Ll9lbnRlckNiKCl9ZnVuY3Rpb24gcmUoZSl7US5zZXQoZSxlLmVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpKX1mdW5jdGlvbiBvZShlKXtjb25zdCB0PVkuZ2V0KGUpLG49US5nZXQoZSkscj10LmxlZnQtbi5sZWZ0LG89dC50b3Atbi50b3A7aWYocnx8byl7Y29uc3QgdD1lLmVsLnN0eWxlO3JldHVybiB0LnRyYW5zZm9ybT10LndlYmtpdFRyYW5zZm9ybT1gdHJhbnNsYXRlKCR7cn1weCwke299cHgpYCx0LnRyYW5zaXRpb25EdXJhdGlvbj0iMHMiLGV9fWZ1bmN0aW9uIHNlKGUsdCxuKXtjb25zdCByPWUuY2xvbmVOb2RlKCk7ZS5fdnRjJiZlLl92dGMuZm9yRWFjaCgoZT0+e2Uuc3BsaXQoL1xzKy8pLmZvckVhY2goKGU9PmUmJnIuY2xhc3NMaXN0LnJlbW92ZShlKSkpfSkpLG4uc3BsaXQoL1xzKy8pLmZvckVhY2goKGU9PmUmJnIuY2xhc3NMaXN0LmFkZChlKSkpLHIuc3R5bGUuZGlzcGxheT0ibm9uZSI7Y29uc3Qgbz0xPT09dC5ub2RlVHlwZT90OnQucGFyZW50Tm9kZTtvLmFwcGVuZENoaWxkKHIpO2NvbnN0e2hhc1RyYW5zZm9ybTpzfT1xKHIpO3JldHVybiBvLnJlbW92ZUNoaWxkKHIpLHN9Y29uc3QgaWU9KDAsci5sNykoe3BhdGNoUHJvcDpGfSx1KTtsZXQgbGU7ZnVuY3Rpb24gY2UoKXtyZXR1cm4gbGV8fChsZT0oMCxvLlVzKShpZSkpfWNvbnN0IHVlPSguLi5lKT0+e2NvbnN0IHQ9Y2UoKS5jcmVhdGVBcHAoLi4uZSk7Y29uc3R7bW91bnQ6bn09dDtyZXR1cm4gdC5tb3VudD1lPT57Y29uc3Qgbz1hZShlKTtpZighbylyZXR1cm47Y29uc3Qgcz10Ll9jb21wb25lbnQ7KDAsci5tZikocyl8fHMucmVuZGVyfHxzLnRlbXBsYXRlfHwocy50ZW1wbGF0ZT1vLmlubmVySFRNTCksby5pbm5lckhUTUw9IiI7Y29uc3QgaT1uKG8sITEsbyBpbnN0YW5jZW9mIFNWR0VsZW1lbnQpO3JldHVybiBvIGluc3RhbmNlb2YgRWxlbWVudCYmKG8ucmVtb3ZlQXR0cmlidXRlKCJ2LWNsb2FrIiksby5zZXRBdHRyaWJ1dGUoImRhdGEtdi1hcHAiLCIiKSksaX0sdH07ZnVuY3Rpb24gYWUoZSl7aWYoKDAsci5IRCkoZSkpe2NvbnN0IHQ9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlKTtyZXR1cm4gdH1yZXR1cm4gZX19LDU3NzpmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gcihlLHQpe2NvbnN0IG49T2JqZWN0LmNyZWF0ZShudWxsKSxyPWUuc3BsaXQoIiwiKTtmb3IobGV0IG89MDtvPHIubGVuZ3RoO28rKyluW3Jbb11dPSEwO3JldHVybiB0P2U9PiEhbltlLnRvTG93ZXJDYXNlKCldOmU9PiEhbltlXX1uLmQodCx7Q186ZnVuY3Rpb24oKXtyZXR1cm4gZn0sRE06ZnVuY3Rpb24oKXtyZXR1cm4gan0sRTk6ZnVuY3Rpb24oKXtyZXR1cm4gaWV9LEY3OmZ1bmN0aW9uKCl7cmV0dXJuIFN9LEdnOmZ1bmN0aW9uKCl7cmV0dXJuIEd9LEhEOmZ1bmN0aW9uKCl7cmV0dXJuIEx9LEhlOmZ1bmN0aW9uKCl7cmV0dXJuIG9lfSxLajpmdW5jdGlvbigpe3JldHVybiBQfSxLbjpmdW5jdGlvbigpe3JldHVybiBNfSxOTzpmdW5jdGlvbigpe3JldHVybiBDfSxOajpmdW5jdGlvbigpe3JldHVybiBuZX0sT2Q6ZnVuY3Rpb24oKXtyZXR1cm4gSX0sUE86ZnVuY3Rpb24oKXtyZXR1cm4gVn0sUHE6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sUkk6ZnVuY3Rpb24oKXtyZXR1cm4gRX0sUzA6ZnVuY3Rpb24oKXtyZXR1cm4gS30sVzc6ZnVuY3Rpb24oKXtyZXR1cm4gSH0sV1Y6ZnVuY3Rpb24oKXtyZXR1cm4gZ30sWjY6ZnVuY3Rpb24oKXtyZXR1cm4ga30sX0E6ZnVuY3Rpb24oKXtyZXR1cm4gen0sX046ZnVuY3Rpb24oKXtyZXR1cm4gQX0sYVU6ZnVuY3Rpb24oKXtyZXR1cm4gZWV9LGRHOmZ1bmN0aW9uKCl7cmV0dXJuIHd9LGUxOmZ1bmN0aW9uKCl7cmV0dXJuIHN9LGZZOmZ1bmN0aW9uKCl7cmV0dXJuIHJ9LGg1OmZ1bmN0aW9uKCl7cmV0dXJuIHJlfSxoUjpmdW5jdGlvbigpe3JldHVybiBRfSxocTpmdW5jdGlvbigpe3JldHVybiBtfSxpcjpmdW5jdGlvbigpe3JldHVybiB0ZX0sajU6ZnVuY3Rpb24oKXtyZXR1cm4gaX0sa0M6ZnVuY3Rpb24oKXtyZXR1cm4gWX0sa0o6ZnVuY3Rpb24oKXtyZXR1cm4gRn0sa1Q6ZnVuY3Rpb24oKXtyZXR1cm4gYn0sbDc6ZnVuY3Rpb24oKXtyZXR1cm4gVH0sbWY6ZnVuY3Rpb24oKXtyZXR1cm4gVX0scnM6ZnVuY3Rpb24oKXtyZXR1cm4gWH0sdEk6ZnVuY3Rpb24oKXtyZXR1cm4gSn0sdFI6ZnVuY3Rpb24oKXtyZXR1cm4gUn0seUE6ZnVuY3Rpb24oKXtyZXR1cm4gaH0seWs6ZnVuY3Rpb24oKXtyZXR1cm4gJH0senc6ZnVuY3Rpb24oKXtyZXR1cm4gX319KTtjb25zdCBvPSJJbmZpbml0eSx1bmRlZmluZWQsTmFOLGlzRmluaXRlLGlzTmFOLHBhcnNlRmxvYXQscGFyc2VJbnQsZGVjb2RlVVJJLGRlY29kZVVSSUNvbXBvbmVudCxlbmNvZGVVUkksZW5jb2RlVVJJQ29tcG9uZW50LE1hdGgsTnVtYmVyLERhdGUsQXJyYXksT2JqZWN0LEJvb2xlYW4sU3RyaW5nLFJlZ0V4cCxNYXAsU2V0LEpTT04sSW50bCxCaWdJbnQiLHM9cihvKTtmdW5jdGlvbiBpKGUpe2lmKEYoZSkpe2NvbnN0IHQ9e307Zm9yKGxldCBuPTA7bjxlLmxlbmd0aDtuKyspe2NvbnN0IHI9ZVtuXSxvPUwocik/YShyKTppKHIpO2lmKG8pZm9yKGNvbnN0IGUgaW4gbyl0W2VdPW9bZV19cmV0dXJuIHR9cmV0dXJuIEwoZSl8fE0oZSk/ZTp2b2lkIDB9Y29uc3QgbD0vOyg/IVteKF0qXCkpL2csYz0vOihbXl0rKS8sdT0vXC9cKi4qP1wqXC8vZ3M7ZnVuY3Rpb24gYShlKXtjb25zdCB0PXt9O3JldHVybiBlLnJlcGxhY2UodSwiIikuc3BsaXQobCkuZm9yRWFjaCgoZT0+e2lmKGUpe2NvbnN0IG49ZS5zcGxpdChjKTtuLmxlbmd0aD4xJiYodFtuWzBdLnRyaW0oKV09blsxXS50cmltKCkpfX0pKSx0fWZ1bmN0aW9uIGYoZSl7bGV0IHQ9IiI7aWYoTChlKSl0PWU7ZWxzZSBpZihGKGUpKWZvcihsZXQgbj0wO248ZS5sZW5ndGg7bisrKXtjb25zdCByPWYoZVtuXSk7ciYmKHQrPXIrIiAiKX1lbHNlIGlmKE0oZSkpZm9yKGNvbnN0IG4gaW4gZSllW25dJiYodCs9bisiICIpO3JldHVybiB0LnRyaW0oKX1jb25zdCBwPSJpdGVtc2NvcGUsYWxsb3dmdWxsc2NyZWVuLGZvcm1ub3ZhbGlkYXRlLGlzbWFwLG5vbW9kdWxlLG5vdmFsaWRhdGUscmVhZG9ubHkiLGQ9cihwKTtmdW5jdGlvbiBoKGUpe3JldHVybiEhZXx8IiI9PT1lfWZ1bmN0aW9uIHYoZSx0KXtpZihlLmxlbmd0aCE9PXQubGVuZ3RoKXJldHVybiExO2xldCBuPSEwO2ZvcihsZXQgcj0wO24mJnI8ZS5sZW5ndGg7cisrKW49ZyhlW3JdLHRbcl0pO3JldHVybiBufWZ1bmN0aW9uIGcoZSx0KXtpZihlPT09dClyZXR1cm4hMDtsZXQgbj1OKGUpLHI9Tih0KTtpZihufHxyKXJldHVybiEoIW58fCFyKSYmZS5nZXRUaW1lKCk9PT10LmdldFRpbWUoKTtpZihuPSQoZSkscj0kKHQpLG58fHIpcmV0dXJuIGU9PT10O2lmKG49RihlKSxyPUYodCksbnx8cilyZXR1cm4hKCFufHwhcikmJnYoZSx0KTtpZihuPU0oZSkscj1NKHQpLG58fHIpe2lmKCFufHwhcilyZXR1cm4hMTtjb25zdCBvPU9iamVjdC5rZXlzKGUpLmxlbmd0aCxzPU9iamVjdC5rZXlzKHQpLmxlbmd0aDtpZihvIT09cylyZXR1cm4hMTtmb3IoY29uc3QgbiBpbiBlKXtjb25zdCByPWUuaGFzT3duUHJvcGVydHkobiksbz10Lmhhc093blByb3BlcnR5KG4pO2lmKHImJiFvfHwhciYmb3x8IWcoZVtuXSx0W25dKSlyZXR1cm4hMX19cmV0dXJuIFN0cmluZyhlKT09PVN0cmluZyh0KX1mdW5jdGlvbiBtKGUsdCl7cmV0dXJuIGUuZmluZEluZGV4KChlPT5nKGUsdCkpKX1jb25zdCBfPWU9PkwoZSk/ZTpudWxsPT1lPyIiOkYoZSl8fE0oZSkmJihlLnRvU3RyaW5nPT09RHx8IVUoZS50b1N0cmluZykpP0pTT04uc3RyaW5naWZ5KGUseSwyKTpTdHJpbmcoZSkseT0oZSx0KT0+dCYmdC5fX3ZfaXNSZWY/eShlLHQudmFsdWUpOkEodCk/e1tgTWFwKCR7dC5zaXplfSlgXTpbLi4udC5lbnRyaWVzKCldLnJlZHVjZSgoKGUsW3Qsbl0pPT4oZVtgJHt0fSA9PmBdPW4sZSkpLHt9KX06aih0KT97W2BTZXQoJHt0LnNpemV9KWBdOlsuLi50LnZhbHVlcygpXX06IU0odCl8fEYodCl8fFYodCk/dDpTdHJpbmcodCksYj17fSxrPVtdLHc9KCk9Pnt9LEM9KCk9PiExLHg9L15vblteYS16XS8sUz1lPT54LnRlc3QoZSksUj1lPT5lLnN0YXJ0c1dpdGgoIm9uVXBkYXRlOiIpLFQ9T2JqZWN0LmFzc2lnbixJPShlLHQpPT57Y29uc3Qgbj1lLmluZGV4T2YodCk7bj4tMSYmZS5zcGxpY2UobiwxKX0sTz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEU9KGUsdCk9Pk8uY2FsbChlLHQpLEY9QXJyYXkuaXNBcnJheSxBPWU9PiJbb2JqZWN0IE1hcF0iPT09QihlKSxqPWU9PiJbb2JqZWN0IFNldF0iPT09QihlKSxOPWU9PiJbb2JqZWN0IERhdGVdIj09PUIoZSksUD1lPT4iW29iamVjdCBSZWdFeHBdIj09PUIoZSksVT1lPT4iZnVuY3Rpb24iPT09dHlwZW9mIGUsTD1lPT4ic3RyaW5nIj09PXR5cGVvZiBlLCQ9ZT0+InN5bWJvbCI9PT10eXBlb2YgZSxNPWU9Pm51bGwhPT1lJiYib2JqZWN0Ij09PXR5cGVvZiBlLEo9ZT0+TShlKSYmVShlLnRoZW4pJiZVKGUuY2F0Y2gpLEQ9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyxCPWU9PkQuY2FsbChlKSxIPWU9PkIoZSkuc2xpY2UoOCwtMSksVj1lPT4iW29iamVjdCBPYmplY3RdIj09PUIoZSksSz1lPT5MKGUpJiYiTmFOIiE9PWUmJiItIiE9PWVbMF0mJiIiK3BhcnNlSW50KGUsMTApPT09ZSxHPXIoIixrZXkscmVmLHJlZl9mb3IscmVmX2tleSxvblZub2RlQmVmb3JlTW91bnQsb25Wbm9kZU1vdW50ZWQsb25Wbm9kZUJlZm9yZVVwZGF0ZSxvblZub2RlVXBkYXRlZCxvblZub2RlQmVmb3JlVW5tb3VudCxvblZub2RlVW5tb3VudGVkIiksVz1lPT57Y29uc3QgdD1PYmplY3QuY3JlYXRlKG51bGwpO3JldHVybiBuPT57Y29uc3Qgcj10W25dO3JldHVybiByfHwodFtuXT1lKG4pKX19LHE9Ly0oXHcpL2csej1XKChlPT5lLnJlcGxhY2UocSwoKGUsdCk9PnQ/dC50b1VwcGVyQ2FzZSgpOiIiKSkpKSxaPS9cQihbQS1aXSkvZyxYPVcoKGU9PmUucmVwbGFjZShaLCItJDEiKS50b0xvd2VyQ2FzZSgpKSksWT1XKChlPT5lLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSkpKSxRPVcoKGU9PmU/YG9uJHtZKGUpfWA6IiIpKSxlZT0oZSx0KT0+IU9iamVjdC5pcyhlLHQpLHRlPShlLHQpPT57Zm9yKGxldCBuPTA7bjxlLmxlbmd0aDtuKyspZVtuXSh0KX0sbmU9KGUsdCxuKT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLHZhbHVlOm59KX0scmU9ZT0+e2NvbnN0IHQ9cGFyc2VGbG9hdChlKTtyZXR1cm4gaXNOYU4odCk/ZTp0fSxvZT1lPT57Y29uc3QgdD1MKGUpP051bWJlcihlKTpOYU47cmV0dXJuIGlzTmFOKHQpP2U6dH07bGV0IHNlO2NvbnN0IGllPSgpPT5zZXx8KHNlPSJ1bmRlZmluZWQiIT09dHlwZW9mIGdsb2JhbFRoaXM/Z2xvYmFsVGhpczoidW5kZWZpbmVkIiE9PXR5cGVvZiBzZWxmP3NlbGY6InVuZGVmaW5lZCIhPT10eXBlb2Ygd2luZG93P3dpbmRvdzoidW5kZWZpbmVkIiE9PXR5cGVvZiBuLmc/bi5nOnt9KX0sNjU1OmZ1bmN0aW9uKGUsdCxuKXtuLmQodCx7Smg6ZnVuY3Rpb24oKXtyZXR1cm4gb30sbUc6ZnVuY3Rpb24oKXtyZXR1cm4gcn19KTtmdW5jdGlvbiByKGUsdCxuLHIpe2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBuP2U6bmV3IG4oKGZ1bmN0aW9uKHQpe3QoZSl9KSl9cmV0dXJuIG5ldyhufHwobj1Qcm9taXNlKSkoKGZ1bmN0aW9uKG4scyl7ZnVuY3Rpb24gaShlKXt0cnl7YyhyLm5leHQoZSkpfWNhdGNoKHQpe3ModCl9fWZ1bmN0aW9uIGwoZSl7dHJ5e2MoclsidGhyb3ciXShlKSl9Y2F0Y2godCl7cyh0KX19ZnVuY3Rpb24gYyhlKXtlLmRvbmU/bihlLnZhbHVlKTpvKGUudmFsdWUpLnRoZW4oaSxsKX1jKChyPXIuYXBwbHkoZSx0fHxbXSkpLm5leHQoKSl9KSl9ZnVuY3Rpb24gbyhlLHQpe3ZhciBuLHIsbyxzLGk9e2xhYmVsOjAsc2VudDpmdW5jdGlvbigpe2lmKDEmb1swXSl0aHJvdyBvWzFdO3JldHVybiBvWzFdfSx0cnlzOltdLG9wczpbXX07cmV0dXJuIHM9e25leHQ6bCgwKSx0aHJvdzpsKDEpLHJldHVybjpsKDIpfSwiZnVuY3Rpb24iPT09dHlwZW9mIFN5bWJvbCYmKHNbU3ltYm9sLml0ZXJhdG9yXT1mdW5jdGlvbigpe3JldHVybiB0aGlzfSkscztmdW5jdGlvbiBsKGUpe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gYyhbZSx0XSl9fWZ1bmN0aW9uIGMobCl7aWYobil0aHJvdyBuZXcgVHlwZUVycm9yKCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuIik7d2hpbGUocyYmKHM9MCxsWzBdJiYoaT0wKSksaSl0cnl7aWYobj0xLHImJihvPTImbFswXT9yWyJyZXR1cm4iXTpsWzBdP3JbInRocm93Il18fCgobz1yWyJyZXR1cm4iXSkmJm8uY2FsbChyKSwwKTpyLm5leHQpJiYhKG89by5jYWxsKHIsbFsxXSkpLmRvbmUpcmV0dXJuIG87c3dpdGNoKHI9MCxvJiYobD1bMiZsWzBdLG8udmFsdWVdKSxsWzBdKXtjYXNlIDA6Y2FzZSAxOm89bDticmVhaztjYXNlIDQ6cmV0dXJuIGkubGFiZWwrKyx7dmFsdWU6bFsxXSxkb25lOiExfTtjYXNlIDU6aS5sYWJlbCsrLHI9bFsxXSxsPVswXTtjb250aW51ZTtjYXNlIDc6bD1pLm9wcy5wb3AoKSxpLnRyeXMucG9wKCk7Y29udGludWU7ZGVmYXVsdDppZihvPWkudHJ5cywhKG89by5sZW5ndGg+MCYmb1tvLmxlbmd0aC0xXSkmJig2PT09bFswXXx8Mj09PWxbMF0pKXtpPTA7Y29udGludWV9aWYoMz09PWxbMF0mJighb3x8bFsxXT5vWzBdJiZsWzFdPG9bM10pKXtpLmxhYmVsPWxbMV07YnJlYWt9aWYoNj09PWxbMF0mJmkubGFiZWw8b1sxXSl7aS5sYWJlbD1vWzFdLG89bDticmVha31pZihvJiZpLmxhYmVsPG9bMl0pe2kubGFiZWw9b1syXSxpLm9wcy5wdXNoKGwpO2JyZWFrfW9bMl0mJmkub3BzLnBvcCgpLGkudHJ5cy5wb3AoKTtjb250aW51ZX1sPXQuY2FsbChlLGkpfWNhdGNoKGMpe2w9WzYsY10scj0wfWZpbmFsbHl7bj1vPTB9aWYoNSZsWzBdKXRocm93IGxbMV07cmV0dXJue3ZhbHVlOmxbMF0/bFsxXTp2b2lkIDAsZG9uZTohMH19fU9iamVjdC5jcmVhdGU7T2JqZWN0LmNyZWF0ZX0sNzQ0OmZ1bmN0aW9uKGUsdCl7dC5aPShlLHQpPT57Y29uc3Qgbj1lLl9fdmNjT3B0c3x8ZTtmb3IoY29uc3RbcixvXW9mIHQpbltyXT1vO3JldHVybiBufX19XSk7Ci8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLXZlbmRvcnMuNzczOTBkYzIuanMubWFw'; 'ContentType' = 'application/javascript' }
	'/js/chunk-vendors.77390dc2.js.map' = @{ 'Content' = ''; 'ContentType' = 'text/plain' }
}

# Setup server
$http = [System.Net.HttpListener]::new() 
$http.Prefixes.Add("http://localhost:8081/")
$http.Start()

if ($http.IsListening) {
    write-host " HTTP Server Ready!  " -f 'black' -b 'gre'
    write-host "Listening at $($http.Prefixes)..." -f 'y'
    if ($openSite) {
        Start-Process $http.Prefixes
    }
}

# Helper functions
function CompareRequest {
    param($context, $method, $path);
    return $context.Request.HttpMethod -eq $method -and $context.Request.Url.LocalPath -like $path
}

function RequestFile {
    param($context, $localPath);
    if (!$fileDatas.ContainsKey($localPath)) { Write-Warning "Do not have file '$localPath'"; return }
    $byteData = [Convert]::FromBase64String($fileDatas.$localPath.Content)
    RespondByteData $context $byteData $fileDatas.$localPath.ContentType
}

function RespondByteData {
    param($context, $bytes, $type);
    $context.Response.ContentLength64 = $bytes.Length
    $context.Response.ContentType = $type
    $context.Response.OutputStream.Write($bytes, 0, $bytes.Length)
    $context.Response.OutputStream.Close()
}

function GetMachineState {
    param($context);
    $queryData = ConvertFrom-Json $context.Request.QueryString["config"]
    if ($null -eq $queryData) { return }
    Write-Host $queryData

    Write-Host "Testing remote access"
    try {  
        Invoke-Command -ComputerName $queryData.ip { 1 } -ErrorAction Stop
        Write-Host "Online"
        $context.Response.OutputStream.Close()
    }
    catch {
        If ($PSItem.Exception.Message.Contains("Access is denied")) {
            Write-Host "Offline (Remoting not enabled)"
        }
        else {
            Write-Host "Offline (DNS)"
        }
        $context.Response.OutputStream.Close()
    }
}

# Listener loop
while ($http.IsListening) {
    $context = $http.GetContext()
    
    Write-Host "'$($context.Request.UserHostAddress)' requested '$($Context.Request.Url.LocalPath)' ( $($context.Request.Url) )" -f 'mag'

    # GET /exit
    if (CompareRequest $context "GET" "/exit") {
        exit
    }

    # GET /machineState
    elseif (CompareRequest $context "GET" "/machineState") {
        GetMachineState $context
    }
    
    # GET /*
    elseif (CompareRequest $context "GET" "/*") {
        $localPath = $context.Request.Url.LocalPath
        if ($localPath -eq "/") { $localPath = "/index.html" }
        RequestFile $context $localPath
    }
}
